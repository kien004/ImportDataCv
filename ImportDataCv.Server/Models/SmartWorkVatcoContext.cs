using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore;

namespace ImportDataCv.Server.Models;

public partial class SmartWorkVatcoContext : DbContext
{
    public SmartWorkVatcoContext()
    {
    }

    public SmartWorkVatcoContext(DbContextOptions<SmartWorkVatcoContext> options)
        : base(options)
    {
    }

    public virtual DbSet<ActInstanceUserActivity> ActInstanceUserActivities { get; set; }

    public virtual DbSet<Activity> Activities { get; set; }

    public virtual DbSet<ActivityAttrDatum> ActivityAttrData { get; set; }

    public virtual DbSet<ActivityAttrSetup> ActivityAttrSetups { get; set; }

    public virtual DbSet<ActivityFile> ActivityFiles { get; set; }

    public virtual DbSet<ActivityInstFile> ActivityInstFiles { get; set; }

    public virtual DbSet<ActivityInstance> ActivityInstances { get; set; }

    public virtual DbSet<ActivityInstanceLogDatum> ActivityInstanceLogData { get; set; }

    public virtual DbSet<ActivityInstanceObjective> ActivityInstanceObjectives { get; set; }

    public virtual DbSet<ActivityLogDatum> ActivityLogData { get; set; }

    public virtual DbSet<ActivityTransition> ActivityTransitions { get; set; }

    public virtual DbSet<ActivityWorkflow> ActivityWorkflows { get; set; }

    public virtual DbSet<AdAccessLog> AdAccessLogs { get; set; }

    public virtual DbSet<AdActionLog> AdActionLogs { get; set; }

    public virtual DbSet<AdAppFunction> AdAppFunctions { get; set; }

    public virtual DbSet<AdApplication> AdApplications { get; set; }

    public virtual DbSet<AdAuthoring> AdAuthorings { get; set; }

    public virtual DbSet<AdDepartment> AdDepartments { get; set; }

    public virtual DbSet<AdDepartmentDeploy> AdDepartmentDeploys { get; set; }

    public virtual DbSet<AdDivision> AdDivisions { get; set; }

    public virtual DbSet<AdDivisionCopy> AdDivisionCopies { get; set; }

    public virtual DbSet<AdFunction> AdFunctions { get; set; }

    public virtual DbSet<AdFunctionBackUp> AdFunctionBackUps { get; set; }

    public virtual DbSet<AdGroupUser> AdGroupUsers { get; set; }

    public virtual DbSet<AdGroupUserDeploy> AdGroupUserDeploys { get; set; }

    public virtual DbSet<AdLanguage> AdLanguages { get; set; }

    public virtual DbSet<AdLanguageText> AdLanguageTexts { get; set; }

    public virtual DbSet<AdOrganization> AdOrganizations { get; set; }

    public virtual DbSet<AdOrganizationDeploy> AdOrganizationDeploys { get; set; }

    public virtual DbSet<AdParameter> AdParameters { get; set; }

    public virtual DbSet<AdPermission> AdPermissions { get; set; }

    public virtual DbSet<AdPrivilege> AdPrivileges { get; set; }

    public virtual DbSet<AdPrivilegeBackUp> AdPrivilegeBackUps { get; set; }

    public virtual DbSet<AdResource> AdResources { get; set; }

    public virtual DbSet<AdResourceBack02112020> AdResourceBack02112020s { get; set; }

    public virtual DbSet<AdResourceBackUp> AdResourceBackUps { get; set; }

    public virtual DbSet<AdUserDepartment> AdUserDepartments { get; set; }

    public virtual DbSet<AdUserInGroup> AdUserInGroups { get; set; }

    public virtual DbSet<AddonApp> AddonApps { get; set; }

    public virtual DbSet<AddonAppServer> AddonAppServers { get; set; }

    public virtual DbSet<AdminBoundaryVn> AdminBoundaryVns { get; set; }

    public virtual DbSet<AdminProvinceVn> AdminProvinceVns { get; set; }

    public virtual DbSet<AllowanceCat> AllowanceCats { get; set; }

    public virtual DbSet<AllowanceEmployeeAccept> AllowanceEmployeeAccepts { get; set; }

    public virtual DbSet<AllowanceEmployeeMonth> AllowanceEmployeeMonths { get; set; }

    public virtual DbSet<AllowanceEmployeeParam> AllowanceEmployeeParams { get; set; }

    public virtual DbSet<AllowanceParam> AllowanceParams { get; set; }

    public virtual DbSet<AmChartReDeMonth> AmChartReDeMonths { get; set; }

    public virtual DbSet<AncestralHouse> AncestralHouses { get; set; }

    public virtual DbSet<AppMeeting> AppMeetings { get; set; }

    public virtual DbSet<AppVendor> AppVendors { get; set; }

    public virtual DbSet<AseanDocument> AseanDocuments { get; set; }

    public virtual DbSet<AspNetRole> AspNetRoles { get; set; }

    public virtual DbSet<AspNetRoleClaim> AspNetRoleClaims { get; set; }

    public virtual DbSet<AspNetRoleDeploy> AspNetRoleDeploys { get; set; }

    public virtual DbSet<AspNetUser> AspNetUsers { get; set; }

    public virtual DbSet<AspNetUserClaim> AspNetUserClaims { get; set; }

    public virtual DbSet<AspNetUserDeploy> AspNetUserDeploys { get; set; }

    public virtual DbSet<AspNetUserLogin> AspNetUserLogins { get; set; }

    public virtual DbSet<AspNetUserRole> AspNetUserRoles { get; set; }

    public virtual DbSet<AspNetUserToken> AspNetUserTokens { get; set; }

    public virtual DbSet<AspNetUsersTest> AspNetUsersTests { get; set; }

    public virtual DbSet<Asset> Assets { get; set; }

    public virtual DbSet<AssetActivity> AssetActivities { get; set; }

    public virtual DbSet<AssetActivityCalendar> AssetActivityCalendars { get; set; }

    public virtual DbSet<AssetAllocateDetail> AssetAllocateDetails { get; set; }

    public virtual DbSet<AssetAllocateFile> AssetAllocateFiles { get; set; }

    public virtual DbSet<AssetAllocateHeader> AssetAllocateHeaders { get; set; }

    public virtual DbSet<AssetAttrGalaxy> AssetAttrGalaxies { get; set; }

    public virtual DbSet<AssetAttribute> AssetAttributes { get; set; }

    public virtual DbSet<AssetBuyDetail> AssetBuyDetails { get; set; }

    public virtual DbSet<AssetBuyFile> AssetBuyFiles { get; set; }

    public virtual DbSet<AssetBuyHeader> AssetBuyHeaders { get; set; }

    public virtual DbSet<AssetCancelDetail> AssetCancelDetails { get; set; }

    public virtual DbSet<AssetCancelFile> AssetCancelFiles { get; set; }

    public virtual DbSet<AssetCancelHeader> AssetCancelHeaders { get; set; }

    public virtual DbSet<AssetEntityMapping> AssetEntityMappings { get; set; }

    public virtual DbSet<AssetGroup> AssetGroups { get; set; }

    public virtual DbSet<AssetImprovementCategory> AssetImprovementCategories { get; set; }

    public virtual DbSet<AssetImprovementDetail> AssetImprovementDetails { get; set; }

    public virtual DbSet<AssetImprovementFile> AssetImprovementFiles { get; set; }

    public virtual DbSet<AssetImprovementHeader> AssetImprovementHeaders { get; set; }

    public virtual DbSet<AssetInventoryDetail> AssetInventoryDetails { get; set; }

    public virtual DbSet<AssetInventoryFile> AssetInventoryFiles { get; set; }

    public virtual DbSet<AssetInventoryHeader> AssetInventoryHeaders { get; set; }

    public virtual DbSet<AssetLiquidationDetail> AssetLiquidationDetails { get; set; }

    public virtual DbSet<AssetLiquidationFile> AssetLiquidationFiles { get; set; }

    public virtual DbSet<AssetLiquidationHeader> AssetLiquidationHeaders { get; set; }

    public virtual DbSet<AssetMain> AssetMains { get; set; }

    public virtual DbSet<AssetMaintenanceCategory> AssetMaintenanceCategories { get; set; }

    public virtual DbSet<AssetMaintenanceDetail> AssetMaintenanceDetails { get; set; }

    public virtual DbSet<AssetMaintenanceFile> AssetMaintenanceFiles { get; set; }

    public virtual DbSet<AssetMaintenanceHeader> AssetMaintenanceHeaders { get; set; }

    public virtual DbSet<AssetRecalledDetail> AssetRecalledDetails { get; set; }

    public virtual DbSet<AssetRecalledFile> AssetRecalledFiles { get; set; }

    public virtual DbSet<AssetRecalledHeader> AssetRecalledHeaders { get; set; }

    public virtual DbSet<AssetRecordDeliveryDetail> AssetRecordDeliveryDetails { get; set; }

    public virtual DbSet<AssetRecordDeliveryHeader> AssetRecordDeliveryHeaders { get; set; }

    public virtual DbSet<AssetRecordsPack> AssetRecordsPacks { get; set; }

    public virtual DbSet<AssetRecordsPackAttr> AssetRecordsPackAttrs { get; set; }

    public virtual DbSet<AssetRecordsPackFile> AssetRecordsPackFiles { get; set; }

    public virtual DbSet<AssetReqMaintainceReparrDetail> AssetReqMaintainceReparrDetails { get; set; }

    public virtual DbSet<AssetReqMaintainceReparrFile> AssetReqMaintainceReparrFiles { get; set; }

    public virtual DbSet<AssetReqMaintainceReparrHeader> AssetReqMaintainceReparrHeaders { get; set; }

    public virtual DbSet<AssetRptBrokenDetail> AssetRptBrokenDetails { get; set; }

    public virtual DbSet<AssetRptBrokenFile> AssetRptBrokenFiles { get; set; }

    public virtual DbSet<AssetRptBrokenHeader> AssetRptBrokenHeaders { get; set; }

    public virtual DbSet<AssetTransferDetail> AssetTransferDetails { get; set; }

    public virtual DbSet<AssetTransferFile> AssetTransferFiles { get; set; }

    public virtual DbSet<AssetTransferHeader> AssetTransferHeaders { get; set; }

    public virtual DbSet<AssetType> AssetTypes { get; set; }

    public virtual DbSet<AssetZoneAttr> AssetZoneAttrs { get; set; }

    public virtual DbSet<AssetZoneMapping> AssetZoneMappings { get; set; }

    public virtual DbSet<AssetZoneStruct> AssetZoneStructs { get; set; }

    public virtual DbSet<AssignMemberToObject> AssignMemberToObjects { get; set; }

    public virtual DbSet<AttrGalaxy> AttrGalaxies { get; set; }

    public virtual DbSet<AttrGalaxyAet> AttrGalaxyAets { get; set; }

    public virtual DbSet<AttrManager> AttrManagers { get; set; }

    public virtual DbSet<AttrManagerGalaxy> AttrManagerGalaxies { get; set; }

    public virtual DbSet<AttrSetup> AttrSetups { get; set; }

    public virtual DbSet<Award> Awards { get; set; }

    public virtual DbSet<AwsDomain> AwsDomains { get; set; }

    public virtual DbSet<BackendInstance> BackendInstances { get; set; }

    public virtual DbSet<BlogArticle> BlogArticles { get; set; }

    public virtual DbSet<BlogCategory> BlogCategories { get; set; }

    public virtual DbSet<BomActivityAttr> BomActivityAttrs { get; set; }

    public virtual DbSet<BomAttrGroup> BomAttrGroups { get; set; }

    public virtual DbSet<BomDelivertHeader> BomDelivertHeaders { get; set; }

    public virtual DbSet<BomDelivertOrderDetail> BomDelivertOrderDetails { get; set; }

    public virtual DbSet<BomDeliveryHeader> BomDeliveryHeaders { get; set; }

    public virtual DbSet<BomDeliveryOrderDetail> BomDeliveryOrderDetails { get; set; }

    public virtual DbSet<BomGattrExt> BomGattrExts { get; set; }

    public virtual DbSet<BomH> BomHs { get; set; }

    public virtual DbSet<BomItemConsumption> BomItemConsumptions { get; set; }

    public virtual DbSet<BomItemOnChanel> BomItemOnChanels { get; set; }

    public virtual DbSet<BomItemStructure> BomItemStructures { get; set; }

    public virtual DbSet<BomMarkLotUsed> BomMarkLotUseds { get; set; }

    public virtual DbSet<BomProductionWarehouseDt> BomProductionWarehouseDts { get; set; }

    public virtual DbSet<BomProductionWarehouseHd> BomProductionWarehouseHds { get; set; }

    public virtual DbSet<BomRt> BomRts { get; set; }

    public virtual DbSet<BomWorkorder> BomWorkorders { get; set; }

    public virtual DbSet<BomWorkorderDetail> BomWorkorderDetails { get; set; }

    public virtual DbSet<BotSocialManagement> BotSocialManagements { get; set; }

    public virtual DbSet<BotSocialSessionLog> BotSocialSessionLogs { get; set; }

    public virtual DbSet<BsCrawlerSocialNetworkParam> BsCrawlerSocialNetworkParams { get; set; }

    public virtual DbSet<BwBotInstantDatamining> BwBotInstantDataminings { get; set; }

    public virtual DbSet<BwCrawlerDomainParam> BwCrawlerDomainParams { get; set; }

    public virtual DbSet<BwCrawlerJobSchedule> BwCrawlerJobSchedules { get; set; }

    public virtual DbSet<BwCrawlerRunningLog> BwCrawlerRunningLogs { get; set; }

    public virtual DbSet<BwWebrtcChannelControl> BwWebrtcChannelControls { get; set; }

    public virtual DbSet<BwWebsyncServerChannel> BwWebsyncServerChannels { get; set; }

    public virtual DbSet<CameraRoom> CameraRooms { get; set; }

    public virtual DbSet<CandidateBasic> CandidateBasics { get; set; }

    public virtual DbSet<CandidateCvStorage> CandidateCvStorages { get; set; }

    public virtual DbSet<CandidateInterview> CandidateInterviews { get; set; }

    public virtual DbSet<CandidateWorkEvent> CandidateWorkEvents { get; set; }

    public virtual DbSet<CardAttachment> CardAttachments { get; set; }

    public virtual DbSet<CardAttachmentCopy> CardAttachmentCopies { get; set; }

    public virtual DbSet<CardCommentList> CardCommentLists { get; set; }

    public virtual DbSet<CardItemCheck> CardItemChecks { get; set; }

    public virtual DbSet<CardItemCheckTrackingProgress> CardItemCheckTrackingProgresses { get; set; }

    public virtual DbSet<CardMapping> CardMappings { get; set; }

    public virtual DbSet<CardProduct> CardProducts { get; set; }

    public virtual DbSet<CardSubitemCheck> CardSubitemChecks { get; set; }

    public virtual DbSet<CardUserActivity> CardUserActivities { get; set; }

    public virtual DbSet<CareerCatScale> CareerCatScales { get; set; }

    public virtual DbSet<CatActivity> CatActivities { get; set; }

    public virtual DbSet<CatWorkFlow> CatWorkFlows { get; set; }

    public virtual DbSet<CategoryCareer> CategoryCareers { get; set; }

    public virtual DbSet<CategoryWorksheet> CategoryWorksheets { get; set; }

    public virtual DbSet<ChartReDeMonth> ChartReDeMonths { get; set; }

    public virtual DbSet<ChatGroup> ChatGroups { get; set; }

    public virtual DbSet<ChatHistory> ChatHistories { get; set; }

    public virtual DbSet<CmsAttachment> CmsAttachments { get; set; }

    public virtual DbSet<CmsCategory> CmsCategories { get; set; }

    public virtual DbSet<CmsComment> CmsComments { get; set; }

    public virtual DbSet<CmsExtraField> CmsExtraFields { get; set; }

    public virtual DbSet<CmsExtraFieldsGroup> CmsExtraFieldsGroups { get; set; }

    public virtual DbSet<CmsExtraFieldsValue> CmsExtraFieldsValues { get; set; }

    public virtual DbSet<CmsFunction> CmsFunctions { get; set; }

    public virtual DbSet<CmsFunctionGroup> CmsFunctionGroups { get; set; }

    public virtual DbSet<CmsFunctionResource> CmsFunctionResources { get; set; }

    public virtual DbSet<CmsItem> CmsItems { get; set; }

    public virtual DbSet<CmsRating> CmsRatings { get; set; }

    public virtual DbSet<CmsRole> CmsRoles { get; set; }

    public virtual DbSet<CmsSetting> CmsSettings { get; set; }

    public virtual DbSet<CmsTag> CmsTags { get; set; }

    public virtual DbSet<CmsTagsXref> CmsTagsXrefs { get; set; }

    public virtual DbSet<CoinRateExchange> CoinRateExchanges { get; set; }

    public virtual DbSet<CommAttribute> CommAttributes { get; set; }

    public virtual DbSet<CommitmentDetail> CommitmentDetails { get; set; }

    public virtual DbSet<CommitmentHeader> CommitmentHeaders { get; set; }

    public virtual DbSet<CommonSetting> CommonSettings { get; set; }

    public virtual DbSet<CommonSettingArticle> CommonSettingArticles { get; set; }

    public virtual DbSet<CommonSettingCategory> CommonSettingCategories { get; set; }

    public virtual DbSet<CommonSettingCategoryCopy> CommonSettingCategoryCopies { get; set; }

    public virtual DbSet<CommonSettingGroup> CommonSettingGroups { get; set; }

    public virtual DbSet<CompanyBankAccount> CompanyBankAccounts { get; set; }

    public virtual DbSet<CompanyRuleItem> CompanyRuleItems { get; set; }

    public virtual DbSet<CompanyScheduleWork> CompanyScheduleWorks { get; set; }

    public virtual DbSet<Contact> Contacts { get; set; }

    public virtual DbSet<ContractActivity> ContractActivities { get; set; }

    public virtual DbSet<ContractAttribute> ContractAttributes { get; set; }

    public virtual DbSet<ContractAttributeHi> ContractAttributeHis { get; set; }

    public virtual DbSet<ContractDetail> ContractDetails { get; set; }

    public virtual DbSet<ContractFile> ContractFiles { get; set; }

    public virtual DbSet<ContractMemberTask> ContractMemberTasks { get; set; }

    public virtual DbSet<ContractNote> ContractNotes { get; set; }

    public virtual DbSet<ContractPeopleTag> ContractPeopleTags { get; set; }

    public virtual DbSet<ContractPoSchedulePay> ContractPoSchedulePays { get; set; }

    public virtual DbSet<ContractSchedulePay> ContractSchedulePays { get; set; }

    public virtual DbSet<ContractSchedulePayHi> ContractSchedulePayHis { get; set; }

    public virtual DbSet<ContractServiceDetail> ContractServiceDetails { get; set; }

    public virtual DbSet<ContractServiceDetailHi> ContractServiceDetailHis { get; set; }

    public virtual DbSet<CostTableLog> CostTableLogs { get; set; }

    public virtual DbSet<CrawlerActionGroup> CrawlerActionGroups { get; set; }

    public virtual DbSet<CrawlerBotManagement> CrawlerBotManagements { get; set; }

    public virtual DbSet<CrawlerDomainConfiguration> CrawlerDomainConfigurations { get; set; }

    public virtual DbSet<CrawlerDomainConfigurationParam> CrawlerDomainConfigurationParams { get; set; }

    public virtual DbSet<CrawlerInfoFacebookGroup> CrawlerInfoFacebookGroups { get; set; }

    public virtual DbSet<CrawlerJobSchedule> CrawlerJobSchedules { get; set; }

    public virtual DbSet<CrawlerKeyword> CrawlerKeywords { get; set; }

    public virtual DbSet<CrawlerManageIpRunningBot> CrawlerManageIpRunningBots { get; set; }

    public virtual DbSet<CrawlerRunningLog> CrawlerRunningLogs { get; set; }

    public virtual DbSet<CrawlerSessionContentResult> CrawlerSessionContentResults { get; set; }

    public virtual DbSet<CrawlerSocialNetworkParam> CrawlerSocialNetworkParams { get; set; }

    public virtual DbSet<CriteriaRecruitmentAttrDatum> CriteriaRecruitmentAttrData { get; set; }

    public virtual DbSet<CriteriaRecruitmentCat> CriteriaRecruitmentCats { get; set; }

    public virtual DbSet<CrudHung> CrudHungs { get; set; }

    public virtual DbSet<Customer> Customers { get; set; }

    public virtual DbSet<CustomerAppointment> CustomerAppointments { get; set; }

    public virtual DbSet<CustomerAttribute> CustomerAttributes { get; set; }

    public virtual DbSet<CustomerExtend> CustomerExtends { get; set; }

    public virtual DbSet<CustomerFile> CustomerFiles { get; set; }

    public virtual DbSet<CustomerModuleRequest> CustomerModuleRequests { get; set; }

    public virtual DbSet<CustomerReminder> CustomerReminders { get; set; }

    public virtual DbSet<CylinkerFuelLoadingDt> CylinkerFuelLoadingDts { get; set; }

    public virtual DbSet<CylinkerFuelLoadingHd> CylinkerFuelLoadingHds { get; set; }

    public virtual DbSet<DashboardDataJson> DashboardDataJsons { get; set; }

    public virtual DbSet<DashboardDataJsonCopy> DashboardDataJsonCopies { get; set; }

    public virtual DbSet<DatabaseInstance> DatabaseInstances { get; set; }

    public virtual DbSet<DatabaseServer> DatabaseServers { get; set; }

    public virtual DbSet<DbVAmchartSocialSessionLog> DbVAmchartSocialSessionLogs { get; set; }

    public virtual DbSet<DecisionBonusDisciplineDetail> DecisionBonusDisciplineDetails { get; set; }

    public virtual DbSet<DecisionBonusDisciplineHeader> DecisionBonusDisciplineHeaders { get; set; }

    public virtual DbSet<DecisionMovementDetail> DecisionMovementDetails { get; set; }

    public virtual DbSet<DecisionMovementHeader> DecisionMovementHeaders { get; set; }

    public virtual DbSet<DeviceMeetingControl> DeviceMeetingControls { get; set; }

    public virtual DbSet<DispatchesCategory> DispatchesCategories { get; set; }

    public virtual DbSet<DispatchesCommentAct> DispatchesCommentActs { get; set; }

    public virtual DbSet<DispatchesFilesAct> DispatchesFilesActs { get; set; }

    public virtual DbSet<DispatchesHeader> DispatchesHeaders { get; set; }

    public virtual DbSet<DispatchesMemberActivity> DispatchesMemberActivities { get; set; }

    public virtual DbSet<DispatchesTrackingProcess> DispatchesTrackingProcesses { get; set; }

    public virtual DbSet<DispatchesUser> DispatchesUsers { get; set; }

    public virtual DbSet<DispatchesWeekWorkingScheduler> DispatchesWeekWorkingSchedulers { get; set; }

    public virtual DbSet<DynamicRegistSurvey> DynamicRegistSurveys { get; set; }

    public virtual DbSet<DynamicRegistSurveyDatum> DynamicRegistSurveyData { get; set; }

    public virtual DbSet<DynamicSurveyUser> DynamicSurveyUsers { get; set; }

    public virtual DbSet<EdmsAudioBook> EdmsAudioBooks { get; set; }

    public virtual DbSet<EdmsBox> EdmsBoxes { get; set; }

    public virtual DbSet<EdmsBoxFile> EdmsBoxFiles { get; set; }

    public virtual DbSet<EdmsBoxTracking> EdmsBoxTrackings { get; set; }

    public virtual DbSet<EdmsCatRepoSetting> EdmsCatRepoSettings { get; set; }

    public virtual DbSet<EdmsCategory> EdmsCategories { get; set; }

    public virtual DbSet<EdmsEntityMapping> EdmsEntityMappings { get; set; }

    public virtual DbSet<EdmsEntityMappingAsset> EdmsEntityMappingAssets { get; set; }

    public virtual DbSet<EdmsEntityMappingDocument> EdmsEntityMappingDocuments { get; set; }

    public virtual DbSet<EdmsFile> EdmsFiles { get; set; }

    public virtual DbSet<EdmsFilePackCover> EdmsFilePackCovers { get; set; }

    public virtual DbSet<EdmsFilePackCoverAsset> EdmsFilePackCoverAssets { get; set; }

    public virtual DbSet<EdmsFilePermission> EdmsFilePermissions { get; set; }

    public virtual DbSet<EdmsFloor> EdmsFloors { get; set; }

    public virtual DbSet<EdmsFloorAsset> EdmsFloorAssets { get; set; }

    public virtual DbSet<EdmsFloorDocument> EdmsFloorDocuments { get; set; }

    public virtual DbSet<EdmsLine> EdmsLines { get; set; }

    public virtual DbSet<EdmsLineAsset> EdmsLineAssets { get; set; }

    public virtual DbSet<EdmsLineDocument> EdmsLineDocuments { get; set; }

    public virtual DbSet<EdmsMoveBoxLog> EdmsMoveBoxLogs { get; set; }

    public virtual DbSet<EdmsMoveBoxLogDocument> EdmsMoveBoxLogDocuments { get; set; }

    public virtual DbSet<EdmsMoveProductLog> EdmsMoveProductLogs { get; set; }

    public virtual DbSet<EdmsObjectShareFile> EdmsObjectShareFiles { get; set; }

    public virtual DbSet<EdmsRack> EdmsRacks { get; set; }

    public virtual DbSet<EdmsRackAsset> EdmsRackAssets { get; set; }

    public virtual DbSet<EdmsRackDocument> EdmsRackDocuments { get; set; }

    public virtual DbSet<EdmsReceiptExportFile> EdmsReceiptExportFiles { get; set; }

    public virtual DbSet<EdmsReceiptExportStore> EdmsReceiptExportStores { get; set; }

    public virtual DbSet<EdmsReceiptInputFile> EdmsReceiptInputFiles { get; set; }

    public virtual DbSet<EdmsReceiptInputStore> EdmsReceiptInputStores { get; set; }

    public virtual DbSet<EdmsRemove> EdmsRemoves { get; set; }

    public virtual DbSet<EdmsRemoveBox> EdmsRemoveBoxes { get; set; }

    public virtual DbSet<EdmsRepoCatFile> EdmsRepoCatFiles { get; set; }

    public virtual DbSet<EdmsRepoDefaultObject> EdmsRepoDefaultObjects { get; set; }

    public virtual DbSet<EdmsRepository> EdmsRepositories { get; set; }

    public virtual DbSet<EdmsRequestEndBox> EdmsRequestEndBoxes { get; set; }

    public virtual DbSet<EdmsRequestExportFile> EdmsRequestExportFiles { get; set; }

    public virtual DbSet<EdmsRequestExportStore> EdmsRequestExportStores { get; set; }

    public virtual DbSet<EdmsRequestFile> EdmsRequestFiles { get; set; }

    public virtual DbSet<EdmsRequestInputFile> EdmsRequestInputFiles { get; set; }

    public virtual DbSet<EdmsRequestInputStore> EdmsRequestInputStores { get; set; }

    public virtual DbSet<EdmsRequestTracking> EdmsRequestTrackings { get; set; }

    public virtual DbSet<EdmsTermite> EdmsTermites { get; set; }

    public virtual DbSet<EdmsTermiteBox> EdmsTermiteBoxes { get; set; }

    public virtual DbSet<EdmsTimeOfDocumentPreservation> EdmsTimeOfDocumentPreservations { get; set; }

    public virtual DbSet<EdmsTimeOfDocumentPreservationCommon> EdmsTimeOfDocumentPreservationCommons { get; set; }

    public virtual DbSet<EdmsWarehouse> EdmsWarehouses { get; set; }

    public virtual DbSet<EdmsWarehouseAsset> EdmsWarehouseAssets { get; set; }

    public virtual DbSet<EdmsWarehouseDocument> EdmsWarehouseDocuments { get; set; }

    public virtual DbSet<EdmsWarehouseExtend> EdmsWarehouseExtends { get; set; }

    public virtual DbSet<EdmsWarehouseMedium> EdmsWarehouseMedia { get; set; }

    public virtual DbSet<EdmsWarehouseUser> EdmsWarehouseUsers { get; set; }

    public virtual DbSet<EdmsWhsMedium> EdmsWhsMedia { get; set; }

    public virtual DbSet<EdmsWhsQrcode> EdmsWhsQrcodes { get; set; }

    public virtual DbSet<EdmsWhsQrcodeAsset> EdmsWhsQrcodeAssets { get; set; }

    public virtual DbSet<EdmsWhsQrcodeDocument> EdmsWhsQrcodeDocuments { get; set; }

    public virtual DbSet<EduCategory> EduCategories { get; set; }

    public virtual DbSet<EduExamination> EduExaminations { get; set; }

    public virtual DbSet<EduExaminationDetail> EduExaminationDetails { get; set; }

    public virtual DbSet<EduExtraFieldGroup> EduExtraFieldGroups { get; set; }

    public virtual DbSet<EduLecture> EduLectures { get; set; }

    public virtual DbSet<EmployeeCertificate> EmployeeCertificates { get; set; }

    public virtual DbSet<EmployeeCoaching> EmployeeCoachings { get; set; }

    public virtual DbSet<EmployeeStatusTracking> EmployeeStatusTrackings { get; set; }

    public virtual DbSet<EntityMapping> EntityMappings { get; set; }

    public virtual DbSet<ExcuterControlRole> ExcuterControlRoles { get; set; }

    public virtual DbSet<ExcuterControlRoleInst> ExcuterControlRoleInsts { get; set; }

    public virtual DbSet<FaceFaceId> FaceFaceIds { get; set; }

    public virtual DbSet<FacoProductCat> FacoProductCats { get; set; }

    public virtual DbSet<Family> Families { get; set; }

    public virtual DbSet<FamilyNodeInfo> FamilyNodeInfos { get; set; }

    public virtual DbSet<FamilyTreeInfo> FamilyTreeInfos { get; set; }

    public virtual DbSet<FcmToken> FcmTokens { get; set; }

    public virtual DbSet<FileObjectShare> FileObjectShares { get; set; }

    public virtual DbSet<FileRecruitment> FileRecruitments { get; set; }

    public virtual DbSet<FileVersion> FileVersions { get; set; }

    public virtual DbSet<FilesShareObjectUser> FilesShareObjectUsers { get; set; }

    public virtual DbSet<ForecastProductInStock> ForecastProductInStocks { get; set; }

    public virtual DbSet<FormCat> FormCats { get; set; }

    public virtual DbSet<FormControl> FormControls { get; set; }

    public virtual DbSet<FundAccEntry> FundAccEntries { get; set; }

    public virtual DbSet<FundAccEntryTracking> FundAccEntryTrackings { get; set; }

    public virtual DbSet<FundCatReptExp> FundCatReptExps { get; set; }

    public virtual DbSet<FundCurrency> FundCurrencies { get; set; }

    public virtual DbSet<FundExchangeRate> FundExchangeRates { get; set; }

    public virtual DbSet<FundExchangeRateCopy> FundExchangeRateCopies { get; set; }

    public virtual DbSet<FundFile> FundFiles { get; set; }

    public virtual DbSet<FundLoadingSmsBank> FundLoadingSmsBanks { get; set; }

    public virtual DbSet<FundRelativeObjMng> FundRelativeObjMngs { get; set; }

    public virtual DbSet<GalaxyKeyword> GalaxyKeywords { get; set; }

    public virtual DbSet<GetCountCardWork> GetCountCardWorks { get; set; }

    public virtual DbSet<GoAboard> GoAboards { get; set; }

    public virtual DbSet<HistorySpecialist> HistorySpecialists { get; set; }

    public virtual DbSet<HolidayDate> HolidayDates { get; set; }

    public virtual DbSet<HostingServer> HostingServers { get; set; }

    public virtual DbSet<HrAddress> HrAddresses { get; set; }

    public virtual DbSet<HrContact> HrContacts { get; set; }

    public virtual DbSet<HrContract> HrContracts { get; set; }

    public virtual DbSet<HrEmployee> HrEmployees { get; set; }

    public virtual DbSet<HrEmployeeDecision> HrEmployeeDecisions { get; set; }

    public virtual DbSet<HrEmployeeDeploy> HrEmployeeDeploys { get; set; }

    public virtual DbSet<HrEmployeeMobilization> HrEmployeeMobilizations { get; set; }

    public virtual DbSet<HrRomoocDriver> HrRomoocDrivers { get; set; }

    public virtual DbSet<HrTrainingCourse> HrTrainingCourses { get; set; }

    public virtual DbSet<HrTranningCourseFile> HrTranningCourseFiles { get; set; }

    public virtual DbSet<HrWorkflow> HrWorkflows { get; set; }

    public virtual DbSet<HrWorkingProcess> HrWorkingProcesses { get; set; }

    public virtual DbSet<InspectionBeforeWarehouseHeader> InspectionBeforeWarehouseHeaders { get; set; }

    public virtual DbSet<IntroducerOfParty> IntroducerOfParties { get; set; }

    public virtual DbSet<InventoryAuditDetail> InventoryAuditDetails { get; set; }

    public virtual DbSet<InventoryAuditHeader> InventoryAuditHeaders { get; set; }

    public virtual DbSet<InvoiceCustomerGate> InvoiceCustomerGates { get; set; }

    public virtual DbSet<IotAnalysisAction> IotAnalysisActions { get; set; }

    public virtual DbSet<IotCarInOut> IotCarInOuts { get; set; }

    public virtual DbSet<IotDeviceInfo> IotDeviceInfos { get; set; }

    public virtual DbSet<IotSensor> IotSensors { get; set; }

    public virtual DbSet<IotSetUpAlert> IotSetUpAlerts { get; set; }

    public virtual DbSet<IotWarningSetting> IotWarningSettings { get; set; }

    public virtual DbSet<ItemPackUser> ItemPackUsers { get; set; }

    public virtual DbSet<ItemPlanJobcard> ItemPlanJobcards { get; set; }

    public virtual DbSet<IwindoorKeygenManagement> IwindoorKeygenManagements { get; set; }

    public virtual DbSet<JcObjectIdRelative> JcObjectIdRelatives { get; set; }

    public virtual DbSet<JcObjectIdRelative100k> JcObjectIdRelative100ks { get; set; }

    public virtual DbSet<JcObjectIdRelativeSource> JcObjectIdRelativeSources { get; set; }

    public virtual DbSet<JcObjectType> JcObjectTypes { get; set; }

    public virtual DbSet<JcProduct> JcProducts { get; set; }

    public virtual DbSet<JcService> JcServices { get; set; }

    public virtual DbSet<JcTrackingBuilding> JcTrackingBuildings { get; set; }

    public virtual DbSet<JcTrackingMedium> JcTrackingMedia { get; set; }

    public virtual DbSet<JckMaterialsComsume> JckMaterialsComsumes { get; set; }

    public virtual DbSet<JobCardAssignee> JobCardAssignees { get; set; }

    public virtual DbSet<JobcardDataLogger> JobcardDataLoggers { get; set; }

    public virtual DbSet<JobcardLink> JobcardLinks { get; set; }

    public virtual DbSet<KeyWordDataPool> KeyWordDataPools { get; set; }

    public virtual DbSet<Laudatory> Laudatories { get; set; }

    public virtual DbSet<LectureDiscuss> LectureDiscusses { get; set; }

    public virtual DbSet<LinkedInDataProfileId> LinkedInDataProfileIds { get; set; }

    public virtual DbSet<LinkedInDataProfileUser> LinkedInDataProfileUsers { get; set; }

    public virtual DbSet<LinkedInInfoDatum> LinkedInInfoData { get; set; }

    public virtual DbSet<LiquibaseSnapshot> LiquibaseSnapshots { get; set; }

    public virtual DbSet<LmsBoardTask> LmsBoardTasks { get; set; }

    public virtual DbSet<LmsClass> LmsClasses { get; set; }

    public virtual DbSet<LmsCommonSettingCat> LmsCommonSettingCats { get; set; }

    public virtual DbSet<LmsCommonSettingValue> LmsCommonSettingValues { get; set; }

    public virtual DbSet<LmsCourse> LmsCourses { get; set; }

    public virtual DbSet<LmsCourseResult> LmsCourseResults { get; set; }

    public virtual DbSet<LmsExamDetail> LmsExamDetails { get; set; }

    public virtual DbSet<LmsExamHeader> LmsExamHeaders { get; set; }

    public virtual DbSet<LmsExamScheduler> LmsExamSchedulers { get; set; }

    public virtual DbSet<LmsKyc> LmsKycs { get; set; }

    public virtual DbSet<LmsLectureManagement> LmsLectureManagements { get; set; }

    public virtual DbSet<LmsLectureSubjectCourse> LmsLectureSubjectCourses { get; set; }

    public virtual DbSet<LmsListTask> LmsListTasks { get; set; }

    public virtual DbSet<LmsMentorMentee> LmsMentorMentees { get; set; }

    public virtual DbSet<LmsMsgNotification> LmsMsgNotifications { get; set; }

    public virtual DbSet<LmsPracticeTestDetail> LmsPracticeTestDetails { get; set; }

    public virtual DbSet<LmsPracticeTestHeader> LmsPracticeTestHeaders { get; set; }

    public virtual DbSet<LmsPracticeTestHeader1> LmsPracticeTestHeader1s { get; set; }

    public virtual DbSet<LmsQuizLectureSubjectCourse> LmsQuizLectureSubjectCourses { get; set; }

    public virtual DbSet<LmsQuizPoolReference> LmsQuizPoolReferences { get; set; }

    public virtual DbSet<LmsSubject> LmsSubjects { get; set; }

    public virtual DbSet<LmsSubjectManagement> LmsSubjectManagements { get; set; }

    public virtual DbSet<LmsTask> LmsTasks { get; set; }

    public virtual DbSet<LmsTaskActivity> LmsTaskActivities { get; set; }

    public virtual DbSet<LmsTaskCommentList> LmsTaskCommentLists { get; set; }

    public virtual DbSet<LmsTaskStudentAssign> LmsTaskStudentAssigns { get; set; }

    public virtual DbSet<LmsTaskUserItemProgress> LmsTaskUserItemProgresses { get; set; }

    public virtual DbSet<LmsTrackDiligence> LmsTrackDiligences { get; set; }

    public virtual DbSet<LmsTutoringSchedule> LmsTutoringSchedules { get; set; }

    public virtual DbSet<LmsUserClass> LmsUserClasses { get; set; }

    public virtual DbSet<LmsUserMsg> LmsUserMsgs { get; set; }

    public virtual DbSet<LmsWithdrawn> LmsWithdrawns { get; set; }

    public virtual DbSet<LogChangeDocument> LogChangeDocuments { get; set; }

    public virtual DbSet<LogMessage> LogMessages { get; set; }

    public virtual DbSet<LogisticTracking> LogisticTrackings { get; set; }

    public virtual DbSet<LotProduct> LotProducts { get; set; }

    public virtual DbSet<LotProductDetail> LotProductDetails { get; set; }

    public virtual DbSet<MapDataGp> MapDataGps { get; set; }

    public virtual DbSet<MapStockProdIn> MapStockProdIns { get; set; }

    public virtual DbSet<MappingControllerTable> MappingControllerTables { get; set; }

    public virtual DbSet<MappingMain> MappingMains { get; set; }

    public virtual DbSet<MappingModul> MappingModuls { get; set; }

    public virtual DbSet<MaterialAttribute> MaterialAttributes { get; set; }

    public virtual DbSet<MaterialFile> MaterialFiles { get; set; }

    public virtual DbSet<MaterialInvoice> MaterialInvoices { get; set; }

    public virtual DbSet<MaterialPaymentTicket> MaterialPaymentTickets { get; set; }

    public virtual DbSet<MaterialProduct> MaterialProducts { get; set; }

    public virtual DbSet<MaterialProductDeploy> MaterialProductDeploys { get; set; }

    public virtual DbSet<MaterialProductGroup> MaterialProductGroups { get; set; }

    public virtual DbSet<MaterialStore> MaterialStores { get; set; }

    public virtual DbSet<MaterialStoreBatchGood> MaterialStoreBatchGoods { get; set; }

    public virtual DbSet<MaterialType> MaterialTypes { get; set; }

    public virtual DbSet<MeetingSchedule> MeetingSchedules { get; set; }

    public virtual DbSet<MessageActivity> MessageActivities { get; set; }

    public virtual DbSet<MobiFunctionJobcardList> MobiFunctionJobcardLists { get; set; }

    public virtual DbSet<MobileAppFunction> MobileAppFunctions { get; set; }

    public virtual DbSet<MobileFunction> MobileFunctions { get; set; }

    public virtual DbSet<MobilePermission> MobilePermissions { get; set; }

    public virtual DbSet<MobilePrivilege> MobilePrivileges { get; set; }

    public virtual DbSet<MobileResource> MobileResources { get; set; }

    public virtual DbSet<MrpInspectionClinkerBroken> MrpInspectionClinkerBrokens { get; set; }

    public virtual DbSet<MrpInspectionClinkerInput> MrpInspectionClinkerInputs { get; set; }

    public virtual DbSet<MrpInspectionDetail> MrpInspectionDetails { get; set; }

    public virtual DbSet<MrpInspectionHeader> MrpInspectionHeaders { get; set; }

    public virtual DbSet<MrpInspectionItemRepairDetail> MrpInspectionItemRepairDetails { get; set; }

    public virtual DbSet<MrpKcsTicketDetail> MrpKcsTicketDetails { get; set; }

    public virtual DbSet<MrpKcsTicketHeader> MrpKcsTicketHeaders { get; set; }

    public virtual DbSet<MrpOrderDt> MrpOrderDts { get; set; }

    public virtual DbSet<MrpOrderHd> MrpOrderHds { get; set; }

    public virtual DbSet<MrpPumpFrameTicket> MrpPumpFrameTickets { get; set; }

    public virtual DbSet<MrpPumpItemDt> MrpPumpItemDts { get; set; }

    public virtual DbSet<MrpRepairDetail> MrpRepairDetails { get; set; }

    public virtual DbSet<MrpRepairHeader> MrpRepairHeaders { get; set; }

    public virtual DbSet<MrpTransportAttrext> MrpTransportAttrexts { get; set; }

    public virtual DbSet<MrpWeighingTicket> MrpWeighingTickets { get; set; }

    public virtual DbSet<MrtTransportHd> MrtTransportHds { get; set; }

    public virtual DbSet<NodeInfo> NodeInfos { get; set; }

    public virtual DbSet<Notification> Notifications { get; set; }

    public virtual DbSet<NotificationManager> NotificationManagers { get; set; }

    public virtual DbSet<NotificationObject> NotificationObjects { get; set; }

    public virtual DbSet<NotificationSetting> NotificationSettings { get; set; }

    public virtual DbSet<NumberPhoneDn> NumberPhoneDns { get; set; }

    public virtual DbSet<ObeAccount> ObeAccounts { get; set; }

    public virtual DbSet<ObeAiRecognitionTracking> ObeAiRecognitionTrackings { get; set; }

    public virtual DbSet<ObeListDevice> ObeListDevices { get; set; }

    public virtual DbSet<ObjectActivityInstanceNote> ObjectActivityInstanceNotes { get; set; }

    public virtual DbSet<ObjectTypeStatusGroup> ObjectTypeStatusGroups { get; set; }

    public virtual DbSet<ObjectiverPackCover> ObjectiverPackCovers { get; set; }

    public virtual DbSet<ObjectiverPackCoverAsset> ObjectiverPackCoverAssets { get; set; }

    public virtual DbSet<OperatingVideoTrack> OperatingVideoTracks { get; set; }

    public virtual DbSet<OperationLog> OperationLogs { get; set; }

    public virtual DbSet<OperationOnlineSupport> OperationOnlineSupports { get; set; }

    public virtual DbSet<OperationOnlineSupportTracking> OperationOnlineSupportTrackings { get; set; }

    public virtual DbSet<OrderRequestRaw> OrderRequestRaws { get; set; }

    public virtual DbSet<OrderRequestRaw275> OrderRequestRaw275s { get; set; }

    public virtual DbSet<OrderRequestRaw288> OrderRequestRaw288s { get; set; }

    public virtual DbSet<OrderRequestRawFile> OrderRequestRawFiles { get; set; }

    public virtual DbSet<OrderRequestRawFiles275> OrderRequestRawFiles275s { get; set; }

    public virtual DbSet<OrderSupplierReview> OrderSupplierReviews { get; set; }

    public virtual DbSet<OrderSupplierReviewDetail> OrderSupplierReviewDetails { get; set; }

    public virtual DbSet<OtpManger> OtpMangers { get; set; }

    public virtual DbSet<PAreaCategory> PAreaCategories { get; set; }

    public virtual DbSet<PAreaCategoryStore> PAreaCategoryStores { get; set; }

    public virtual DbSet<PAreaCategoryStoreBk> PAreaCategoryStoreBks { get; set; }

    public virtual DbSet<PAreaMapping> PAreaMappings { get; set; }

    public virtual DbSet<PAreaMappingStore> PAreaMappingStores { get; set; }

    public virtual DbSet<PAreaMappingStoreBk> PAreaMappingStoreBks { get; set; }

    public virtual DbSet<PAreaMappingStoreNew> PAreaMappingStoreNews { get; set; }

    public virtual DbSet<PackageObject> PackageObjects { get; set; }

    public virtual DbSet<PackageTicketDt> PackageTicketDts { get; set; }

    public virtual DbSet<PackageTicketHd> PackageTicketHds { get; set; }

    public virtual DbSet<PackingType> PackingTypes { get; set; }

    public virtual DbSet<Param4Warning> Param4Warnings { get; set; }

    public virtual DbSet<PartyAdmissionProfile> PartyAdmissionProfiles { get; set; }

    public virtual DbSet<PayDecisionDetail> PayDecisionDetails { get; set; }

    public virtual DbSet<PayDecisionHeader> PayDecisionHeaders { get; set; }

    public virtual DbSet<PayScale> PayScales { get; set; }

    public virtual DbSet<PayScaleDetail> PayScaleDetails { get; set; }

    public virtual DbSet<PaySheet> PaySheets { get; set; }

    public virtual DbSet<PaymentGateway> PaymentGateways { get; set; }

    public virtual DbSet<PersonalHistory> PersonalHistories { get; set; }

    public virtual DbSet<PlanExcuteRecruitmentDetail> PlanExcuteRecruitmentDetails { get; set; }

    public virtual DbSet<PlanExcuteRecruitmentHeader> PlanExcuteRecruitmentHeaders { get; set; }

    public virtual DbSet<PlanRecruitmentDetail> PlanRecruitmentDetails { get; set; }

    public virtual DbSet<PlanRecruitmentHeader> PlanRecruitmentHeaders { get; set; }

    public virtual DbSet<PluginManage> PluginManages { get; set; }

    public virtual DbSet<PoBuyerDetail> PoBuyerDetails { get; set; }

    public virtual DbSet<PoBuyerHeader> PoBuyerHeaders { get; set; }

    public virtual DbSet<PoBuyerHeaderNotDone> PoBuyerHeaderNotDones { get; set; }

    public virtual DbSet<PoBuyerHeaderPayment> PoBuyerHeaderPayments { get; set; }

    public virtual DbSet<PoCusUpdatedTracking> PoCusUpdatedTrackings { get; set; }

    public virtual DbSet<PoSaleHeader> PoSaleHeaders { get; set; }

    public virtual DbSet<PoSaleHeaderHi> PoSaleHeaderHis { get; set; }

    public virtual DbSet<PoSaleHeaderNotDone> PoSaleHeaderNotDones { get; set; }

    public virtual DbSet<PoSaleProductDetail> PoSaleProductDetails { get; set; }

    public virtual DbSet<PoSupAttribute> PoSupAttributes { get; set; }

    public virtual DbSet<PoSupFile> PoSupFiles { get; set; }

    public virtual DbSet<PoSupRequestImpProduct> PoSupRequestImpProducts { get; set; }

    public virtual DbSet<PoSupUpdatedTracking> PoSupUpdatedTrackings { get; set; }

    public virtual DbSet<PoolMemberNotification> PoolMemberNotifications { get; set; }

    public virtual DbSet<PriceQuoteDetail> PriceQuoteDetails { get; set; }

    public virtual DbSet<PriceQuoteHeader> PriceQuoteHeaders { get; set; }

    public virtual DbSet<PriceQuoteServiceDetail> PriceQuoteServiceDetails { get; set; }

    public virtual DbSet<ProdDeliveryAttrValue> ProdDeliveryAttrValues { get; set; }

    public virtual DbSet<ProdDeliveryDetail> ProdDeliveryDetails { get; set; }

    public virtual DbSet<ProdDeliveryHeader> ProdDeliveryHeaders { get; set; }

    public virtual DbSet<ProdInStockAttrValue> ProdInStockAttrValues { get; set; }

    public virtual DbSet<ProdPackageDelivery> ProdPackageDeliveries { get; set; }

    public virtual DbSet<ProdPackageReceived> ProdPackageReceiveds { get; set; }

    public virtual DbSet<ProdQcDatasetResult> ProdQcDatasetResults { get; set; }

    public virtual DbSet<ProdReceivedAttrValue> ProdReceivedAttrValues { get; set; }

    public virtual DbSet<ProdReceivedDetail> ProdReceivedDetails { get; set; }

    public virtual DbSet<ProdReceivedHeader> ProdReceivedHeaders { get; set; }

    public virtual DbSet<ProductAttrExt> ProductAttrExts { get; set; }

    public virtual DbSet<ProductAttrGalaxy> ProductAttrGalaxies { get; set; }

    public virtual DbSet<ProductAttribute> ProductAttributes { get; set; }

    public virtual DbSet<ProductComponent> ProductComponents { get; set; }

    public virtual DbSet<ProductCostDetail> ProductCostDetails { get; set; }

    public virtual DbSet<ProductCostHeader> ProductCostHeaders { get; set; }

    public virtual DbSet<ProductEntityMapping> ProductEntityMappings { get; set; }

    public virtual DbSet<ProductEntityMappingLog> ProductEntityMappingLogs { get; set; }

    public virtual DbSet<ProductExpParent> ProductExpParents { get; set; }

    public virtual DbSet<ProductExportDetail> ProductExportDetails { get; set; }

    public virtual DbSet<ProductExportHeader> ProductExportHeaders { get; set; }

    public virtual DbSet<ProductGattrExt> ProductGattrExts { get; set; }

    public virtual DbSet<ProductImpGattr> ProductImpGattrs { get; set; }

    public virtual DbSet<ProductImpParent> ProductImpParents { get; set; }

    public virtual DbSet<ProductImportDetail> ProductImportDetails { get; set; }

    public virtual DbSet<ProductImportHeader> ProductImportHeaders { get; set; }

    public virtual DbSet<ProductInPallet> ProductInPallets { get; set; }

    public virtual DbSet<ProductInStock> ProductInStocks { get; set; }

    public virtual DbSet<ProductInStockBackup> ProductInStockBackups { get; set; }

    public virtual DbSet<ProductInStockNew> ProductInStockNews { get; set; }

    public virtual DbSet<ProductLocatedMapping> ProductLocatedMappings { get; set; }

    public virtual DbSet<ProductLocatedMappingLog> ProductLocatedMappingLogs { get; set; }

    public virtual DbSet<ProductLotFile> ProductLotFiles { get; set; }

    public virtual DbSet<ProductPackMapping> ProductPackMappings { get; set; }

    public virtual DbSet<ProductQrCode> ProductQrCodes { get; set; }

    public virtual DbSet<ProductQrDeepLink> ProductQrDeepLinks { get; set; }

    public virtual DbSet<ProductQualityInspectionAttr> ProductQualityInspectionAttrs { get; set; }

    public virtual DbSet<ProductQualityInspectionImp> ProductQualityInspectionImps { get; set; }

    public virtual DbSet<ProductQualityInspectionImpDetail> ProductQualityInspectionImpDetails { get; set; }

    public virtual DbSet<ProductSettingWarning> ProductSettingWarnings { get; set; }

    public virtual DbSet<ProgressTracking> ProgressTrackings { get; set; }

    public virtual DbSet<Project> Projects { get; set; }

    public virtual DbSet<ProjectAppointment> ProjectAppointments { get; set; }

    public virtual DbSet<ProjectAttribute> ProjectAttributes { get; set; }

    public virtual DbSet<ProjectCommentList> ProjectCommentLists { get; set; }

    public virtual DbSet<ProjectCusSup> ProjectCusSups { get; set; }

    public virtual DbSet<ProjectFile> ProjectFiles { get; set; }

    public virtual DbSet<ProjectItemPlan> ProjectItemPlans { get; set; }

    public virtual DbSet<ProjectMember> ProjectMembers { get; set; }

    public virtual DbSet<ProjectNote> ProjectNotes { get; set; }

    public virtual DbSet<ProjectProduct> ProjectProducts { get; set; }

    public virtual DbSet<ProjectProductDetail> ProjectProductDetails { get; set; }

    public virtual DbSet<ProjectProductHeader> ProjectProductHeaders { get; set; }

    public virtual DbSet<ProjectService> ProjectServices { get; set; }

    public virtual DbSet<ProjectServiceDetail> ProjectServiceDetails { get; set; }

    public virtual DbSet<ProjectServiceHeader> ProjectServiceHeaders { get; set; }

    public virtual DbSet<ProjectSupplier> ProjectSuppliers { get; set; }

    public virtual DbSet<ProjectTeam> ProjectTeams { get; set; }

    public virtual DbSet<ProjectTeamUser> ProjectTeamUsers { get; set; }

    public virtual DbSet<QuizPool> QuizPools { get; set; }

    public virtual DbSet<RecordDeliveryDetail> RecordDeliveryDetails { get; set; }

    public virtual DbSet<RecordDeliveryHeader> RecordDeliveryHeaders { get; set; }

    public virtual DbSet<RecordsPack> RecordsPacks { get; set; }

    public virtual DbSet<RecordsPackArrangeLog> RecordsPackArrangeLogs { get; set; }

    public virtual DbSet<RecordsPackAttr> RecordsPackAttrs { get; set; }

    public virtual DbSet<RecordsPackFile> RecordsPackFiles { get; set; }

    public virtual DbSet<RecruitmentScheduler> RecruitmentSchedulers { get; set; }

    public virtual DbSet<ReminderAttr> ReminderAttrs { get; set; }

    public virtual DbSet<RequestImpProductDetail> RequestImpProductDetails { get; set; }

    public virtual DbSet<RequestImpProductHeader> RequestImpProductHeaders { get; set; }

    public virtual DbSet<RequestPoSup> RequestPoSups { get; set; }

    public virtual DbSet<RequestPriceDetail> RequestPriceDetails { get; set; }

    public virtual DbSet<RequestPriceHeader> RequestPriceHeaders { get; set; }

    public virtual DbSet<RequestPriceServiceDetail> RequestPriceServiceDetails { get; set; }

    public virtual DbSet<ResultFindOcr> ResultFindOcrs { get; set; }

    public virtual DbSet<RmCancelTracking> RmCancelTrackings { get; set; }

    public virtual DbSet<RmCommandOrderTruck> RmCommandOrderTrucks { get; set; }

    public virtual DbSet<RmCommonSetting> RmCommonSettings { get; set; }

    public virtual DbSet<RmDriverActivityLog> RmDriverActivityLogs { get; set; }

    public virtual DbSet<RmECompany> RmECompanies { get; set; }

    public virtual DbSet<RmGisTable> RmGisTables { get; set; }

    public virtual DbSet<RmHrEmployee> RmHrEmployees { get; set; }

    public virtual DbSet<RmJnanaApiGoogleService> RmJnanaApiGoogleServices { get; set; }

    public virtual DbSet<RmJnanaCountRequestGoogle> RmJnanaCountRequestGoogles { get; set; }

    public virtual DbSet<RmJnanaFcm> RmJnanaFcms { get; set; }

    public virtual DbSet<RmJnanaFcmMessage> RmJnanaFcmMessages { get; set; }

    public virtual DbSet<RmJnanaFile> RmJnanaFiles { get; set; }

    public virtual DbSet<RmJnanaNewsArticle> RmJnanaNewsArticles { get; set; }

    public virtual DbSet<RmJnanaNewsArticleFile> RmJnanaNewsArticleFiles { get; set; }

    public virtual DbSet<RmJnanaNewsCat> RmJnanaNewsCats { get; set; }

    public virtual DbSet<RmRomoocCurrentPosition> RmRomoocCurrentPositions { get; set; }

    public virtual DbSet<RmRomoocDriver> RmRomoocDrivers { get; set; }

    public virtual DbSet<RmRomoocExtrafield> RmRomoocExtrafields { get; set; }

    public virtual DbSet<RmRomoocFcm> RmRomoocFcms { get; set; }

    public virtual DbSet<RmRomoocFcmMessage> RmRomoocFcmMessages { get; set; }

    public virtual DbSet<RmRomoocPacking> RmRomoocPackings { get; set; }

    public virtual DbSet<RmRomoocRemooc> RmRomoocRemoocs { get; set; }

    public virtual DbSet<RmRomoocTracking> RmRomoocTrackings { get; set; }

    public virtual DbSet<RmRomoocTractor> RmRomoocTractors { get; set; }

    public virtual DbSet<RmSosInfo> RmSosInfos { get; set; }

    public virtual DbSet<RmSosMedium> RmSosMedia { get; set; }

    public virtual DbSet<RmVayxeActivityRequestStatusDelivery> RmVayxeActivityRequestStatusDeliveries { get; set; }

    public virtual DbSet<RmVayxeBookChecking> RmVayxeBookCheckings { get; set; }

    public virtual DbSet<RmVayxeBookMaterialDetail> RmVayxeBookMaterialDetails { get; set; }

    public virtual DbSet<RmVayxeBookServiceDetail> RmVayxeBookServiceDetails { get; set; }

    public virtual DbSet<RmVayxeCatSevice> RmVayxeCatSevices { get; set; }

    public virtual DbSet<RmVayxeMaterialGood> RmVayxeMaterialGoods { get; set; }

    public virtual DbSet<RmVayxeTableCostDetail> RmVayxeTableCostDetails { get; set; }

    public virtual DbSet<RmVayxeTableCostHeader> RmVayxeTableCostHeaders { get; set; }

    public virtual DbSet<RmVayxeVendor> RmVayxeVendors { get; set; }

    public virtual DbSet<RoadInfo> RoadInfos { get; set; }

    public virtual DbSet<SalaryEmployeeMonth> SalaryEmployeeMonths { get; set; }

    public virtual DbSet<SalaryTableAllowance> SalaryTableAllowances { get; set; }

    public virtual DbSet<SalesOrdersBackup> SalesOrdersBackups { get; set; }

    public virtual DbSet<ServiceCat> ServiceCats { get; set; }

    public virtual DbSet<ServiceCatAttribute> ServiceCatAttributes { get; set; }

    public virtual DbSet<ServiceCatCostCondition> ServiceCatCostConditions { get; set; }

    public virtual DbSet<ServiceCatCostHeader> ServiceCatCostHeaders { get; set; }

    public virtual DbSet<ServiceCatGroup> ServiceCatGroups { get; set; }

    public virtual DbSet<ServiceCatType> ServiceCatTypes { get; set; }

    public virtual DbSet<ServiceRegist> ServiceRegists { get; set; }

    public virtual DbSet<SessionItemChkItem> SessionItemChkItems { get; set; }

    public virtual DbSet<SessionWork> SessionWorks { get; set; }

    public virtual DbSet<SessionWorkObjectProcessing> SessionWorkObjectProcessings { get; set; }

    public virtual DbSet<SessionWorkResult> SessionWorkResults { get; set; }

    public virtual DbSet<SetCompanyMenu> SetCompanyMenus { get; set; }

    public virtual DbSet<SetIcon2Object> SetIcon2Objects { get; set; }

    public virtual DbSet<SettingUserguide> SettingUserguides { get; set; }

    public virtual DbSet<ShiftLog> ShiftLogs { get; set; }

    public virtual DbSet<ShiftLogCamera> ShiftLogCameras { get; set; }

    public virtual DbSet<ShiftLogCard> ShiftLogCards { get; set; }

    public virtual DbSet<StaffScheduleWork> StaffScheduleWorks { get; set; }

    public virtual DbSet<StaffTimeKeeping> StaffTimeKeepings { get; set; }

    public virtual DbSet<StatusGroup> StatusGroups { get; set; }

    public virtual DbSet<StatusSetDetail> StatusSetDetails { get; set; }

    public virtual DbSet<StatusSetHeader> StatusSetHeaders { get; set; }

    public virtual DbSet<StockArrangePopEntry> StockArrangePopEntries { get; set; }

    public virtual DbSet<StockArrangePutEntry> StockArrangePutEntries { get; set; }

    public virtual DbSet<StopContractDetail> StopContractDetails { get; set; }

    public virtual DbSet<StopContractHeader> StopContractHeaders { get; set; }

    public virtual DbSet<SubProduct> SubProducts { get; set; }

    public virtual DbSet<SubWorkflowInstance> SubWorkflowInstances { get; set; }

    public virtual DbSet<Supplier> Suppliers { get; set; }

    public virtual DbSet<SupplierAppointment> SupplierAppointments { get; set; }

    public virtual DbSet<SupplierExtend> SupplierExtends { get; set; }

    public virtual DbSet<SupplierFile> SupplierFiles { get; set; }

    public virtual DbSet<SwCompanyInfo> SwCompanyInfos { get; set; }

    public virtual DbSet<SwCustomerReq> SwCustomerReqs { get; set; }

    public virtual DbSet<SwModuleResource> SwModuleResources { get; set; }

    public virtual DbSet<TablesToUpdate> TablesToUpdates { get; set; }

    public virtual DbSet<Team> Teams { get; set; }

    public virtual DbSet<TempKeyWordSearch> TempKeyWordSearches { get; set; }

    public virtual DbSet<TemplateKeySearchFile> TemplateKeySearchFiles { get; set; }

    public virtual DbSet<TokenManager> TokenManagers { get; set; }

    public virtual DbSet<TokenManagerDeploy> TokenManagerDeploys { get; set; }

    public virtual DbSet<TopcvDataApply> TopcvDataApplies { get; set; }

    public virtual DbSet<TrainingCertificatedPass> TrainingCertificatedPasses { get; set; }

    public virtual DbSet<TransDeliveryNoteDetail> TransDeliveryNoteDetails { get; set; }

    public virtual DbSet<TransDeliveryNoteHeader> TransDeliveryNoteHeaders { get; set; }

    public virtual DbSet<Transaction2> Transaction2s { get; set; }

    public virtual DbSet<Transition> Transitions { get; set; }

    public virtual DbSet<UrencoRoute> UrencoRoutes { get; set; }

    public virtual DbSet<UserAccessDataKeyword> UserAccessDataKeywords { get; set; }

    public virtual DbSet<UserDeclareBusyOrFree> UserDeclareBusyOrFrees { get; set; }

    public virtual DbSet<UserDoExerciseResult> UserDoExerciseResults { get; set; }

    public virtual DbSet<UserExaminationResultDetail> UserExaminationResultDetails { get; set; }

    public virtual DbSet<UserExaminationResultSession> UserExaminationResultSessions { get; set; }

    public virtual DbSet<UserExerciseResultDetail> UserExerciseResultDetails { get; set; }

    public virtual DbSet<UserExerciseResultSession> UserExerciseResultSessions { get; set; }

    public virtual DbSet<UserLearnSubject> UserLearnSubjects { get; set; }

    public virtual DbSet<UserTrackingGp> UserTrackingGps { get; set; }

    public virtual DbSet<UserWishListSubject> UserWishListSubjects { get; set; }

    public virtual DbSet<UsrKeyWordSetup> UsrKeyWordSetups { get; set; }

    public virtual DbSet<VActionCard> VActionCards { get; set; }

    public virtual DbSet<VAllObject> VAllObjects { get; set; }

    public virtual DbSet<VAllTable> VAllTables { get; set; }

    public virtual DbSet<VAmchartAsset> VAmchartAssets { get; set; }

    public virtual DbSet<VAmchartBuy> VAmchartBuys { get; set; }

    public virtual DbSet<VAmchartCardWork> VAmchartCardWorks { get; set; }

    public virtual DbSet<VAmchartCountBuy> VAmchartCountBuys { get; set; }

    public virtual DbSet<VAmchartCountCustomer> VAmchartCountCustomers { get; set; }

    public virtual DbSet<VAmchartCountEmployee> VAmchartCountEmployees { get; set; }

    public virtual DbSet<VAmchartCountProject> VAmchartCountProjects { get; set; }

    public virtual DbSet<VAmchartCountSale> VAmchartCountSales { get; set; }

    public virtual DbSet<VAmchartCountSupplier> VAmchartCountSuppliers { get; set; }

    public virtual DbSet<VAmchartCrawlingLog> VAmchartCrawlingLogs { get; set; }

    public virtual DbSet<VAmchartCustomer> VAmchartCustomers { get; set; }

    public virtual DbSet<VAmchartDoExercise> VAmchartDoExercises { get; set; }

    public virtual DbSet<VAmchartLearnSubject> VAmchartLearnSubjects { get; set; }

    public virtual DbSet<VAmchartPieBuy> VAmchartPieBuys { get; set; }

    public virtual DbSet<VAmchartPieCustomer> VAmchartPieCustomers { get; set; }

    public virtual DbSet<VAmchartPieProject> VAmchartPieProjects { get; set; }

    public virtual DbSet<VAmchartPieSale> VAmchartPieSales { get; set; }

    public virtual DbSet<VAmchartPieSupplier> VAmchartPieSuppliers { get; set; }

    public virtual DbSet<VAmchartProject> VAmchartProjects { get; set; }

    public virtual DbSet<VAmchartSale> VAmchartSales { get; set; }

    public virtual DbSet<VAmchartSupplier> VAmchartSuppliers { get; set; }

    public virtual DbSet<VAmchartWorkflow> VAmchartWorkflows { get; set; }

    public virtual DbSet<VAssetStatus> VAssetStatuses { get; set; }

    public virtual DbSet<VCardProcess> VCardProcesses { get; set; }

    public virtual DbSet<VCommonSetting> VCommonSettings { get; set; }

    public virtual DbSet<VHighchartFund> VHighchartFunds { get; set; }

    public virtual DbSet<VHighchartProd> VHighchartProds { get; set; }

    public virtual DbSet<VHisExpProduct> VHisExpProducts { get; set; }

    public virtual DbSet<VHisImpProduct> VHisImpProducts { get; set; }

    public virtual DbSet<VHisProduct> VHisProducts { get; set; }

    public virtual DbSet<VHrContract> VHrContracts { get; set; }

    public virtual DbSet<VHrEmployee> VHrEmployees { get; set; }

    public virtual DbSet<VImpExpProduct> VImpExpProducts { get; set; }

    public virtual DbSet<VListBoard> VListBoards { get; set; }

    public virtual DbSet<VListWeight> VListWeights { get; set; }

    public virtual DbSet<VProductAllTable> VProductAllTables { get; set; }

    public virtual DbSet<VProjectProductRemain> VProjectProductRemains { get; set; }

    public virtual DbSet<VQuantityInStockByStore> VQuantityInStockByStores { get; set; }

    public virtual DbSet<VReportStaticsPoCu> VReportStaticsPoCus { get; set; }

    public virtual DbSet<VReportStaticsPoSup> VReportStaticsPoSups { get; set; }

    public virtual DbSet<VShiftLog> VShiftLogs { get; set; }

    public virtual DbSet<VSubjectHierachy> VSubjectHierachies { get; set; }

    public virtual DbSet<VcAppAccessLog> VcAppAccessLogs { get; set; }

    public virtual DbSet<VcCustomerCare> VcCustomerCares { get; set; }

    public virtual DbSet<VcCustomerCareLastMonth> VcCustomerCareLastMonths { get; set; }

    public virtual DbSet<VcCustomerDeclareHeaderInfo> VcCustomerDeclareHeaderInfos { get; set; }

    public virtual DbSet<VcCustomerDeclareInfo> VcCustomerDeclareInfos { get; set; }

    public virtual DbSet<VcDriver> VcDrivers { get; set; }

    public virtual DbSet<VcFcm> VcFcms { get; set; }

    public virtual DbSet<VcFcmMessage> VcFcmMessages { get; set; }

    public virtual DbSet<VcGisTable> VcGisTables { get; set; }

    public virtual DbSet<VcJnanaFcm> VcJnanaFcms { get; set; }

    public virtual DbSet<VcJnanaFcmMessage> VcJnanaFcmMessages { get; set; }

    public virtual DbSet<VcJnanaFile> VcJnanaFiles { get; set; }

    public virtual DbSet<VcJnanaNewsArticle> VcJnanaNewsArticles { get; set; }

    public virtual DbSet<VcJnanaNewsArticleFile> VcJnanaNewsArticleFiles { get; set; }

    public virtual DbSet<VcJnanaNewsCat> VcJnanaNewsCats { get; set; }

    public virtual DbSet<VcLeaderApprove> VcLeaderApproves { get; set; }

    public virtual DbSet<VcProductCat> VcProductCats { get; set; }

    public virtual DbSet<VcSettingRoute> VcSettingRoutes { get; set; }

    public virtual DbSet<VcSosInfo> VcSosInfos { get; set; }

    public virtual DbSet<VcSosMedium> VcSosMedia { get; set; }

    public virtual DbSet<VcStoreIdea> VcStoreIdeas { get; set; }

    public virtual DbSet<VcSupplierTradeRelation> VcSupplierTradeRelations { get; set; }

    public virtual DbSet<VcTransporter> VcTransporters { get; set; }

    public virtual DbSet<VcWorkCheck> VcWorkChecks { get; set; }

    public virtual DbSet<VcWorkPlan> VcWorkPlans { get; set; }

    public virtual DbSet<VcWorkPlanLog> VcWorkPlanLogs { get; set; }

    public virtual DbSet<View1> View1s { get; set; }

    public virtual DbSet<VocaCertificateCat> VocaCertificateCats { get; set; }

    public virtual DbSet<WalletCoinExchange> WalletCoinExchanges { get; set; }

    public virtual DbSet<WalletCoinTransaction> WalletCoinTransactions { get; set; }

    public virtual DbSet<WalletDepositTransaction> WalletDepositTransactions { get; set; }

    public virtual DbSet<WalletPackage> WalletPackages { get; set; }

    public virtual DbSet<WalletTableCostItem> WalletTableCostItems { get; set; }

    public virtual DbSet<WarehouseLog> WarehouseLogs { get; set; }

    public virtual DbSet<WarehouseRecordsPack> WarehouseRecordsPacks { get; set; }

    public virtual DbSet<WarehouseRecordsPackAttr> WarehouseRecordsPackAttrs { get; set; }

    public virtual DbSet<WarehouseRecordsPackFile> WarehouseRecordsPackFiles { get; set; }

    public virtual DbSet<WarehouseZoneAttr> WarehouseZoneAttrs { get; set; }

    public virtual DbSet<WarehouseZoneMapping> WarehouseZoneMappings { get; set; }

    public virtual DbSet<WarehouseZoneStruct> WarehouseZoneStructs { get; set; }

    public virtual DbSet<WarningDisciplined> WarningDisciplineds { get; set; }

    public virtual DbSet<WeekWorkingScheduler> WeekWorkingSchedulers { get; set; }

    public virtual DbSet<WfActivityObjectProcessing> WfActivityObjectProcessings { get; set; }

    public virtual DbSet<WfObject> WfObjects { get; set; }

    public virtual DbSet<WfSharpLibrary> WfSharpLibraries { get; set; }

    public virtual DbSet<WhsZoneAttr> WhsZoneAttrs { get; set; }

    public virtual DbSet<WhsZoneStruct> WhsZoneStructs { get; set; }

    public virtual DbSet<WorkEventCat> WorkEventCats { get; set; }

    public virtual DbSet<WorkExecutiveObjectrelative> WorkExecutiveObjectrelatives { get; set; }

    public virtual DbSet<WorkFlow> WorkFlows { get; set; }

    public virtual DbSet<WorkFlowRule> WorkFlowRules { get; set; }

    public virtual DbSet<WorkItemAssignStaff> WorkItemAssignStaffs { get; set; }

    public virtual DbSet<WorkItemSession> WorkItemSessions { get; set; }

    public virtual DbSet<WorkItemSessionResult> WorkItemSessionResults { get; set; }

    public virtual DbSet<WorkOsAddressCard> WorkOsAddressCards { get; set; }

    public virtual DbSet<WorkOsBoard> WorkOsBoards { get; set; }

    public virtual DbSet<WorkOsBoardTrackingProgress> WorkOsBoardTrackingProgresses { get; set; }

    public virtual DbSet<WorkOsCard> WorkOsCards { get; set; }

    public virtual DbSet<WorkOsCardTrackingProgress> WorkOsCardTrackingProgresses { get; set; }

    public virtual DbSet<WorkOsList> WorkOsLists { get; set; }

    public virtual DbSet<WorkOsListTrackingProgress> WorkOsListTrackingProgresses { get; set; }

    public virtual DbSet<WorkScheduleComment> WorkScheduleComments { get; set; }

    public virtual DbSet<WorkShiftCheckinOut> WorkShiftCheckinOuts { get; set; }

    public virtual DbSet<WorkUserEvent> WorkUserEvents { get; set; }

    public virtual DbSet<WorkflowActivity> WorkflowActivities { get; set; }

    public virtual DbSet<WorkflowActivityRole> WorkflowActivityRoles { get; set; }

    public virtual DbSet<WorkflowInstance> WorkflowInstances { get; set; }

    public virtual DbSet<WorkflowInstanceRunning> WorkflowInstanceRunnings { get; set; }

    public virtual DbSet<WorkflowMilestone> WorkflowMilestones { get; set; }

    public virtual DbSet<WorkflowSetting> WorkflowSettings { get; set; }

    public virtual DbSet<WorkingSchedule> WorkingSchedules { get; set; }

    public virtual DbSet<WorkingScheduleAttr> WorkingScheduleAttrs { get; set; }

    public virtual DbSet<WorkingTracking> WorkingTrackings { get; set; }

    public virtual DbSet<ZoneDevicePlacement> ZoneDevicePlacements { get; set; }

    public virtual DbSet<ZoneSetup> ZoneSetups { get; set; }

    public virtual DbSet<ZoomManage> ZoomManages { get; set; }

    public virtual DbSet<ZoomReportError> ZoomReportErrors { get; set; }

    public virtual DbSet<_1ProductEntityMappingLog> _1ProductEntityMappingLogs { get; set; }

    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
        => optionsBuilder.UseSqlServer("server=117.6.131.222,1437;database=SmartWork_Vatco;uid=test;password=Vietnam@3i2024;multipleactiveresultsets=true;TrustServerCertificate=True");

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<ActInstanceUserActivity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACT_INST__3214EC27EE2E2A61");

            entity.ToTable("ACT_INSTANCE_USER_ACTIVITY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActInstCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACT_INST_CODE");
            entity.Property(e => e.Action)
                .HasMaxLength(100)
                .HasColumnName("ACTION");
            entity.Property(e => e.ChangeDetails).HasColumnName("CHANGE_DETAILS");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(255)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.IdObject)
                .HasMaxLength(255)
                .HasColumnName("ID_OBJECT");
            entity.Property(e => e.IsCheck).HasColumnName("IS_CHECK");
            entity.Property(e => e.Log).HasColumnName("LOG");
            entity.Property(e => e.UserId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<Activity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC275DDA5254");

            entity.ToTable("ACTIVITY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Desc).HasColumnName("DESC");
            entity.Property(e => e.Duration)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("DURATION");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Level).HasColumnName("LEVEL");
            entity.Property(e => e.ListGroupData).HasColumnName("LIST_GROUP_DATA");
            entity.Property(e => e.Located)
                .HasMaxLength(255)
                .HasColumnName("LOCATED");
            entity.Property(e => e.NestedWf).HasColumnName("NESTED_WF");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.RoleDefault)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ROLE_DEFAULT");
            entity.Property(e => e.ShapeJson).HasColumnName("SHAPE_JSON");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CODE");
        });

        modelBuilder.Entity<ActivityAttrDatum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC27A5FD6059");

            entity.ToTable("ACTIVITY_ATTR_DATA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.SessionId)
                .HasMaxLength(255)
                .HasColumnName("SESSION_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value)
                .HasMaxLength(255)
                .HasColumnName("VALUE");
            entity.Property(e => e.WorkFlowCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WORK_FLOW_CODE");
        });

        modelBuilder.Entity<ActivityAttrSetup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC2721CDDF99");

            entity.ToTable("ACTIVITY_ATTR_SETUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrDataType)
                .HasMaxLength(100)
                .HasColumnName("ATTR_DATA_TYPE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(255)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.AttrName)
                .HasMaxLength(255)
                .HasColumnName("ATTR_NAME");
            entity.Property(e => e.AttrUnit)
                .HasMaxLength(100)
                .HasColumnName("ATTR_UNIT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ActivityFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC277BDC5287");

            entity.ToTable("ACTIVITY_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .HasColumnName("FILE_ID");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileSize)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("FILE_SIZE");
            entity.Property(e => e.FileType)
                .HasMaxLength(255)
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ActivityInstFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC27A7B2A533");

            entity.ToTable("ACTIVITY_INST_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_INST_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .HasColumnName("FILE_ID");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileSize)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("FILE_SIZE");
            entity.Property(e => e.FileType)
                .HasMaxLength(255)
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsSign).HasColumnName("IS_SIGN");
            entity.Property(e => e.LstUserSign).HasColumnName("LST_USER_SIGN");
            entity.Property(e => e.ParentFile)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PARENT_FILE");
            entity.Property(e => e.SignatureJson).HasColumnName("SIGNATURE_JSON");
            entity.Property(e => e.SignatureRequire).HasColumnName("SIGNATURE_REQUIRE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ActivityInstance>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC27B59793B7");

            entity.ToTable("ACTIVITY_INSTANCE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.ActivityInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_INST_CODE");
            entity.Property(e => e.BomIn)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("BOM_IN");
            entity.Property(e => e.BomOut)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("BOM_OUT");
            entity.Property(e => e.BomStatus)
                .HasMaxLength(255)
                .HasColumnName("BOM_STATUS");
            entity.Property(e => e.BomStatusJson)
                .HasMaxLength(255)
                .HasColumnName("BOM_STATUS_JSON");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Desc).HasColumnName("DESC");
            entity.Property(e => e.Duration)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("DURATION");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonStatusLog).HasColumnName("JSON_STATUS_LOG");
            entity.Property(e => e.Located)
                .HasMaxLength(255)
                .HasColumnName("LOCATED");
            entity.Property(e => e.LockShare).HasColumnName("LOCK_SHARE");
            entity.Property(e => e.LogCountDown).HasColumnName("LOG_COUNT_DOWN");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.ShapeJson).HasColumnName("SHAPE_JSON");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WfInstRelative).HasColumnName("WF_INST_RELATIVE");
            entity.Property(e => e.WorkflowCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CODE");
        });

        modelBuilder.Entity<ActivityInstanceLogDatum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC27370E26DF");

            entity.ToTable("ACTIVITY_INSTANCE_LOG_DATA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.ActFromDevice)
                .HasMaxLength(255)
                .HasColumnName("ACT_FROM_DEVICE");
            entity.Property(e => e.ActLocationGps)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("ACT_LOCATION_GPS");
            entity.Property(e => e.ActTime).HasColumnName("ACT_TIME");
            entity.Property(e => e.ActType)
                .HasMaxLength(255)
                .HasColumnName("ACT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Log).HasColumnName("LOG");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkFlowCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WORK_FLOW_CODE");
        });

        modelBuilder.Entity<ActivityInstanceObjective>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC275E41B798");

            entity.ToTable("ACTIVITY_INSTANCE_OBJECTIVE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_INST_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjectInst)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_INST");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ActivityLogDatum>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC271B1D280A");

            entity.ToTable("ACTIVITY_LOG_DATA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.ActFromDevice)
                .HasMaxLength(255)
                .HasColumnName("ACT_FROM_DEVICE");
            entity.Property(e => e.ActLocationGps)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("ACT_LOCATION_GPS");
            entity.Property(e => e.ActTime).HasColumnName("ACT_TIME");
            entity.Property(e => e.ActType)
                .HasMaxLength(255)
                .HasColumnName("ACT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Log).HasColumnName("LOG");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkFlowCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WORK_FLOW_CODE");
        });

        modelBuilder.Entity<ActivityTransition>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC27CEBBDBD1");

            entity.ToTable("ACTIVITY_TRANSITION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActDestination)
                .HasMaxLength(255)
                .HasColumnName("ACT_DESTINATION");
            entity.Property(e => e.ActInitial)
                .HasMaxLength(255)
                .HasColumnName("ACT_INITIAL");
            entity.Property(e => e.Condition)
                .HasMaxLength(255)
                .HasColumnName("CONDITION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WfCode)
                .HasMaxLength(255)
                .HasColumnName("WF_CODE");
        });

        modelBuilder.Entity<ActivityWorkflow>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC27EC13127A");

            entity.ToTable("ACTIVITY_WORKFLOW");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActAttributeGraph).HasColumnName("ACT_ATTRIBUTE_GRAPH");
            entity.Property(e => e.ActCode)
                .HasMaxLength(255)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.ActName)
                .HasMaxLength(255)
                .HasColumnName("ACT_NAME");
            entity.Property(e => e.ActNoted)
                .HasMaxLength(1000)
                .HasColumnName("ACT_NOTED");
            entity.Property(e => e.ActParent)
                .HasMaxLength(255)
                .HasColumnName("ACT_PARENT");
            entity.Property(e => e.ActStatus)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACT_STATUS");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AdAccessLog>(entity =>
        {
            entity.HasKey(e => e.AccessLogId).HasName("PK__AD_ACCES__78B767BE88577FAB");

            entity.ToTable("AD_ACCESS_LOG");

            entity.Property(e => e.AccessLogId)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("ACCESS_LOG_ID");
            entity.Property(e => e.AccessDate).HasColumnName("ACCESS_DATE");
            entity.Property(e => e.AccessLogApplication)
                .HasMaxLength(255)
                .HasColumnName("ACCESS_LOG_APPLICATION");
            entity.Property(e => e.AccessLogCode)
                .HasMaxLength(255)
                .HasColumnName("ACCESS_LOG_CODE");
            entity.Property(e => e.Action)
                .HasMaxLength(50)
                .HasColumnName("ACTION");
            entity.Property(e => e.Description)
                .HasMaxLength(450)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IpAddress)
                .HasMaxLength(50)
                .HasColumnName("IP_ADDRESS");
            entity.Property(e => e.UserId)
                .HasMaxLength(250)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<AdActionLog>(entity =>
        {
            entity.HasKey(e => e.ActionLogId).HasName("PK__AD_ACTIO__F3959627D54E155E");

            entity.ToTable("AD_ACTION_LOG");

            entity.Property(e => e.ActionLogId)
                .ValueGeneratedNever()
                .HasColumnName("ACTION_LOG_ID");
            entity.Property(e => e.ActionLogApplication)
                .HasMaxLength(500)
                .HasColumnName("ACTION_LOG_APPLICATION");
            entity.Property(e => e.ActionLogHost)
                .HasMaxLength(100)
                .HasColumnName("ACTION_LOG_HOST");
            entity.Property(e => e.ActionLogPath)
                .HasMaxLength(300)
                .HasColumnName("ACTION_LOG_PATH");
            entity.Property(e => e.AffectedTo)
                .HasMaxLength(255)
                .HasColumnName("AFFECTED_TO");
            entity.Property(e => e.Browser)
                .HasMaxLength(300)
                .HasColumnName("BROWSER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.DataNew).HasColumnName("DATA_NEW");
            entity.Property(e => e.DataOld).HasColumnName("DATA_OLD");
            entity.Property(e => e.IpAddress)
                .HasMaxLength(20)
                .HasColumnName("IP_ADDRESS");
            entity.Property(e => e.LogLevel)
                .HasMaxLength(50)
                .HasColumnName("LOG_LEVEL");
            entity.Property(e => e.Message)
                .HasMaxLength(2000)
                .HasColumnName("MESSAGE");
            entity.Property(e => e.ResourceName)
                .HasMaxLength(255)
                .HasColumnName("RESOURCE_NAME");
            entity.Property(e => e.TableModified)
                .HasMaxLength(255)
                .HasColumnName("TABLE_MODIFIED");
        });

        modelBuilder.Entity<AdAppFunction>(entity =>
        {
            entity.HasKey(e => e.AppFunctionId).HasName("PK__AD_APP_F__A5B8F153C0A1FD36");

            entity.ToTable("AD_APP_FUNCTION");

            entity.Property(e => e.AppFunctionId).HasColumnName("APP_FUNCTION_ID");
            entity.Property(e => e.ApplicationCode)
                .HasMaxLength(50)
                .HasColumnName("APPLICATION_CODE");
            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
        });

        modelBuilder.Entity<AdApplication>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AD_APPLICATION");

            entity.Property(e => e.AppUrl)
                .HasMaxLength(300)
                .HasColumnName("APP_URL");
            entity.Property(e => e.ApplicationCode)
                .HasMaxLength(50)
                .HasColumnName("APPLICATION_CODE");
            entity.Property(e => e.ApplicationId)
                .ValueGeneratedOnAdd()
                .HasColumnName("APPLICATION_ID");
            entity.Property(e => e.AuthenticationScheme)
                .HasMaxLength(255)
                .HasColumnName("AUTHENTICATION_SCHEME");
            entity.Property(e => e.Authority)
                .HasMaxLength(255)
                .HasColumnName("AUTHORITY");
            entity.Property(e => e.ClientId)
                .HasMaxLength(255)
                .HasColumnName("CLIENT_ID");
            entity.Property(e => e.ClientSecret)
                .HasMaxLength(255)
                .HasColumnName("CLIENT_SECRET");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Icon)
                .HasMaxLength(300)
                .HasColumnName("ICON");
            entity.Property(e => e.NameClaimType)
                .HasMaxLength(255)
                .HasColumnName("NAME_CLAIM_TYPE");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.RequireHttps).HasColumnName("REQUIRE_HTTPS");
            entity.Property(e => e.ResponseType)
                .HasMaxLength(255)
                .HasColumnName("RESPONSE_TYPE");
            entity.Property(e => e.RoleClaimType)
                .HasMaxLength(255)
                .HasColumnName("ROLE_CLAIM_TYPE");
            entity.Property(e => e.Scope)
                .HasMaxLength(255)
                .HasColumnName("SCOPE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<AdAuthoring>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AD_AUTHO__3214EC27CBED371E");

            entity.ToTable("AD_AUTHORING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Confirm)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CONFIRM");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.FromUser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FROM_USER");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.ToUser)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TO_USER");
        });

        modelBuilder.Entity<AdDepartment>(entity =>
        {
            entity.HasKey(e => e.DepartmentCode).HasName("PK__AD_DEPAR__A0EB8FEE37739F6B");

            entity.ToTable("AD_DEPARTMENT");

            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(50)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(45)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate)
                .HasPrecision(6)
                .HasColumnName("CREATED_DATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentId)
                .ValueGeneratedOnAdd()
                .HasColumnName("DEPARTMENT_ID");
            entity.Property(e => e.Description)
                .HasMaxLength(100)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEnabled).HasColumnName("IS_ENABLED");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(50)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(45)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate)
                .HasPrecision(6)
                .HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<AdDepartmentDeploy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AD_DEPARTMENT_DEPLOY");

            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate)
                .HasPrecision(6)
                .HasColumnName("CREATED_DATE");
            entity.Property(e => e.DeletedBy).HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.DepartmentId).HasColumnName("DEPARTMENT_ID");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEnabled).HasColumnName("IS_ENABLED");
            entity.Property(e => e.ParentCode).HasColumnName("PARENT_CODE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.Title).HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate)
                .HasPrecision(6)
                .HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<AdDivision>(entity =>
        {
            entity.HasKey(e => e.Division).HasName("PK__AD_DIVIS__4DFF45DE72C389E8");

            entity.ToTable("AD_DIVISION");

            entity.Property(e => e.Division)
                .HasMaxLength(255)
                .HasColumnName("DIVISION");
            entity.Property(e => e.DivisionDesc)
                .HasMaxLength(255)
                .HasColumnName("DIVISION_DESC");
            entity.Property(e => e.UpdateTime)
                .HasMaxLength(50)
                .HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<AdDivisionCopy>(entity =>
        {
            entity.HasKey(e => e.Division).HasName("PK__AD_DIVIS__4DFF45DE5A639B76");

            entity.ToTable("AD_DIVISION_copy");

            entity.Property(e => e.Division)
                .HasMaxLength(255)
                .HasColumnName("DIVISION");
            entity.Property(e => e.DivisionDesc)
                .HasMaxLength(255)
                .HasColumnName("DIVISION_DESC");
            entity.Property(e => e.UpdateTime)
                .HasMaxLength(50)
                .HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<AdFunction>(entity =>
        {
            entity.HasKey(e => e.FunctionCode).HasName("PK__AD_FUNCT__157D5A59F9A63671");

            entity.ToTable("AD_FUNCTION");

            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.FunctionId)
                .ValueGeneratedOnAdd()
                .HasColumnName("FUNCTION_ID");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(50)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");

            entity.HasOne(d => d.ParentCodeNavigation).WithMany(p => p.InverseParentCodeNavigation)
                .HasForeignKey(d => d.ParentCode)
                .HasConstraintName("FK__AD_FUNCTI__PAREN__135DC465");
        });

        modelBuilder.Entity<AdFunctionBackUp>(entity =>
        {
            entity.HasKey(e => e.FunctionCode).HasName("PK__AD_FUNCT__157D5A5983ABCB15");

            entity.ToTable("AD_FUNCTION_BACK_UP");

            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.FunctionId)
                .ValueGeneratedOnAdd()
                .HasColumnName("FUNCTION_ID");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(50)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");

            entity.HasOne(d => d.ParentCodeNavigation).WithMany(p => p.InverseParentCodeNavigation)
                .HasForeignKey(d => d.ParentCode)
                .HasConstraintName("FK__AD_FUNCTI__PAREN__30E33A54");
        });

        modelBuilder.Entity<AdGroupUser>(entity =>
        {
            entity.HasKey(e => e.GroupUserCode).HasName("PK__AD_GROUP__707D788F53CD764B");

            entity.ToTable("AD_GROUP_USER");

            entity.Property(e => e.GroupUserCode)
                .HasMaxLength(50)
                .HasColumnName("GROUP_USER_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(45)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate)
                .HasPrecision(6)
                .HasColumnName("CREATED_DATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(100)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.GroupUserId)
                .ValueGeneratedOnAdd()
                .HasColumnName("GROUP_USER_ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEnabled).HasColumnName("IS_ENABLED");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(50)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(45)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate)
                .HasPrecision(6)
                .HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<AdGroupUserDeploy>(entity =>
        {
            entity.HasKey(e => e.GroupUserCode).HasName("PK__AD_GROUP__707D788FE441F6B8");

            entity.ToTable("AD_GROUP_USER_DEPLOY");

            entity.Property(e => e.GroupUserCode)
                .HasMaxLength(50)
                .HasColumnName("GROUP_USER_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate)
                .HasPrecision(6)
                .HasColumnName("CREATED_DATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.GroupUserId)
                .ValueGeneratedOnAdd()
                .HasColumnName("GROUP_USER_ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEnabled).HasColumnName("IS_ENABLED");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(50)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.ReqCode).HasColumnName("REQ_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate)
                .HasPrecision(6)
                .HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<AdLanguage>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AD_LANGUAGE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Culture)
                .HasMaxLength(10)
                .HasColumnName("CULTURE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedDate).HasColumnName("DELETED_DATE");
            entity.Property(e => e.DisplayName)
                .HasMaxLength(256)
                .HasColumnName("DISPLAY_NAME");
            entity.Property(e => e.Icon)
                .HasMaxLength(128)
                .HasColumnName("ICON");
            entity.Property(e => e.IsDefault).HasColumnName("IS_DEFAULT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEnabled).HasColumnName("IS_ENABLED");
            entity.Property(e => e.LanguageId)
                .ValueGeneratedOnAdd()
                .HasColumnName("LANGUAGE_ID");
            entity.Property(e => e.Name)
                .HasMaxLength(256)
                .HasColumnName("NAME");
            entity.Property(e => e.Ordering).HasColumnName("ORDERING");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<AdLanguageText>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AD_LANGUAGE_TEXT");

            entity.Property(e => e.Caption)
                .HasMaxLength(500)
                .HasColumnName("CAPTION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedDate).HasColumnName("DELETED_DATE");
            entity.Property(e => e.GroupCaption)
                .HasMaxLength(20)
                .HasColumnName("GROUP_CAPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LanguageId).HasColumnName("LANGUAGE_ID");
            entity.Property(e => e.LanguageTextId)
                .ValueGeneratedOnAdd()
                .HasColumnName("LANGUAGE_TEXT_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
            entity.Property(e => e.Value).HasColumnName("VALUE");
        });

        modelBuilder.Entity<AdOrganization>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AD_ORGANIZATION");

            entity.Property(e => e.Company)
                .HasMaxLength(255)
                .HasColumnName("COMPANY");
            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .HasColumnName("COUNTRY");
            entity.Property(e => e.DepartmentCode).HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.Division)
                .HasMaxLength(255)
                .HasColumnName("DIVISION");
            entity.Property(e => e.HierarchyCode)
                .HasMaxLength(255)
                .HasColumnName("HIERARCHY_CODE");
            entity.Property(e => e.IsEnabled).HasColumnName("IS_ENABLED");
            entity.Property(e => e.OrgAddonCode)
                .HasMaxLength(50)
                .HasColumnName("ORG_ADDON_CODE");
            entity.Property(e => e.OrgCode)
                .HasMaxLength(50)
                .HasColumnName("ORG_CODE");
            entity.Property(e => e.OrgGroup).HasColumnName("ORG_GROUP");
            entity.Property(e => e.OrgId)
                .ValueGeneratedOnAdd()
                .HasColumnName("ORG_ID");
            entity.Property(e => e.OrgName)
                .HasMaxLength(500)
                .HasColumnName("ORG_NAME");
            entity.Property(e => e.OrgOrd)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("ORG_ORD");
            entity.Property(e => e.OrgParentCode)
                .HasMaxLength(50)
                .HasColumnName("ORG_PARENT_CODE");
            entity.Property(e => e.OrgUpdateTime)
                .HasMaxLength(50)
                .HasColumnName("ORG_UPDATE_TIME");
            entity.Property(e => e.State)
                .HasMaxLength(255)
                .HasColumnName("STATE");
        });

        modelBuilder.Entity<AdOrganizationDeploy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AD_ORGANIZATION_DEPLOY");

            entity.Property(e => e.Company)
                .HasMaxLength(255)
                .HasColumnName("COMPANY");
            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .HasColumnName("COUNTRY");
            entity.Property(e => e.DepartmentCode).HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.Division)
                .HasMaxLength(255)
                .HasColumnName("DIVISION");
            entity.Property(e => e.HierarchyCode)
                .HasMaxLength(255)
                .HasColumnName("HIERARCHY_CODE");
            entity.Property(e => e.IsEnabled).HasColumnName("IS_ENABLED");
            entity.Property(e => e.OrgAddonCode)
                .HasMaxLength(50)
                .HasColumnName("ORG_ADDON_CODE");
            entity.Property(e => e.OrgCode)
                .HasMaxLength(50)
                .HasColumnName("ORG_CODE");
            entity.Property(e => e.OrgGroup).HasColumnName("ORG_GROUP");
            entity.Property(e => e.OrgId).HasColumnName("ORG_ID");
            entity.Property(e => e.OrgName)
                .HasMaxLength(500)
                .HasColumnName("ORG_NAME");
            entity.Property(e => e.OrgOrd)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("ORG_ORD");
            entity.Property(e => e.OrgParentCode)
                .HasMaxLength(50)
                .HasColumnName("ORG_PARENT_CODE");
            entity.Property(e => e.OrgUpdateTime)
                .HasMaxLength(50)
                .HasColumnName("ORG_UPDATE_TIME");
            entity.Property(e => e.ReqCode).HasColumnName("REQ_CODE");
            entity.Property(e => e.State)
                .HasMaxLength(255)
                .HasColumnName("STATE");
        });

        modelBuilder.Entity<AdParameter>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AD_PARAMETER");

            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.ParameterCode)
                .HasMaxLength(50)
                .HasColumnName("PARAMETER_CODE");
            entity.Property(e => e.ParameterId)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("PARAMETER_ID");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(50)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Value)
                .HasMaxLength(50)
                .HasColumnName("VALUE");
            entity.Property(e => e.Value2)
                .HasMaxLength(50)
                .HasColumnName("VALUE2");
            entity.Property(e => e.Value3)
                .HasMaxLength(50)
                .HasColumnName("VALUE3");
            entity.Property(e => e.Value4)
                .HasMaxLength(50)
                .HasColumnName("VALUE4");
            entity.Property(e => e.Value5)
                .HasMaxLength(50)
                .HasColumnName("VALUE5");
        });

        modelBuilder.Entity<AdPermission>(entity =>
        {
            entity.HasKey(e => e.PermissionId).HasName("PK__AD_PERMI__EB3C611EBF206BB5");

            entity.ToTable("AD_PERMISSION");

            entity.Property(e => e.PermissionId).HasColumnName("PERMISSION_ID");
            entity.Property(e => e.ApplicationCode)
                .HasMaxLength(50)
                .HasColumnName("APPLICATION_CODE");
            entity.Property(e => e.ExpiredDate).HasColumnName("EXPIRED_DATE");
            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
            entity.Property(e => e.GroupUserCode)
                .HasMaxLength(50)
                .HasColumnName("GROUP_USER_CODE");
            entity.Property(e => e.ResourceCode)
                .HasMaxLength(100)
                .HasColumnName("RESOURCE_CODE");
            entity.Property(e => e.RoleId)
                .HasMaxLength(50)
                .HasColumnName("ROLE_ID");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<AdPrivilege>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AD_PRIVILEGE");

            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
            entity.Property(e => e.PrivilegeId)
                .ValueGeneratedOnAdd()
                .HasColumnName("PRIVILEGE_ID");
            entity.Property(e => e.ResourceCode)
                .HasMaxLength(100)
                .HasColumnName("RESOURCE_CODE");
        });

        modelBuilder.Entity<AdPrivilegeBackUp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AD_PRIVILEGE_BACK_UP");

            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
            entity.Property(e => e.PrivilegeId)
                .ValueGeneratedOnAdd()
                .HasColumnName("PRIVILEGE_ID");
            entity.Property(e => e.ResourceCode)
                .HasMaxLength(100)
                .HasColumnName("RESOURCE_CODE");
        });

        modelBuilder.Entity<AdResource>(entity =>
        {
            entity.HasKey(e => e.ResourceCode).HasName("PK__AD_RESOU__094C9AB2928C8BA2");

            entity.ToTable("AD_RESOURCE");

            entity.Property(e => e.ResourceCode)
                .HasMaxLength(100)
                .HasColumnName("RESOURCE_CODE");
            entity.Property(e => e.Api)
                .HasMaxLength(255)
                .HasColumnName("API");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(2000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(100)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.ResourceId)
                .ValueGeneratedOnAdd()
                .HasColumnName("RESOURCE_ID");
            entity.Property(e => e.Scope).HasColumnName("SCOPE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Style)
                .HasMaxLength(10)
                .HasColumnName("STYLE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<AdResourceBack02112020>(entity =>
        {
            entity.HasKey(e => e.ResourceCode).HasName("PK__AD_RESOU__094C9AB2343131F7");

            entity.ToTable("AD_RESOURCE_BACK_02_11_2020");

            entity.Property(e => e.ResourceCode)
                .HasMaxLength(100)
                .HasColumnName("RESOURCE_CODE");
            entity.Property(e => e.Api)
                .HasMaxLength(255)
                .HasColumnName("API");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(2000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(100)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.ResourceId)
                .ValueGeneratedOnAdd()
                .HasColumnName("RESOURCE_ID");
            entity.Property(e => e.Scope).HasColumnName("SCOPE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Style)
                .HasMaxLength(10)
                .HasColumnName("STYLE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<AdResourceBackUp>(entity =>
        {
            entity.HasKey(e => e.ResourceCode).HasName("PK__AD_RESOU__094C9AB2EDCAAB96");

            entity.ToTable("AD_RESOURCE_BACK_UP");

            entity.Property(e => e.ResourceCode)
                .HasMaxLength(100)
                .HasColumnName("RESOURCE_CODE");
            entity.Property(e => e.Api)
                .HasMaxLength(255)
                .HasColumnName("API");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(2000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(100)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.ResourceId)
                .ValueGeneratedOnAdd()
                .HasColumnName("RESOURCE_ID");
            entity.Property(e => e.Scope).HasColumnName("SCOPE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Style)
                .HasMaxLength(10)
                .HasColumnName("STYLE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<AdUserDepartment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__AD_USER___3214EC27918F8018");

            entity.ToTable("AD_USER_DEPARTMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Branch)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(50)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsMain).HasColumnName("IS_MAIN");
            entity.Property(e => e.RoleId)
                .HasMaxLength(50)
                .HasColumnName("ROLE_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<AdUserInGroup>(entity =>
        {
            entity.HasKey(e => e.UserInGroupId).HasName("PK__AD_USER___79C23E6E362E3FEA");

            entity.ToTable("AD_USER_IN_GROUP");

            entity.Property(e => e.UserInGroupId).HasColumnName("USER_IN_GROUP_ID");
            entity.Property(e => e.ApplicationCode)
                .HasMaxLength(50)
                .HasColumnName("APPLICATION_CODE");
            entity.Property(e => e.Branch)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BRANCH");
            entity.Property(e => e.BranchReference)
                .HasMaxLength(2000)
                .HasColumnName("BRANCH_REFERENCE");
            entity.Property(e => e.GrantAll).HasColumnName("GRANT_ALL");
            entity.Property(e => e.GroupUserCode)
                .HasMaxLength(50)
                .HasColumnName("GROUP_USER_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsMain).HasColumnName("IS_MAIN");
            entity.Property(e => e.RoleId)
                .HasMaxLength(50)
                .HasColumnName("ROLE_ID");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<AddonApp>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ADDON_APP");

            entity.Property(e => e.AppCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("APP_CODE");
            entity.Property(e => e.AppDate)
                .HasComment("Ngày xuất bản")
                .HasColumnName("APP_DATE");
            entity.Property(e => e.AppTitle)
                .HasMaxLength(255)
                .HasColumnName("APP_TITLE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Icon)
                .HasMaxLength(255)
                .HasColumnName("ICON");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LinkChplay)
                .HasMaxLength(50)
                .HasColumnName("LINK_CHPLAY");
            entity.Property(e => e.LinkIos)
                .HasMaxLength(50)
                .HasColumnName("LINK_IOS");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AddonAppServer>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ADDON_APP_SERVER");

            entity.Property(e => e.AppCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("APP_CODE");
            entity.Property(e => e.AppVendorCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("APP_VENDOR_CODE");
            entity.Property(e => e.Background)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND");
            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_COLOR");
            entity.Property(e => e.ButtonColor)
                .HasMaxLength(255)
                .HasColumnName("BUTTON_COLOR");
            entity.Property(e => e.Color)
                .HasMaxLength(255)
                .HasColumnName("COLOR");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FontFamily)
                .HasMaxLength(255)
                .HasColumnName("FONT_FAMILY");
            entity.Property(e => e.FontSize)
                .HasMaxLength(255)
                .HasColumnName("FONT_SIZE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Logo)
                .HasMaxLength(255)
                .HasColumnName("LOGO");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.PinColor)
                .HasMaxLength(255)
                .HasColumnName("PIN_COLOR");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.QrcodeColor)
                .HasMaxLength(255)
                .HasColumnName("QRCODE_COLOR");
            entity.Property(e => e.ServerAddress)
                .HasMaxLength(255)
                .HasColumnName("SERVER_ADDRESS");
            entity.Property(e => e.ServerCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SERVER_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.TextloginColor)
                .HasMaxLength(255)
                .HasColumnName("TEXTLOGIN_COLOR");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AdminBoundaryVn>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ADMIN_BOUNDARY_VN");

            entity.Property(e => e.Cca2)
                .HasMaxLength(255)
                .HasColumnName("CCA_2");
            entity.Property(e => e.Ccn2).HasColumnName("CCN_2");
            entity.Property(e => e.Engtype2)
                .HasMaxLength(255)
                .HasColumnName("ENGTYPE_2");
            entity.Property(e => e.Hasc2)
                .HasMaxLength(255)
                .HasColumnName("HASC_2");
            entity.Property(e => e.Id0).HasColumnName("ID_0");
            entity.Property(e => e.Id1).HasColumnName("ID_1");
            entity.Property(e => e.Id2)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID_2");
            entity.Property(e => e.Iso)
                .HasMaxLength(255)
                .HasColumnName("ISO");
            entity.Property(e => e.Name0)
                .HasMaxLength(255)
                .HasColumnName("NAME_0");
            entity.Property(e => e.Name1)
                .HasMaxLength(255)
                .HasColumnName("NAME_1");
            entity.Property(e => e.Name2)
                .HasMaxLength(255)
                .HasColumnName("NAME_2");
            entity.Property(e => e.NlName2)
                .HasMaxLength(255)
                .HasColumnName("NL_NAME_2");
            entity.Property(e => e.Type2)
                .HasMaxLength(255)
                .HasColumnName("TYPE_2");
            entity.Property(e => e.Varname2)
                .HasMaxLength(255)
                .HasColumnName("VARNAME_2");
            entity.Property(e => e.Wkt).HasColumnName("WKT");
        });

        modelBuilder.Entity<AdminProvinceVn>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ADMIN_PROVINCE_VN");

            entity.Property(e => e.Id1)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID_1");
            entity.Property(e => e.Name1)
                .HasMaxLength(255)
                .HasColumnName("NAME_1");
        });

        modelBuilder.Entity<AllowanceCat>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ALLOWANC__3214EC27437855B9");

            entity.ToTable("ALLOWANCE_CAT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Base).HasColumnName("BASE");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DefaultValue)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DEFAULT_VALUE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ExcelColumn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("EXCEL_COLUMN");
            entity.Property(e => e.Expression)
                .HasMaxLength(255)
                .HasColumnName("EXPRESSION");
            entity.Property(e => e.Group)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AllowanceEmployeeAccept>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ALLOWANC__3214EC27CE010FA8");

            entity.ToTable("ALLOWANCE_EMPLOYEE_ACCEPT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AllowanceCatCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ALLOWANCE_CAT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EmployeeId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMPLOYEE_ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AllowanceEmployeeMonth>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ALLOWANC__3214EC274F22F1BD");

            entity.ToTable("ALLOWANCE_EMPLOYEE_MONTH");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.C).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.D).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_NAME");
            entity.Property(e => e.E).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.EmployeeId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EMPLOYEE_ID");
            entity.Property(e => e.EmployeeName)
                .HasMaxLength(255)
                .HasColumnName("EMPLOYEE_NAME");
            entity.Property(e => e.F).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.G).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.H).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.I).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.J).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.K).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.L).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.M).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.N).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.O).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.P).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Q).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.R).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.S).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.T).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.U).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.V).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.W).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.X).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Y).HasColumnType("decimal(18, 2)");
        });

        modelBuilder.Entity<AllowanceEmployeeParam>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ALLOWANC__3214EC27E3B2BDC2");

            entity.ToTable("ALLOWANCE_EMPLOYEE_PARAM");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EmployeeId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EMPLOYEE_ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ParamCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PARAM_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<AllowanceParam>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ALLOWANC__3214EC27FFAD19B5");

            entity.ToTable("ALLOWANCE_PARAM");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Base).HasColumnName("BASE");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DefaultValue)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEFAULT_VALUE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ExcelColumn)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("EXCEL_COLUMN");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AmChartReDeMonth>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AmChart_RE_DE_Month");

            entity.Property(e => e.Id)
                .HasMaxLength(10)
                .IsFixedLength()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<AncestralHouse>(entity =>
        {
            entity.ToTable("ANCESTRAL_HOUSE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AddressGps)
                .HasMaxLength(1000)
                .HasColumnName("ADDRESS_GPS");
            entity.Property(e => e.AddressTxt)
                .HasMaxLength(1000)
                .HasColumnName("ADDRESS_TXT");
            entity.Property(e => e.AncestCode)
                .HasMaxLength(100)
                .HasColumnName("ANCEST_CODE");
            entity.Property(e => e.Avartar)
                .HasMaxLength(1000)
                .HasColumnName("AVARTAR");
            entity.Property(e => e.City)
                .HasMaxLength(200)
                .HasColumnName("CITY");
            entity.Property(e => e.CreateTime)
                .HasPrecision(0)
                .HasColumnName("CREATE_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.DataGps).HasColumnName("DATA_GPS");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.District)
                .HasMaxLength(100)
                .HasColumnName("DISTRICT");
            entity.Property(e => e.FamilyTreeCode)
                .HasMaxLength(100)
                .HasColumnName("FAMILY_TREE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEnable).HasColumnName("IS_ENABLE");
            entity.Property(e => e.Media).HasColumnName("MEDIA");
            entity.Property(e => e.Title)
                .HasMaxLength(1000)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime)
                .HasPrecision(0)
                .HasColumnName("UPDATE_TIME");
            entity.Property(e => e.Ward)
                .HasMaxLength(100)
                .HasColumnName("WARD");
        });

        modelBuilder.Entity<AppMeeting>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__APP_MEET__3214EC27396204B2");

            entity.ToTable("APP_MEETING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DisplayName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DISPLAY_NAME");
            entity.Property(e => e.Imei)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMEI");
            entity.Property(e => e.ZoomId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZOOM_ID");
            entity.Property(e => e.ZoomPasswork)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZOOM_PASSWORK");
        });

        modelBuilder.Entity<AppVendor>(entity =>
        {
            entity.HasKey(e => e.VendorCode).HasName("PK__APP_VEND__E99CB38508933510");

            entity.ToTable("APP_VENDOR");

            entity.Property(e => e.VendorCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("VENDOR_CODE");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .HasColumnName("EMAIL");
            entity.Property(e => e.GoogleMap)
                .HasMaxLength(255)
                .HasColumnName("GOOGLE_MAP");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AseanDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DOCUMENT__3214EC2735F22751");

            entity.ToTable("ASEAN_DOCUMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CateCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CATE_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileSite)
                .HasMaxLength(255)
                .HasColumnName("FILE_SITE");
            entity.Property(e => e.FileType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.FullPathView)
                .HasMaxLength(500)
                .HasColumnName("FULL_PATH_VIEW");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEdited).HasColumnName("IS_EDITED");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.Subdesc)
                .HasMaxLength(255)
                .HasColumnName("SUBDESC");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Version).HasColumnName("VERSION");
            entity.Property(e => e.ViewPath)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("VIEW_PATH");
        });

        modelBuilder.Entity<AspNetRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASP_NET___3214EC2787E46112");

            entity.ToTable("ASP_NET_ROLES");

            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .HasColumnName("CODE");
            entity.Property(e => e.Color)
                .HasMaxLength(255)
                .HasColumnName("COLOR");
            entity.Property(e => e.ConcurrencyStamp)
                .HasMaxLength(255)
                .HasColumnName("CONCURRENCY_STAMP");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(2000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Name)
                .HasMaxLength(256)
                .HasColumnName("NAME");
            entity.Property(e => e.NormalizedName)
                .HasMaxLength(256)
                .HasColumnName("NORMALIZED_NAME");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.TypeRole)
                .HasMaxLength(255)
                .HasColumnName("TYPE_ROLE");
        });

        modelBuilder.Entity<AspNetRoleClaim>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASP_NET___3214EC2778DCE8EE");

            entity.ToTable("ASP_NET_ROLE_CLAIMS");

            entity.Property(e => e.Id)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("ID");
            entity.Property(e => e.ClaimType).HasColumnName("CLAIM_TYPE");
            entity.Property(e => e.ClaimValue).HasColumnName("CLAIM_VALUE");
            entity.Property(e => e.RoleId)
                .HasMaxLength(450)
                .HasColumnName("ROLE_ID");
        });

        modelBuilder.Entity<AspNetRoleDeploy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ASP_NET_ROLE_DEPLOY");

            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .HasColumnName("CODE");
            entity.Property(e => e.Color)
                .HasMaxLength(255)
                .HasColumnName("COLOR");
            entity.Property(e => e.ConcurrencyStamp)
                .HasMaxLength(255)
                .HasColumnName("CONCURRENCY_STAMP");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(2000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .HasColumnName("ID");
            entity.Property(e => e.Name)
                .HasMaxLength(256)
                .HasColumnName("NAME");
            entity.Property(e => e.NormalizedName)
                .HasMaxLength(256)
                .HasColumnName("NORMALIZED_NAME");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.ReqCode).HasColumnName("REQ_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.TypeRole)
                .HasMaxLength(255)
                .HasColumnName("TYPE_ROLE");
        });

        modelBuilder.Entity<AspNetUser>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASP_NET___3214EC2779D0BF4E");

            entity.ToTable("ASP_NET_USERS");

            entity.HasIndex(e => e.NormalizedEmail, "EMAIL_INDEX");

            entity.HasIndex(e => e.AccountExecutiveId, "IX_1366617594");

            entity.HasIndex(e => e.BranchId, "IX_ASP_NET_USERS_BRANCH_ID");

            entity.HasIndex(e => e.NormalizedUserName, "USER_NAME_INDEX").IsUnique();

            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .HasColumnName("ID");
            entity.Property(e => e.AccessFailedCount).HasColumnName("ACCESS_FAILED_COUNT");
            entity.Property(e => e.AccountExecutiveId)
                .HasMaxLength(50)
                .HasColumnName("ACCOUNT_EXECUTIVE_ID");
            entity.Property(e => e.Active).HasColumnName("ACTIVE");
            entity.Property(e => e.Area)
                .HasMaxLength(4000)
                .HasColumnName("AREA");
            entity.Property(e => e.BackFace)
                .HasMaxLength(256)
                .HasColumnName("BACK_FACE");
            entity.Property(e => e.Balance)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("BALANCE");
            entity.Property(e => e.BranchId)
                .HasMaxLength(50)
                .HasColumnName("BRANCH_ID");
            entity.Property(e => e.ConcurrencyStamp)
                .HasMaxLength(50)
                .HasColumnName("CONCURRENCY_STAMP");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.CustomerId)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER_ID");
            entity.Property(e => e.DepartmentId)
                .HasMaxLength(50)
                .HasColumnName("DEPARTMENT_ID");
            entity.Property(e => e.Description)
                .HasMaxLength(2000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Email)
                .HasMaxLength(256)
                .HasColumnName("EMAIL");
            entity.Property(e => e.EmailConfirmed).HasColumnName("EMAIL_CONFIRMED");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(50)
                .HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.FamilyName)
                .HasMaxLength(256)
                .HasColumnName("FAMILY_NAME");
            entity.Property(e => e.FileCv)
                .HasMaxLength(256)
                .HasColumnName("FILE_CV");
            entity.Property(e => e.FrontFace)
                .HasMaxLength(256)
                .HasColumnName("FRONT_FACE");
            entity.Property(e => e.Gender).HasColumnName("GENDER");
            entity.Property(e => e.GivenName)
                .HasMaxLength(256)
                .HasColumnName("GIVEN_NAME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsCheckin).HasColumnName("IS_CHECKIN");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsExceeded).HasColumnName("IS_EXCEEDED");
            entity.Property(e => e.IsOnline).HasColumnName("IS_ONLINE");
            entity.Property(e => e.LeadersOfUser)
                .HasMaxLength(1000)
                .HasColumnName("LEADERS_OF_USER");
            entity.Property(e => e.LockoutEnabled).HasColumnName("LOCKOUT_ENABLED");
            entity.Property(e => e.LockoutEnd).HasColumnName("LOCKOUT_END");
            entity.Property(e => e.LoginFailCount).HasColumnName("LOGIN_FAIL_COUNT");
            entity.Property(e => e.LoginTime).HasColumnName("LOGIN_TIME");
            entity.Property(e => e.LogoutTime).HasColumnName("LOGOUT_TIME");
            entity.Property(e => e.MiddleName)
                .HasMaxLength(256)
                .HasColumnName("MIDDLE_NAME");
            entity.Property(e => e.NormalizedEmail)
                .HasMaxLength(256)
                .HasColumnName("NORMALIZED_EMAIL");
            entity.Property(e => e.NormalizedUserName)
                .HasMaxLength(256)
                .HasColumnName("NORMALIZED_USER_NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(2000)
                .HasColumnName("NOTE");
            entity.Property(e => e.OfficeNumber)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("OFFICE_NUMBER");
            entity.Property(e => e.OrgReference)
                .HasMaxLength(2000)
                .HasColumnName("ORG_REFERENCE");
            entity.Property(e => e.PasswordHash)
                .HasMaxLength(2000)
                .HasColumnName("PASSWORD_HASH");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(100)
                .HasColumnName("PHONE_NUMBER");
            entity.Property(e => e.PhoneNumberConfirmed).HasColumnName("PHONE_NUMBER_CONFIRMED");
            entity.Property(e => e.Picture)
                .HasMaxLength(256)
                .HasColumnName("PICTURE");
            entity.Property(e => e.Reason)
                .HasMaxLength(2000)
                .HasColumnName("REASON");
            entity.Property(e => e.Road)
                .HasMaxLength(4000)
                .IsUnicode(false)
                .HasColumnName("ROAD");
            entity.Property(e => e.RoleCombination)
                .HasMaxLength(2000)
                .HasColumnName("ROLE_COMBINATION");
            entity.Property(e => e.SecurityStamp)
                .HasMaxLength(50)
                .HasColumnName("SECURITY_STAMP");
            entity.Property(e => e.SessionLogin).HasColumnName("SESSION_LOGIN");
            entity.Property(e => e.ShiftList)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_LIST");
            entity.Property(e => e.SignImage)
                .HasMaxLength(255)
                .HasColumnName("SIGN_IMAGE");
            entity.Property(e => e.TwoFactorEnabled).HasColumnName("TWO_FACTOR_ENABLED");
            entity.Property(e => e.TypeStaff).HasColumnName("TYPE_STAFF");
            entity.Property(e => e.TypeWork)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TYPE_WORK");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
            entity.Property(e => e.UserActive)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("USER_ACTIVE");
            entity.Property(e => e.UserName)
                .HasMaxLength(256)
                .HasColumnName("USER_NAME");
            entity.Property(e => e.UserType).HasColumnName("USER_TYPE");
        });

        modelBuilder.Entity<AspNetUserClaim>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASP_NET___3214EC27AD630955");

            entity.ToTable("ASP_NET_USER_CLAIMS");

            entity.Property(e => e.Id)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("ID");
            entity.Property(e => e.ClaimType).HasColumnName("CLAIM_TYPE");
            entity.Property(e => e.ClaimValue).HasColumnName("CLAIM_VALUE");
            entity.Property(e => e.UserId)
                .HasMaxLength(450)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<AspNetUserDeploy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ASP_NET_USER_DEPLOY");

            entity.Property(e => e.AccessFailedCount).HasColumnName("ACCESS_FAILED_COUNT");
            entity.Property(e => e.AccountExecutiveId)
                .HasMaxLength(50)
                .HasColumnName("ACCOUNT_EXECUTIVE_ID");
            entity.Property(e => e.Active).HasColumnName("ACTIVE");
            entity.Property(e => e.Area)
                .HasMaxLength(256)
                .HasColumnName("AREA");
            entity.Property(e => e.BackFace)
                .HasMaxLength(256)
                .HasColumnName("BACK_FACE");
            entity.Property(e => e.Balance)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("BALANCE");
            entity.Property(e => e.BranchId)
                .HasMaxLength(50)
                .HasColumnName("BRANCH_ID");
            entity.Property(e => e.BranchName)
                .HasMaxLength(256)
                .HasColumnName("BRANCH_NAME");
            entity.Property(e => e.ConcurrencyStamp)
                .HasMaxLength(50)
                .HasColumnName("CONCURRENCY_STAMP");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.CustomerId)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER_ID");
            entity.Property(e => e.DepartmentId)
                .HasMaxLength(50)
                .HasColumnName("DEPARTMENT_ID");
            entity.Property(e => e.Description)
                .HasMaxLength(256)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Email)
                .HasMaxLength(256)
                .HasColumnName("EMAIL");
            entity.Property(e => e.EmailConfirmed).HasColumnName("EMAIL_CONFIRMED");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(50)
                .HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.FamilyName)
                .HasMaxLength(256)
                .HasColumnName("FAMILY_NAME");
            entity.Property(e => e.FileCv)
                .HasMaxLength(256)
                .HasColumnName("FILE_CV");
            entity.Property(e => e.FrontFace)
                .HasMaxLength(256)
                .HasColumnName("FRONT_FACE");
            entity.Property(e => e.Gender).HasColumnName("GENDER");
            entity.Property(e => e.GivenName)
                .HasMaxLength(256)
                .HasColumnName("GIVEN_NAME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(256)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .HasColumnName("ID");
            entity.Property(e => e.IsCheckin).HasColumnName("IS_CHECKIN");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsExceeded).HasColumnName("IS_EXCEEDED");
            entity.Property(e => e.IsOnline).HasColumnName("IS_ONLINE");
            entity.Property(e => e.LeadersOfUser)
                .HasMaxLength(1000)
                .HasColumnName("LEADERS_OF_USER");
            entity.Property(e => e.LockoutEnabled).HasColumnName("LOCKOUT_ENABLED");
            entity.Property(e => e.LockoutEnd).HasColumnName("LOCKOUT_END");
            entity.Property(e => e.LoginFailCount).HasColumnName("LOGIN_FAIL_COUNT");
            entity.Property(e => e.LoginTime).HasColumnName("LOGIN_TIME");
            entity.Property(e => e.LogoutTime).HasColumnName("LOGOUT_TIME");
            entity.Property(e => e.MiddleName)
                .HasMaxLength(256)
                .HasColumnName("MIDDLE_NAME");
            entity.Property(e => e.NormalizedEmail)
                .HasMaxLength(256)
                .HasColumnName("NORMALIZED_EMAIL");
            entity.Property(e => e.NormalizedUserName)
                .HasMaxLength(256)
                .HasColumnName("NORMALIZED_USER_NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(256)
                .HasColumnName("NOTE");
            entity.Property(e => e.OfficeNumber)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("OFFICE_NUMBER");
            entity.Property(e => e.OrgReference)
                .HasMaxLength(256)
                .HasColumnName("ORG_REFERENCE");
            entity.Property(e => e.PasswordHash)
                .HasMaxLength(256)
                .HasColumnName("PASSWORD_HASH");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(100)
                .HasColumnName("PHONE_NUMBER");
            entity.Property(e => e.PhoneNumberConfirmed).HasColumnName("PHONE_NUMBER_CONFIRMED");
            entity.Property(e => e.Picture)
                .HasMaxLength(256)
                .HasColumnName("PICTURE");
            entity.Property(e => e.PlainPassword)
                .HasMaxLength(256)
                .HasColumnName("PLAIN_PASSWORD");
            entity.Property(e => e.Reason)
                .HasMaxLength(256)
                .HasColumnName("REASON");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(256)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.Road)
                .HasMaxLength(256)
                .IsUnicode(false)
                .HasColumnName("ROAD");
            entity.Property(e => e.RoleCode)
                .HasMaxLength(256)
                .HasColumnName("ROLE_CODE");
            entity.Property(e => e.RoleCombination)
                .HasMaxLength(256)
                .HasColumnName("ROLE_COMBINATION");
            entity.Property(e => e.SecurityStamp)
                .HasMaxLength(50)
                .HasColumnName("SECURITY_STAMP");
            entity.Property(e => e.SessionLogin).HasColumnName("SESSION_LOGIN");
            entity.Property(e => e.ShiftList)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_LIST");
            entity.Property(e => e.SignImage)
                .HasMaxLength(255)
                .HasColumnName("SIGN_IMAGE");
            entity.Property(e => e.TwoFactorEnabled).HasColumnName("TWO_FACTOR_ENABLED");
            entity.Property(e => e.TypeStaff).HasColumnName("TYPE_STAFF");
            entity.Property(e => e.TypeWork)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TYPE_WORK");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
            entity.Property(e => e.UserActive)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("USER_ACTIVE");
            entity.Property(e => e.UserName)
                .HasMaxLength(256)
                .HasColumnName("USER_NAME");
            entity.Property(e => e.UserType).HasColumnName("USER_TYPE");
        });

        modelBuilder.Entity<AspNetUserLogin>(entity =>
        {
            entity.HasKey(e => new { e.LoginProvider, e.ProviderKey }).HasName("PK__ASP_NET___E393925EE28B8130");

            entity.ToTable("ASP_NET_USER_LOGINS");

            entity.Property(e => e.LoginProvider).HasColumnName("LOGIN_PROVIDER");
            entity.Property(e => e.ProviderKey).HasColumnName("PROVIDER_KEY");
            entity.Property(e => e.ProviderDisplayName).HasColumnName("PROVIDER_DISPLAY_NAME");
            entity.Property(e => e.UserId)
                .HasMaxLength(450)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<AspNetUserRole>(entity =>
        {
            entity.HasKey(e => new { e.UserId, e.RoleId }).HasName("PK__ASP_NET___C612A6DD9C4863F0");

            entity.ToTable("ASP_NET_USER_ROLES");

            entity.Property(e => e.UserId).HasColumnName("USER_ID");
            entity.Property(e => e.RoleId).HasColumnName("ROLE_ID");
        });

        modelBuilder.Entity<AspNetUserToken>(entity =>
        {
            entity.HasKey(e => new { e.UserId, e.LoginProvider, e.Name }).HasName("PK__ASP_NET___FDB65D76B6104F3D");

            entity.ToTable("ASP_NET_USER_TOKENS");

            entity.Property(e => e.UserId).HasColumnName("USER_ID");
            entity.Property(e => e.LoginProvider).HasColumnName("LOGIN_PROVIDER");
            entity.Property(e => e.Name).HasColumnName("NAME");
            entity.Property(e => e.Value).HasColumnName("VALUE");
        });

        modelBuilder.Entity<AspNetUsersTest>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASP_NET___3214EC27540B7961");

            entity.ToTable("ASP_NET_USERS_TEST");

            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .HasColumnName("ID");
            entity.Property(e => e.AccessFailedCount).HasColumnName("ACCESS_FAILED_COUNT");
            entity.Property(e => e.AccountExecutiveId)
                .HasMaxLength(50)
                .HasColumnName("ACCOUNT_EXECUTIVE_ID");
            entity.Property(e => e.Active).HasColumnName("ACTIVE");
            entity.Property(e => e.Area)
                .HasMaxLength(4000)
                .HasColumnName("AREA");
            entity.Property(e => e.BranchId)
                .HasMaxLength(50)
                .HasColumnName("BRANCH_ID");
            entity.Property(e => e.ConcurrencyStamp)
                .HasMaxLength(50)
                .HasColumnName("CONCURRENCY_STAMP");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.DepartmentId)
                .HasMaxLength(50)
                .HasColumnName("DEPARTMENT_ID");
            entity.Property(e => e.Description)
                .HasMaxLength(2000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Email)
                .HasMaxLength(256)
                .HasColumnName("EMAIL");
            entity.Property(e => e.EmailConfirmed).HasColumnName("EMAIL_CONFIRMED");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(50)
                .HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.FamilyName)
                .HasMaxLength(256)
                .HasColumnName("FAMILY_NAME");
            entity.Property(e => e.Gender).HasColumnName("GENDER");
            entity.Property(e => e.GivenName)
                .HasMaxLength(256)
                .HasColumnName("GIVEN_NAME");
            entity.Property(e => e.IsCheckin).HasColumnName("IS_CHECKIN");
            entity.Property(e => e.IsExceeded).HasColumnName("IS_EXCEEDED");
            entity.Property(e => e.IsOnline).HasColumnName("IS_ONLINE");
            entity.Property(e => e.LockoutEnabled).HasColumnName("LOCKOUT_ENABLED");
            entity.Property(e => e.LockoutEnd).HasColumnName("LOCKOUT_END");
            entity.Property(e => e.LoginFailCount).HasColumnName("LOGIN_FAIL_COUNT");
            entity.Property(e => e.MiddleName)
                .HasMaxLength(256)
                .HasColumnName("MIDDLE_NAME");
            entity.Property(e => e.NormalizedEmail)
                .HasMaxLength(256)
                .HasColumnName("NORMALIZED_EMAIL");
            entity.Property(e => e.NormalizedUserName)
                .HasMaxLength(256)
                .HasColumnName("NORMALIZED_USER_NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(2000)
                .HasColumnName("NOTE");
            entity.Property(e => e.OfficeNumber)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("OFFICE_NUMBER");
            entity.Property(e => e.OrgReference)
                .HasMaxLength(2000)
                .HasColumnName("ORG_REFERENCE");
            entity.Property(e => e.PasswordHash)
                .HasMaxLength(2000)
                .HasColumnName("PASSWORD_HASH");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(100)
                .HasColumnName("PHONE_NUMBER");
            entity.Property(e => e.PhoneNumberConfirmed).HasColumnName("PHONE_NUMBER_CONFIRMED");
            entity.Property(e => e.Picture)
                .HasMaxLength(256)
                .HasColumnName("PICTURE");
            entity.Property(e => e.Reason)
                .HasMaxLength(2000)
                .HasColumnName("REASON");
            entity.Property(e => e.RoleCombination)
                .HasMaxLength(2000)
                .HasColumnName("ROLE_COMBINATION");
            entity.Property(e => e.SecurityStamp)
                .HasMaxLength(50)
                .HasColumnName("SECURITY_STAMP");
            entity.Property(e => e.SessionLogin).HasColumnName("SESSION_LOGIN");
            entity.Property(e => e.ShiftList)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_LIST");
            entity.Property(e => e.SignImage)
                .HasMaxLength(255)
                .HasColumnName("SIGN_IMAGE");
            entity.Property(e => e.TwoFactorEnabled).HasColumnName("TWO_FACTOR_ENABLED");
            entity.Property(e => e.TypeStaff).HasColumnName("TYPE_STAFF");
            entity.Property(e => e.TypeWork)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TYPE_WORK");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
            entity.Property(e => e.UserName)
                .HasMaxLength(256)
                .HasColumnName("USER_NAME");
            entity.Property(e => e.UserType).HasColumnName("USER_TYPE");
        });

        modelBuilder.Entity<Asset>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET__B7ED7EEF9958EB97");

            entity.ToTable("ASSET");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AssetGroup)
                .HasMaxLength(255)
                .HasColumnName("ASSET_GROUP");
            entity.Property(e => e.AssetName)
                .HasMaxLength(255)
                .HasColumnName("ASSET_NAME");
            entity.Property(e => e.AssetType)
                .HasMaxLength(255)
                .HasColumnName("ASSET_TYPE");
            entity.Property(e => e.BuyedTime).HasColumnName("BUYED_TIME");
            entity.Property(e => e.Cost)
                .HasMaxLength(255)
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.ExpireDate).HasColumnName("EXPIRE_DATE");
            entity.Property(e => e.ExpiredDate).HasColumnName("EXPIRED_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(500)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.PathImg)
                .HasMaxLength(255)
                .HasColumnName("PATH_IMG");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .HasColumnName("STATUS");
            entity.Property(e => e.SupplierCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SUPPLIER_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetActivity>(entity =>
        {
            entity.HasKey(e => e.ActivityId).HasName("PK__ASSET_AC__8E43DA628944258F");

            entity.ToTable("ASSET_ACTIVITY");

            entity.Property(e => e.ActivityId).HasColumnName("ACTIVITY_ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.ActMember).HasColumnName("ACT_MEMBER");
            entity.Property(e => e.ActNote).HasColumnName("ACT_NOTE");
            entity.Property(e => e.ActTitle)
                .HasMaxLength(255)
                .HasColumnName("ACT_TITLE");
            entity.Property(e => e.ActType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ACT_TYPE");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ParentCode).HasColumnName("PARENT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetActivityCalendar>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ASSET_ACTIVITY_CALENDAR");

            entity.Property(e => e.ActCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.ActExcuter)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ACT_EXCUTER");
            entity.Property(e => e.ActNote)
                .HasMaxLength(1000)
                .HasColumnName("ACT_NOTE");
            entity.Property(e => e.ActTime).HasColumnName("ACT_TIME");
            entity.Property(e => e.ActTitle)
                .HasMaxLength(255)
                .HasColumnName("ACT_TITLE");
            entity.Property(e => e.ActType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ACT_TYPE");
            entity.Property(e => e.ActivityId)
                .ValueGeneratedOnAdd()
                .HasColumnName("ACTIVITY_ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetAllocateDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__URENCO_A__F82BD2369DC7DDCF_copy1");

            entity.ToTable("ASSET_ALLOCATE_DETAILS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CostValue)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("COST_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListImages)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LIST_IMAGES");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetAllocateFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MATERIAL__3214EC270F824689_copy1");

            entity.ToTable("ASSET_ALLOCATE_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetAllocateHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_AL__3214EC277E1F7014");

            entity.ToTable("ASSET_ALLOCATE_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AllocateTime).HasColumnName("ALLOCATE_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentReceive)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_RECEIVE");
            entity.Property(e => e.DepartmentSend)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_SEND");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationSend)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_SEND");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.QrCode)
                .IsUnicode(false)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
            entity.Property(e => e.UserAllocate)
                .HasMaxLength(255)
                .HasColumnName("USER_ALLOCATE");
            entity.Property(e => e.UserReceiver)
                .HasMaxLength(50)
                .HasColumnName("USER_RECEIVER");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetAttrGalaxy>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_AT__3214EC2708E7D473");

            entity.ToTable("ASSET_ATTR_GALAXY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .HasColumnName("ATTR_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetAttribute>(entity =>
        {
            entity.HasKey(e => e.AttrId).HasName("PK__ASSET_AT__60E3791E1C5231C2");

            entity.ToTable("ASSET_ATTRIBUTE");

            entity.Property(e => e.AttrId).HasColumnName("ATTR_ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(255)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.AttrName)
                .HasMaxLength(255)
                .HasColumnName("ATTR_NAME");
            entity.Property(e => e.AttrNote)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATTR_NOTE");
            entity.Property(e => e.AttrUnit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATTR_UNIT");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .HasColumnName("ATTR_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetBuyDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_BU__3214EC27B1E6EB21");

            entity.ToTable("ASSET_BUY_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AssetType)
                .HasMaxLength(255)
                .HasColumnName("ASSET_TYPE");
            entity.Property(e => e.CostValue).HasColumnName("COST_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CurrencyAsset)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY_ASSET");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.StatusAsset)
                .HasMaxLength(255)
                .HasColumnName("STATUS_ASSET");
            entity.Property(e => e.Supplier)
                .HasMaxLength(255)
                .HasColumnName("SUPPLIER");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetBuyFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_AL__3214EC270E6D0A0C");

            entity.ToTable("ASSET_BUY_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetBuyHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_BU__3214EC277BAE64BA");

            entity.ToTable("ASSET_BUY_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Branch)
                .HasMaxLength(100)
                .HasColumnName("BRANCH");
            entity.Property(e => e.BuyTime).HasColumnName("BUY_TIME");
            entity.Property(e => e.Buyer)
                .HasMaxLength(255)
                .HasColumnName("BUYER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Depart)
                .HasMaxLength(255)
                .HasColumnName("DEPART");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .HasColumnName("LOCATION");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TotalMoney).HasColumnName("TOTAL_MONEY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetCancelDetail>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET_PR__3214EC27A68B3A1C");

            entity.ToTable("ASSET_CANCEL_DETAIL");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.Adress)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ADRESS");
            entity.Property(e => e.AssetName)
                .HasMaxLength(255)
                .HasColumnName("ASSET_NAME");
            entity.Property(e => e.AssetUnit)
                .HasMaxLength(255)
                .HasColumnName("ASSET_UNIT");
            entity.Property(e => e.CancelTime).HasColumnName("CANCEL_TIME");
            entity.Property(e => e.Cost)
                .HasColumnType("money")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListImage)
                .HasMaxLength(255)
                .HasColumnName("LIST_IMAGE");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.QuantityAsset).HasColumnName("QUANTITY_ASSET");
            entity.Property(e => e.StatusAsset)
                .HasMaxLength(255)
                .HasColumnName("STATUS_ASSET");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetCancelFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_LI__3214EC27428C60E4");

            entity.ToTable("ASSET_CANCEL_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(100)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetCancelHeader>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET_PR__3214EC2733DB25D2");

            entity.ToTable("ASSET_CANCEL_HEADER");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.Adress)
                .HasMaxLength(255)
                .HasColumnName("ADRESS");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CancelTime)
                .IsSparse()
                .HasColumnName("CANCEL_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.Person)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PERSON");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetEntityMapping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC073025C9F9");

            entity.ToTable("ASSET_ENTITY_MAPPING");

            entity.Property(e => e.AssetCode)
                .HasMaxLength(255)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<AssetGroup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ASSET_GROUP");

            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Level).HasColumnName("LEVEL");
            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .HasColumnName("NAME");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetImprovementCategory>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__ASSET_IM__E7DA297CFBBA2082");

            entity.ToTable("ASSET_IMPROVEMENT_CATEGORY");

            entity.Property(e => e.CategoryId).HasColumnName("CATEGORY_ID");
            entity.Property(e => e.AssetCodeCategory)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE_CATEGORY");
            entity.Property(e => e.CategoryCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CATEGORY_CODE");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("CATEGORY_NAME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.NoteCategory)
                .HasMaxLength(500)
                .HasColumnName("NOTE_CATEGORY");
            entity.Property(e => e.Price).HasColumnName("PRICE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.StatusCategory)
                .HasMaxLength(255)
                .HasColumnName("STATUS_CATEGORY");
            entity.Property(e => e.TicketCodeCategory)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE_CATEGORY");
            entity.Property(e => e.TotalMoneyCategory).HasColumnName("TOTAL_MONEY_CATEGORY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetImprovementDetail>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET_IM__B7ED7EEF2D291BE7");

            entity.ToTable("ASSET_IMPROVEMENT_DETAILS");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AssetQuantity).HasColumnName("ASSET_QUANTITY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListImage)
                .HasMaxLength(255)
                .HasColumnName("LIST_IMAGE");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.StatusAsset)
                .HasMaxLength(255)
                .HasColumnName("STATUS_ASSET");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TotalMoney).HasColumnName("TOTAL_MONEY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetImprovementFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_IM__3214EC27854770F4");

            entity.ToTable("ASSET_IMPROVEMENT_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetImprovementHeader>(entity =>
        {
            entity.HasKey(e => e.TicketId).HasName("PK__ASSET_IM__7F5E71D6678EB154");

            entity.ToTable("ASSET_IMPROVEMENT_HEADER");

            entity.Property(e => e.TicketId).HasColumnName("TICKET_ID");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartTransfer)
                .HasMaxLength(255)
                .HasColumnName("DEPART_TRANSFER");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationReceived)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_RECEIVED");
            entity.Property(e => e.LocationTransfer)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TRANSFER");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.ReceivedTime).HasColumnName("RECEIVED_TIME");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TotalMoney).HasColumnName("TOTAL_MONEY");
            entity.Property(e => e.UnitMaintenance)
                .HasMaxLength(255)
                .HasColumnName("UNIT_MAINTENANCE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserTransfer)
                .HasMaxLength(255)
                .HasColumnName("USER_TRANSFER");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetInventoryDetail>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET_IN__B7ED7EEF5FD0E030");

            entity.ToTable("ASSET_INVENTORY_DETAIL");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.AssetName)
                .HasMaxLength(255)
                .HasColumnName("ASSET_NAME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.StatusAsset)
                .HasMaxLength(255)
                .HasColumnName("STATUS_ASSET");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetInventoryFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_CA__3214EC277FFD6D0F");

            entity.ToTable("ASSET_INVENTORY_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(100)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetInventoryHeader>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET_IN__B7ED7EEF8D97837E");

            entity.ToTable("ASSET_INVENTORY_HEADER");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.Adress)
                .HasMaxLength(255)
                .HasColumnName("ADRESS");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.InventoryTime).HasColumnName("INVENTORY_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.Person)
                .HasMaxLength(100)
                .HasColumnName("PERSON");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetLiquidationDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_LI__3214EC273012D870");

            entity.ToTable("ASSET_LIQUIDATION_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CurrencyAsset)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CURRENCY_ASSET");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TotalMoney)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TOTAL_MONEY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetLiquidationFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_LI__3214EC2728635F40");

            entity.ToTable("ASSET_LIQUIDATION_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(100)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetLiquidationHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_LI__3214EC27A7C84CD2");

            entity.ToTable("ASSET_LIQUIDATION_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BranchLiquidation)
                .HasMaxLength(255)
                .HasColumnName("BRANCH_LIQUIDATION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LiquidationTime).HasColumnName("LIQUIDATION_TIME");
            entity.Property(e => e.LocationLiquidation)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_LIQUIDATION");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserBuy)
                .HasMaxLength(50)
                .HasColumnName("USER_BUY");
            entity.Property(e => e.UserLiquidation)
                .HasMaxLength(50)
                .HasColumnName("USER_LIQUIDATION");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetMain>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET__B7ED7EEF14B10FFA");

            entity.ToTable("ASSET_MAIN");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.ActInstCode)
                .HasMaxLength(255)
                .HasColumnName("ACT_INST_CODE");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AssetGroup)
                .HasMaxLength(255)
                .HasColumnName("ASSET_GROUP");
            entity.Property(e => e.AssetName)
                .HasMaxLength(255)
                .HasColumnName("ASSET_NAME");
            entity.Property(e => e.AssetType)
                .HasMaxLength(255)
                .HasColumnName("ASSET_TYPE");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BRANCH");
            entity.Property(e => e.BuyedTime).HasColumnName("BUYED_TIME");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Department)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.ExpiredDate).HasColumnName("EXPIRED_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationSet)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_SET");
            entity.Property(e => e.LocationText)
                .HasMaxLength(500)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.OrderNo)
                .HasMaxLength(255)
                .HasColumnName("ORDER_NO");
            entity.Property(e => e.PathImg)
                .HasMaxLength(255)
                .HasColumnName("PATH_IMG");
            entity.Property(e => e.QuantityTotal).HasColumnName("QUANTITY_TOTAL");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .HasColumnName("STATUS");
            entity.Property(e => e.SupplierCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SUPPLIER_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserResponsible)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_RESPONSIBLE");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(255)
                .HasColumnName("WF_INST_CODE");
        });

        modelBuilder.Entity<AssetMaintenanceCategory>(entity =>
        {
            entity.HasKey(e => e.CategoryId).HasName("PK__ASSET_MA__E7DA297C953600EF");

            entity.ToTable("ASSET_MAINTENANCE_CATEGORY");

            entity.Property(e => e.CategoryId).HasColumnName("CATEGORY_ID");
            entity.Property(e => e.AssetCodeCategory)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE_CATEGORY");
            entity.Property(e => e.CategoryCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CATEGORY_CODE");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(255)
                .HasColumnName("CATEGORY_NAME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.NoteCategory)
                .HasMaxLength(500)
                .HasColumnName("NOTE_CATEGORY");
            entity.Property(e => e.Price).HasColumnName("PRICE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.StatusCategory)
                .HasMaxLength(255)
                .HasColumnName("STATUS_CATEGORY");
            entity.Property(e => e.TicketCodeCategory)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE_CATEGORY");
            entity.Property(e => e.TotalMoneyCategory).HasColumnName("TOTAL_MONEY_CATEGORY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserCategory)
                .HasMaxLength(255)
                .HasColumnName("USER_CATEGORY");
        });

        modelBuilder.Entity<AssetMaintenanceDetail>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET_MA__B7ED7EEF7547E186");

            entity.ToTable("ASSET_MAINTENANCE_DETAILS");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AssetQuantity).HasColumnName("ASSET_QUANTITY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListImage)
                .HasMaxLength(255)
                .HasColumnName("LIST_IMAGE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.StatusAsset)
                .HasMaxLength(255)
                .HasColumnName("STATUS_ASSET");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TotalMoney).HasColumnName("TOTAL_MONEY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserAsset)
                .HasMaxLength(100)
                .HasColumnName("USER_ASSET");
        });

        modelBuilder.Entity<AssetMaintenanceFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_MA__3214EC2709F04B06");

            entity.ToTable("ASSET_MAINTENANCE_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetMaintenanceHeader>(entity =>
        {
            entity.HasKey(e => e.TicketId).HasName("PK__ASSET_MA__7F5E71D6D35AA7DE");

            entity.ToTable("ASSET_MAINTENANCE_HEADER");

            entity.Property(e => e.TicketId).HasColumnName("TICKET_ID");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartTransfer)
                .HasMaxLength(255)
                .HasColumnName("DEPART_TRANSFER");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.LocationReceived)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_RECEIVED");
            entity.Property(e => e.LocationTransfer)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TRANSFER");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.Qrcode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("QRCODE");
            entity.Property(e => e.ReceivedTime).HasColumnName("RECEIVED_TIME");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TotalMoney).HasColumnName("TOTAL_MONEY");
            entity.Property(e => e.UnitMaintenance)
                .HasMaxLength(255)
                .HasColumnName("UNIT_MAINTENANCE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserTransfer)
                .HasMaxLength(255)
                .HasColumnName("USER_TRANSFER");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetRecalledDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RE__3214EC27B9EFD372");

            entity.ToTable("ASSET_RECALLED_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CostValue)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TotalMoney)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TOTAL_MONEY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetRecalledFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RE__3214EC2707610152");

            entity.ToTable("ASSET_RECALLED_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetRecalledHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RE__3214EC27C5A1A5A8");

            entity.ToTable("ASSET_RECALLED_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BranchRecalled)
                .HasMaxLength(255)
                .HasColumnName("BRANCH_RECALLED");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationRecalled)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_RECALLED");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.RecalledTime).HasColumnName("RECALLED_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserConfirm)
                .HasMaxLength(100)
                .HasColumnName("USER_CONFIRM");
            entity.Property(e => e.UserRecalled)
                .HasMaxLength(100)
                .HasColumnName("USER_RECALLED");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetRecordDeliveryDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORD_D__3214EC272F80CFC8");

            entity.ToTable("ASSET_RECORD_DELIVERY_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DeliveryCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_CODE");
            entity.Property(e => e.RecordCode)
                .HasMaxLength(255)
                .HasColumnName("RECORD_CODE");
        });

        modelBuilder.Entity<AssetRecordDeliveryHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORD_D__3214EC273FF6A24F");

            entity.ToTable("ASSET_RECORD_DELIVERY_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliverCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVER_CODE");
            entity.Property(e => e.DeliveryCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_CODE");
            entity.Property(e => e.DeliveryType)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_TYPE");
            entity.Property(e => e.ExpertedReturnDate).HasColumnName("EXPERTED_RETURN_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.RealReturnDate).HasColumnName("REAL_RETURN_DATE");
            entity.Property(e => e.ReceiverName)
                .HasMaxLength(255)
                .HasColumnName("RECEIVER_NAME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetRecordsPack>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORDS___3214EC270E91C146");

            entity.ToTable("ASSET_RECORDS_PACK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.PackGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_GROUP");
            entity.Property(e => e.PackHierarchyPath)
                .HasMaxLength(255)
                .HasColumnName("PACK_HIERARCHY_PATH");
            entity.Property(e => e.PackLabel)
                .HasMaxLength(255)
                .HasColumnName("PACK_LABEL");
            entity.Property(e => e.PackLevel)
                .HasMaxLength(255)
                .HasColumnName("PACK_LEVEL");
            entity.Property(e => e.PackName)
                .HasMaxLength(255)
                .HasColumnName("PACK_NAME");
            entity.Property(e => e.PackParent)
                .HasMaxLength(255)
                .HasColumnName("PACK_PARENT");
            entity.Property(e => e.PackQuantity).HasColumnName("PACK_QUANTITY");
            entity.Property(e => e.PackStatus)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_STATUS");
            entity.Property(e => e.PackType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_TYPE");
            entity.Property(e => e.PackZoneLocation)
                .HasMaxLength(255)
                .HasColumnName("PACK_ZONE_LOCATION");
            entity.Property(e => e.QrCode)
                .HasMaxLength(1000)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetRecordsPackAttr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORDS___3214EC27873A396F");

            entity.ToTable("ASSET_RECORDS_PACK_ATTR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackAttrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_CODE");
            entity.Property(e => e.PackAttrDataType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_DATA_TYPE");
            entity.Property(e => e.PackAttrGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_GROUP");
            entity.Property(e => e.PackAttrName)
                .HasMaxLength(255)
                .HasColumnName("PACK_ATTR_NAME");
            entity.Property(e => e.PackAttrSize)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_SIZE");
            entity.Property(e => e.PackAttrType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_TYPE");
            entity.Property(e => e.PackAttrUnit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_UNIT");
            entity.Property(e => e.PackAttrValue)
                .HasMaxLength(255)
                .HasColumnName("PACK_ATTR_VALUE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Zone)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZONE");
        });

        modelBuilder.Entity<AssetRecordsPackFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORDS___3214EC27A6503168");

            entity.ToTable("ASSET_RECORDS_PACK_FILES");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetReqMaintainceReparrDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RE__3214EC271C82EBAA");

            entity.ToTable("ASSET_REQ_MAINTAINCE_REPARR_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(255)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AssetName)
                .HasMaxLength(255)
                .HasColumnName("ASSET_NAME");
            entity.Property(e => e.AssetType)
                .HasMaxLength(255)
                .HasColumnName("ASSET_TYPE");
            entity.Property(e => e.CostValue).HasColumnName("COST_VALUE");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateTime).HasColumnName("CREATE_TIME");
            entity.Property(e => e.DeleteBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETE_BY");
            entity.Property(e => e.DeleteTime).HasColumnName("DELETE_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOTE");
            entity.Property(e => e.Property)
                .HasMaxLength(255)
                .HasColumnName("PROPERTY");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.StatusAsset)
                .HasMaxLength(255)
                .HasColumnName("STATUS_ASSET");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TicketType)
                .HasMaxLength(255)
                .HasColumnName("TICKET_TYPE");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<AssetReqMaintainceReparrFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RE__3214EC270F56E18B");

            entity.ToTable("ASSET_REQ_MAINTAINCE_REPARR_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(100)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetReqMaintainceReparrHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RE__3214EC27006DCA3E");

            entity.ToTable("ASSET_REQ_MAINTAINCE_REPARR_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(255)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateDepart)
                .HasMaxLength(255)
                .HasColumnName("CREATE_DEPART");
            entity.Property(e => e.CreateTime).HasColumnName("CREATE_TIME");
            entity.Property(e => e.DeleteBy)
                .HasMaxLength(255)
                .HasColumnName("DELETE_BY");
            entity.Property(e => e.DeleteTime).HasColumnName("DELETE_TIME");
            entity.Property(e => e.Discription)
                .HasMaxLength(1000)
                .HasColumnName("DISCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationRepair)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_REPAIR");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.Reason)
                .HasMaxLength(255)
                .HasColumnName("REASON");
            entity.Property(e => e.ReqTime).HasColumnName("REQ_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TicketType)
                .HasMaxLength(255)
                .HasColumnName("TICKET_TYPE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
            entity.Property(e => e.UserReq)
                .HasMaxLength(255)
                .HasColumnName("USER_REQ");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetRptBrokenDetail>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET_RP__B7ED7EEFB7E33E4B");

            entity.ToTable("ASSET_RPT_BROKEN_DETAILS");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AssetName)
                .HasMaxLength(255)
                .HasColumnName("ASSET_NAME");
            entity.Property(e => e.AssetStatus)
                .HasMaxLength(255)
                .HasColumnName("ASSET_STATUS");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetRptBrokenFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RP__3214EC27488B194E");

            entity.ToTable("ASSET_RPT_BROKEN_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<AssetRptBrokenHeader>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__RPT_BROK__F6FF16281EA6DDD8");

            entity.ToTable("ASSET_RPT_BROKEN_HEADER");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.AssetStatus).HasColumnName("ASSET_STATUS");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LogStatus)
                .HasMaxLength(1000)
                .HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.Person)
                .HasMaxLength(255)
                .HasColumnName("PERSON");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Ticket)
                .HasMaxLength(255)
                .HasColumnName("TICKET");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetTransferDetail>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET_TR__B7ED7EEF7B4438B8");

            entity.ToTable("ASSET_TRANSFER_DETAILS");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.AssetName)
                .HasMaxLength(255)
                .HasColumnName("ASSET_NAME");
            entity.Property(e => e.CostValue)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("COST_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListImage)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LIST_IMAGE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.StatusAsset)
                .HasMaxLength(255)
                .HasColumnName("STATUS_ASSET");
            entity.Property(e => e.Ticketcode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKETCODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetTransferFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RP__3214EC27C1FD7BDB");

            entity.ToTable("ASSET_TRANSFER_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.Ticketcode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKETCODE");
        });

        modelBuilder.Entity<AssetTransferHeader>(entity =>
        {
            entity.HasKey(e => e.AssetId).HasName("PK__ASSET_TR__B7ED7EEF28935D2F");

            entity.ToTable("ASSET_TRANSFER_HEADER");

            entity.Property(e => e.AssetId).HasColumnName("ASSET_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartReceived)
                .HasMaxLength(255)
                .HasColumnName("DEPART_RECEIVED");
            entity.Property(e => e.DepartTransf)
                .HasMaxLength(255)
                .HasColumnName("DEPART_TRANSF");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationTransf)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TRANSF");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ACT_CODE");
            entity.Property(e => e.Qrcode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("QRCODE");
            entity.Property(e => e.ReceivedLocation)
                .HasMaxLength(255)
                .HasColumnName("RECEIVED_LOCATION");
            entity.Property(e => e.ReceivedTime).HasColumnName("RECEIVED_TIME");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Ticket)
                .HasMaxLength(255)
                .HasColumnName("TICKET");
            entity.Property(e => e.Ticketcode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TICKETCODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserReceived)
                .HasMaxLength(255)
                .HasColumnName("USER_RECEIVED");
            entity.Property(e => e.UserTransf)
                .HasMaxLength(255)
                .HasColumnName("USER_TRANSF");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<AssetType>(entity =>
        {
            entity.HasKey(e => e.CatCode).HasName("PK__URENCO_A__F82BD2369DC7DDCF");

            entity.ToTable("ASSET_TYPE");

            entity.Property(e => e.CatCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CatName)
                .HasMaxLength(255)
                .HasColumnName("CAT_NAME");
            entity.Property(e => e.CatParent).HasColumnName("CAT_PARENT");
            entity.Property(e => e.CatType)
                .HasMaxLength(100)
                .HasColumnName("CAT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AssetZoneAttr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WHS_ZONE__3214EC2779D44BE5");

            entity.ToTable("ASSET_ZONE_ATTR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.SvgIcon)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneAttrCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZONE_ATTR_CODE");
            entity.Property(e => e.ZoneAttrName)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_NAME");
            entity.Property(e => e.ZoneAttrSize)
                .HasMaxLength(50)
                .HasColumnName("ZONE_ATTR_SIZE");
            entity.Property(e => e.ZoneAttrType)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_TYPE");
            entity.Property(e => e.ZoneAttrUnit)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_UNIT");
            entity.Property(e => e.ZoneAttrValue)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_VALUE");
            entity.Property(e => e.ZoneGroup)
                .HasMaxLength(255)
                .HasColumnName("ZONE_GROUP");
            entity.Property(e => e.ZoneType)
                .HasMaxLength(255)
                .HasColumnName("ZONE_TYPE");
        });

        modelBuilder.Entity<AssetZoneMapping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_ZO__3214EC271A7BF699");

            entity.ToTable("ASSET_ZONE_MAPPING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZONE_CODE");
        });

        modelBuilder.Entity<AssetZoneStruct>(entity =>
        {
            entity.HasKey(e => e.ZoneCode).HasName("PK__WHS_ZONE__DA72D960C0B4B3B5");

            entity.ToTable("ASSET_ZONE_STRUCT");

            entity.Property(e => e.ZoneCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZONE_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.SvgIconData)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneGroup)
                .HasMaxLength(255)
                .HasColumnName("ZONE_GROUP");
            entity.Property(e => e.ZoneHierachy)
                .HasMaxLength(255)
                .HasColumnName("ZONE_HIERACHY");
            entity.Property(e => e.ZoneLabel)
                .HasMaxLength(255)
                .HasColumnName("ZONE_LABEL");
            entity.Property(e => e.ZoneLevel).HasColumnName("ZONE_LEVEL");
            entity.Property(e => e.ZoneName)
                .HasMaxLength(255)
                .HasColumnName("ZONE_NAME");
            entity.Property(e => e.ZoneParent)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZONE_PARENT");
            entity.Property(e => e.ZoneType)
                .HasMaxLength(255)
                .HasColumnName("ZONE_TYPE");
        });

        modelBuilder.Entity<AssignMemberToObject>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSIGN_M__3214EC27F2330D5E");

            entity.ToTable("ASSIGN_MEMBER_TO_OBJECT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjId)
                .HasMaxLength(255)
                .HasColumnName("OBJ_ID");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<AttrGalaxy>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ATTR_GAL__3214EC272BC6A815");

            entity.ToTable("ATTR_GALAXY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataType)
                .HasMaxLength(255)
                .HasColumnName("DATA_TYPE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Parent)
                .HasMaxLength(255)
                .HasColumnName("PARENT");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AttrGalaxyAet>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ATTR_GAL__3214EC277E4D5E83");

            entity.ToTable("ATTR_GALAXY_AET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataType)
                .HasMaxLength(255)
                .HasColumnName("DATA_TYPE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Parent)
                .HasMaxLength(255)
                .HasColumnName("PARENT");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AttrManager>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ATTR_MAN__3214EC27BEF37404");

            entity.ToTable("ATTR_MANAGER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataType)
                .HasMaxLength(255)
                .HasColumnName("DATA_TYPE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Parent)
                .HasMaxLength(255)
                .HasColumnName("PARENT");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AttrManagerGalaxy>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ATTR_MAN__3214EC27040782B6");

            entity.ToTable("ATTR_MANAGER_GALAXY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .HasColumnName("ATTR_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<AttrSetup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC273C903420");

            entity.ToTable("ATTR_SETUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrDataType)
                .HasMaxLength(100)
                .HasColumnName("ATTR_DATA_TYPE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(255)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.AttrName)
                .HasMaxLength(255)
                .HasColumnName("ATTR_NAME");
            entity.Property(e => e.AttrUnit)
                .HasMaxLength(100)
                .HasColumnName("ATTR_UNIT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(1000)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<Award>(entity =>
        {
            entity.ToTable("AWARD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.GrantOfDecision)
                .HasMaxLength(50)
                .HasComment("Cấp quyết định")
                .HasColumnName("GRANT_OF_DECISION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MonthYear)
                .HasMaxLength(50)
                .HasColumnName("MONTH_YEAR");
            entity.Property(e => e.ProfileCode)
                .HasMaxLength(50)
                .HasColumnName("PROFILE_CODE");
            entity.Property(e => e.Reason)
                .HasMaxLength(250)
                .HasColumnName("REASON");
        });

        modelBuilder.Entity<AwsDomain>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("AWS_DOMAIN");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Domain)
                .HasMaxLength(255)
                .HasColumnName("DOMAIN");
            entity.Property(e => e.Enabled).HasColumnName("ENABLED");
            entity.Property(e => e.HostedZoneId)
                .HasMaxLength(255)
                .HasColumnName("HOSTED_ZONE_ID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.SystemName)
                .HasMaxLength(255)
                .HasColumnName("SYSTEM_NAME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BackendInstance>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BACKEND_INSTANCE");

            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DatabaseInstance)
                .HasMaxLength(255)
                .HasColumnName("DATABASE_INSTANCE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeployDirectory)
                .HasMaxLength(255)
                .HasColumnName("DEPLOY_DIRECTORY");
            entity.Property(e => e.Domain)
                .HasMaxLength(255)
                .HasColumnName("DOMAIN");
            entity.Property(e => e.FtpInfo).HasColumnName("FTP_INFO");
            entity.Property(e => e.HostingServer)
                .HasMaxLength(255)
                .HasColumnName("HOSTING_SERVER");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonPath)
                .HasMaxLength(255)
                .HasColumnName("JSON_PATH");
            entity.Property(e => e.Port)
                .HasMaxLength(255)
                .HasColumnName("PORT");
            entity.Property(e => e.Request)
                .HasMaxLength(255)
                .HasColumnName("REQUEST");
            entity.Property(e => e.SiteName)
                .HasMaxLength(255)
                .HasColumnName("SITE_NAME");
            entity.Property(e => e.SourceCode)
                .HasMaxLength(255)
                .HasColumnName("SOURCE_CODE");
            entity.Property(e => e.SourceInfo).HasColumnName("SOURCE_INFO");
            entity.Property(e => e.SourceVersion)
                .HasMaxLength(255)
                .HasColumnName("SOURCE_VERSION");
            entity.Property(e => e.SubDomain)
                .HasMaxLength(255)
                .HasColumnName("SUB_DOMAIN");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BlogArticle>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BLOG_ARTICLE");

            entity.Property(e => e.Access).HasColumnName("access");
            entity.Property(e => e.Alias)
                .HasMaxLength(1000)
                .HasColumnName("alias");
            entity.Property(e => e.AudioUrl)
                .HasMaxLength(1000)
                .HasColumnName("AUDIO_URL");
            entity.Property(e => e.BlogSubject)
                .HasMaxLength(255)
                .HasColumnName("blog_subject");
            entity.Property(e => e.CatId).HasColumnName("cat_id");
            entity.Property(e => e.CheckedOut).HasColumnName("checked_out");
            entity.Property(e => e.CheckedOutTime)
                .HasColumnType("datetime")
                .HasColumnName("checked_out_time");
            entity.Property(e => e.Created)
                .HasColumnType("datetime")
                .HasColumnName("created");
            entity.Property(e => e.CreatedBy).HasColumnName("created_by");
            entity.Property(e => e.CreatedByAlias)
                .HasMaxLength(255)
                .HasColumnName("created_by_alias");
            entity.Property(e => e.DatePost)
                .HasColumnType("datetime")
                .HasColumnName("date_post");
            entity.Property(e => e.ExtraFields).HasColumnName("extra_fields");
            entity.Property(e => e.ExtraFieldsSearch)
                .HasMaxLength(255)
                .HasColumnName("extra_fields_search");
            entity.Property(e => e.Featured).HasColumnName("featured");
            entity.Property(e => e.FeaturedOrdering).HasColumnName("featured_ordering");
            entity.Property(e => e.FullText).HasColumnName("full_text");
            entity.Property(e => e.Gallery)
                .HasMaxLength(255)
                .HasColumnName("gallery");
            entity.Property(e => e.HashTag).HasColumnName("hash_tag");
            entity.Property(e => e.Hits).HasColumnName("hits");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.ImageCaption)
                .HasMaxLength(500)
                .HasColumnName("image_caption");
            entity.Property(e => e.ImageCredits)
                .HasMaxLength(255)
                .HasColumnName("image_credits");
            entity.Property(e => e.IntroText).HasColumnName("intro_text");
            entity.Property(e => e.JsonAudio).HasColumnName("JSON_AUDIO");
            entity.Property(e => e.Language)
                .HasMaxLength(255)
                .HasColumnName("language");
            entity.Property(e => e.ListUserView)
                .IsUnicode(false)
                .HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.MetaData)
                .HasMaxLength(1000)
                .HasColumnName("meta_data");
            entity.Property(e => e.MetaDesc)
                .HasMaxLength(1000)
                .HasColumnName("meta_desc");
            entity.Property(e => e.MetaKey)
                .HasMaxLength(1000)
                .HasColumnName("meta_key");
            entity.Property(e => e.Modified)
                .HasColumnType("datetime")
                .HasColumnName("modified");
            entity.Property(e => e.ModifiedBy).HasColumnName("modified_by");
            entity.Property(e => e.MultipleLanguage).HasColumnName("multiple_language");
            entity.Property(e => e.Ordering).HasColumnName("ordering");
            entity.Property(e => e.Params).HasColumnName("params");
            entity.Property(e => e.Plugins).HasColumnName("plugins");
            entity.Property(e => e.PublishDown)
                .HasColumnType("datetime")
                .HasColumnName("publish_down");
            entity.Property(e => e.PublishUp)
                .HasColumnType("datetime")
                .HasColumnName("publish_up");
            entity.Property(e => e.Published).HasColumnName("published");
            entity.Property(e => e.Rate).HasColumnName("rate");
            entity.Property(e => e.Share).HasColumnName("share");
            entity.Property(e => e.Template)
                .HasMaxLength(255)
                .HasColumnName("template");
            entity.Property(e => e.Title)
                .HasMaxLength(1000)
                .HasColumnName("title");
            entity.Property(e => e.Trash).HasColumnName("trash");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("type");
            entity.Property(e => e.Video)
                .HasMaxLength(500)
                .HasColumnName("video");
            entity.Property(e => e.VideoCaption)
                .HasMaxLength(500)
                .HasColumnName("video_caption");
            entity.Property(e => e.VideoCredits)
                .HasMaxLength(255)
                .HasColumnName("video_credits");
        });

        modelBuilder.Entity<BlogCategory>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BLOG_CATEGORY");

            entity.Property(e => e.Access).HasColumnName("access");
            entity.Property(e => e.Alias)
                .HasMaxLength(255)
                .HasColumnName("alias");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.Description)
                .HasMaxLength(4000)
                .HasColumnName("description");
            entity.Property(e => e.ExtraFieldsGroup).HasColumnName("extra_fields_group");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("image");
            entity.Property(e => e.Language)
                .HasMaxLength(255)
                .HasColumnName("language");
            entity.Property(e => e.MultipleLanguage).HasColumnName("multiple_language");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("name");
            entity.Property(e => e.Ordering).HasColumnName("ordering");
            entity.Property(e => e.Params).HasColumnName("params");
            entity.Property(e => e.Parent).HasColumnName("parent");
            entity.Property(e => e.Plugins).HasColumnName("plugins");
            entity.Property(e => e.Published).HasColumnName("published");
            entity.Property(e => e.Template)
                .HasMaxLength(255)
                .HasColumnName("template");
            entity.Property(e => e.Trash).HasColumnName("trash");
        });

        modelBuilder.Entity<BomActivityAttr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOM_ACTIVITY_ATTR");

            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataType)
                .HasMaxLength(100)
                .HasColumnName("DATA_TYPE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Io)
                .HasMaxLength(255)
                .HasColumnName("IO");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemName)
                .HasMaxLength(255)
                .HasColumnName("ITEM_NAME");
            entity.Property(e => e.ItemUnit)
                .HasMaxLength(100)
                .HasColumnName("ITEM_UNIT");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Postfix)
                .HasMaxLength(100)
                .HasColumnName("POSTFIX");
            entity.Property(e => e.Specification)
                .HasMaxLength(1000)
                .HasColumnName("SPECIFICATION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WF_INST_CODE");
        });

        modelBuilder.Entity<BomAttrGroup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOM_ATTR_GROUP");

            entity.Property(e => e.ActivityCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(255)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.GroupName)
                .HasMaxLength(1000)
                .HasColumnName("GROUP_NAME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Io)
                .HasMaxLength(255)
                .HasColumnName("IO");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomDelivertHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOM_DELIVERT_HEADER");

            entity.Property(e => e.CustomerCode)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER_CODE");
            entity.Property(e => e.CustomerTitle)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER_TITLE");
            entity.Property(e => e.DelivertyTitle)
                .HasMaxLength(255)
                .HasColumnName("DELIVERTY_TITLE");
            entity.Property(e => e.DeliveryCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_CODE");
            entity.Property(e => e.DeliveryTime).HasColumnName("DELIVERY_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.ExportTicketCode)
                .HasMaxLength(255)
                .HasColumnName("EXPORT_TICKET_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationTxt)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_TXT");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<BomDelivertOrderDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOM_DELIVERT_ORDER_DETAILS");

            entity.Property(e => e.DeliveryCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemStatus)
                .HasMaxLength(255)
                .HasColumnName("ITEM_STATUS");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Speaciticate)
                .HasMaxLength(255)
                .HasColumnName("SPEACITICATE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
        });

        modelBuilder.Entity<BomDeliveryHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOM_DELIVERY_HEADER");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CustomerCode)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER_CODE");
            entity.Property(e => e.CustomerTitle)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER_TITLE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliveryCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_CODE");
            entity.Property(e => e.DeliveryTime).HasColumnName("DELIVERY_TIME");
            entity.Property(e => e.DeliveryTitle)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_TITLE");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.ExportTicketCode)
                .HasMaxLength(255)
                .HasColumnName("EXPORT_TICKET_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationTxt)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TXT");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomDeliveryOrderDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOM_DELIVERY_ORDER_DETAIL");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliveryCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_CODE");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemStatus)
                .HasMaxLength(255)
                .HasColumnName("ITEM_STATUS");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Specification)
                .HasMaxLength(255)
                .HasColumnName("SPECIFICATION");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomGattrExt>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOM_GATTR_EXT");

            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.GattrJson).HasColumnName("GATTR_JSON");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemId).HasColumnName("ITEM_ID");
            entity.Property(e => e.LotNumber).HasColumnName("LOT_NUMBER");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomH>(entity =>
        {
            entity.ToTable("BOM_HS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Io)
                .HasMaxLength(255)
                .HasColumnName("IO");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemName)
                .HasMaxLength(255)
                .HasColumnName("ITEM_NAME");
            entity.Property(e => e.LotNumber).HasColumnName("LOT_NUMBER");
            entity.Property(e => e.Ng)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("NG");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.ParentId)
                .HasMaxLength(255)
                .HasColumnName("PARENT_ID");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Range)
                .HasMaxLength(1000)
                .HasColumnName("RANGE");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.Specification)
                .HasMaxLength(255)
                .HasColumnName("SPECIFICATION");
            entity.Property(e => e.TypeImpExp)
                .HasMaxLength(100)
                .HasColumnName("TYPE_IMP_EXP");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WordOrderCode)
                .HasMaxLength(255)
                .HasColumnName("WORD_ORDER_CODE");
        });

        modelBuilder.Entity<BomItemConsumption>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOM_ITEM_CONSUMPTION");

            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.BomRtId)
                .HasMaxLength(50)
                .HasColumnName("BOM_RT_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.Qty)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QTY");
            entity.Property(e => e.SessionNum)
                .HasMaxLength(255)
                .HasColumnName("SESSION_NUM");
            entity.Property(e => e.Specification)
                .HasMaxLength(255)
                .HasColumnName("SPECIFICATION");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomItemOnChanel>(entity =>
        {
            entity.ToTable("BOM_ITEM_ON_CHANEL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.BomRtId)
                .HasMaxLength(50)
                .HasColumnName("BOM_RT_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime)
                .HasColumnType("datetime")
                .HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Io)
                .HasMaxLength(255)
                .HasColumnName("IO");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.Ng)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("NG");
            entity.Property(e => e.Postfix)
                .HasMaxLength(100)
                .HasColumnName("POSTFIX");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Range)
                .HasMaxLength(1000)
                .HasColumnName("RANGE");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.Specification)
                .HasMaxLength(255)
                .HasColumnName("SPECIFICATION");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomItemStructure>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOM_ITEM_STRUCTURE");

            entity.Property(e => e.ChildCode)
                .HasMaxLength(100)
                .HasColumnName("CHILD_CODE");
            entity.Property(e => e.ChildId).HasColumnName("CHILD_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(100)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemId).HasColumnName("ITEM_ID");
            entity.Property(e => e.Range)
                .HasMaxLength(1000)
                .HasColumnName("RANGE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomMarkLotUsed>(entity =>
        {
            entity.ToTable("BOM_MARK_LOT_USED");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.ActivityDestination)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_DESTINATION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Io)
                .HasMaxLength(255)
                .HasColumnName("IO");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LotNumber).HasColumnName("LOT_NUMBER");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomProductionWarehouseDt>(entity =>
        {
            entity.ToTable("BOM_PRODUCTION_WAREHOUSE_DT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Io)
                .HasMaxLength(100)
                .HasColumnName("IO");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(100)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Specification)
                .HasMaxLength(100)
                .HasColumnName("SPECIFICATION");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(100)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomProductionWarehouseHd>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_BOM_PRODERON_WAREHOUSW_HD");

            entity.ToTable("BOM_PRODUCTION_WAREHOUSE_HD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(100)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.DeliverId)
                .HasMaxLength(100)
                .HasColumnName("DELIVER_ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ReceiverId)
                .HasMaxLength(100)
                .HasColumnName("RECEIVER_ID");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TypeImpExp)
                .HasMaxLength(100)
                .HasColumnName("TYPE_IMP_EXP");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BomRt>(entity =>
        {
            entity.ToTable("BOM_RT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.Io)
                .HasMaxLength(255)
                .HasColumnName("IO");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemName)
                .HasMaxLength(255)
                .HasColumnName("ITEM_NAME");
            entity.Property(e => e.LotCode)
                .HasMaxLength(255)
                .HasColumnName("LOT_CODE");
            entity.Property(e => e.LotNumber).HasColumnName("LOT_NUMBER");
            entity.Property(e => e.Machine)
                .HasMaxLength(1000)
                .HasColumnName("MACHINE");
            entity.Property(e => e.Ng)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("NG");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.ParentId)
                .HasMaxLength(255)
                .HasColumnName("PARENT_ID");
            entity.Property(e => e.Postfix)
                .HasMaxLength(100)
                .HasColumnName("POSTFIX");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Range)
                .HasMaxLength(1000)
                .HasColumnName("RANGE");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.Specification)
                .HasMaxLength(255)
                .HasColumnName("SPECIFICATION");
            entity.Property(e => e.TypeImpExp)
                .HasMaxLength(100)
                .HasColumnName("TYPE_IMP_EXP");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkOrderCode)
                .HasMaxLength(255)
                .HasColumnName("WORK_ORDER_CODE");
            entity.Property(e => e.WorkedBy)
                .HasMaxLength(1000)
                .HasColumnName("WORKED_BY");
        });

        modelBuilder.Entity<BomWorkorder>(entity =>
        {
            entity.ToTable("BOM_WORKORDER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Creator)
                .HasMaxLength(50)
                .HasColumnName("CREATOR");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LotCode)
                .HasMaxLength(255)
                .HasColumnName("LOT_CODE");
            entity.Property(e => e.Node)
                .HasMaxLength(50)
                .HasColumnName("NODE");
            entity.Property(e => e.OperatingCode)
                .HasMaxLength(50)
                .HasColumnName("OPERATING_CODE");
            entity.Property(e => e.Progress)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PROGRESS");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(100)
                .HasColumnName("WF_INST_CODE");
            entity.Property(e => e.WorkorderCode)
                .HasMaxLength(50)
                .HasColumnName("WORKORDER_CODE");
            entity.Property(e => e.WorkorderTitle)
                .HasMaxLength(100)
                .HasColumnName("WORKORDER_TITLE");
        });

        modelBuilder.Entity<BomWorkorderDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_Table_1");

            entity.ToTable("BOM_WORKORDER_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.InvoiceCode)
                .HasMaxLength(100)
                .HasColumnName("INVOICE_CODE");
            entity.Property(e => e.Io)
                .HasMaxLength(255)
                .HasColumnName("IO");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(50)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemName)
                .HasMaxLength(100)
                .HasColumnName("ITEM_NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.OperatingCode)
                .HasMaxLength(50)
                .HasColumnName("OPERATING_CODE");
            entity.Property(e => e.Postfix)
                .HasMaxLength(100)
                .HasColumnName("POSTFIX");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Specification)
                .HasMaxLength(1000)
                .HasColumnName("SPECIFICATION");
            entity.Property(e => e.Unit)
                .HasMaxLength(100)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WF_INST_CODE");
            entity.Property(e => e.WorkorderCode)
                .HasMaxLength(50)
                .HasColumnName("WORKORDER_CODE");
        });

        modelBuilder.Entity<BotSocialManagement>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOT_SOCIAL_MANAGEMENT");

            entity.Property(e => e.BotSocialCode)
                .HasMaxLength(50)
                .HasColumnName("BOT_SOCIAL_CODE");
            entity.Property(e => e.BotSocialName).HasColumnName("BOT_SOCIAL_NAME");
            entity.Property(e => e.BotSocialType)
                .HasMaxLength(50)
                .HasColumnName("BOT_SOCIAL_TYPE");
            entity.Property(e => e.ConditionStatement).HasColumnName("CONDITION_STATEMENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Credential)
                .HasMaxLength(255)
                .HasColumnName("CREDENTIAL");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PassWord).HasColumnName("PASS_WORD");
            entity.Property(e => e.Tocken).HasColumnName("TOCKEN");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<BotSocialSessionLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BOT_SOCIAL_SESSION_LOG");

            entity.Property(e => e.BotSession).HasColumnName("BOT_SESSION");
            entity.Property(e => e.BotSessionResult).HasColumnName("BOT_SESSION_RESULT");
            entity.Property(e => e.BotSocialCode)
                .HasMaxLength(50)
                .HasColumnName("BOT_SOCIAL_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.FileResults).HasColumnName("FILE_RESULTS");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.RuningType)
                .HasMaxLength(50)
                .HasColumnName("RUNING_TYPE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Statvs).HasColumnName("STATVS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BsCrawlerSocialNetworkParam>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BS_CRAWLER_SOCIAL_NETWORK_PARAM");

            entity.Property(e => e.AccSetting).HasColumnName("ACC_SETTING");
            entity.Property(e => e.ConfigSelectorJson).HasColumnName("CONFIG_SELECTOR_JSON");
            entity.Property(e => e.DataStoragePath).HasColumnName("DATA_STORAGE_PATH");
            entity.Property(e => e.DeepScan).HasColumnName("DEEP_SCAN");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ListKeyWord).HasColumnName("LIST_KEY_WORD");
            entity.Property(e => e.Password).HasColumnName("PASSWORD");
            entity.Property(e => e.Tocken).HasColumnName("TOCKEN");
            entity.Property(e => e.UserName).HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<BwBotInstantDatamining>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BW_BOT_INSTANT_DATAMINING");

            entity.Property(e => e.ChannelId)
                .HasMaxLength(255)
                .HasColumnName("CHANNEL_ID");
            entity.Property(e => e.ChannelTitle)
                .HasMaxLength(255)
                .HasColumnName("CHANNEL_TITLE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Ip)
                .HasMaxLength(255)
                .HasColumnName("IP");
            entity.Property(e => e.LastSeen).HasColumnName("LAST_SEEN");
            entity.Property(e => e.MachineId)
                .HasMaxLength(255)
                .HasColumnName("MACHINE_ID");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BwCrawlerDomainParam>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BW_CRAWLER_DOMAIN_PARAM");

            entity.Property(e => e.ConfigSelectorJson).HasColumnName("CONFIG_SELECTOR_JSON");
            entity.Property(e => e.DataStorageParam).HasColumnName("DATA_STORAGE_PARAM");
            entity.Property(e => e.DeepScan).HasColumnName("DEEP_SCAN");
            entity.Property(e => e.DomainIp).HasColumnName("DOMAIN_IP");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ListKeyword).HasColumnName("LIST_KEYWORD");
            entity.Property(e => e.Password).HasColumnName("PASSWORD");
            entity.Property(e => e.Tocken).HasColumnName("TOCKEN");
            entity.Property(e => e.UserName).HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<BwCrawlerJobSchedule>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BW_CRAWLER_JOB_SCHEDULE");

            entity.Property(e => e.BotCode)
                .HasMaxLength(50)
                .HasColumnName("BOT_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.JobScCode).HasColumnName("JOB_SC_CODE");
            entity.Property(e => e.JobScDesc).HasColumnName("JOB_SC_DESC");
            entity.Property(e => e.JobScRunTime).HasColumnName("JOB_SC_RUN_TIME");
            entity.Property(e => e.JobScTitle).HasColumnName("JOB_SC_TITLE");
            entity.Property(e => e.JobScType).HasColumnName("JOB_SC_TYPE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
        });

        modelBuilder.Entity<BwCrawlerRunningLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BW_CRAWLER_RUNNING_LOG");

            entity.Property(e => e.BotCode).HasColumnName("BOT_CODE");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.FileDownloadJson).HasColumnName("FILE_DOWNLOAD_JSON");
            entity.Property(e => e.FileResultData).HasColumnName("FILE_RESULT_DATA");
            entity.Property(e => e.FileSizeDownload).HasColumnName("FILE_SIZE_DOWNLOAD");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Ip).HasColumnName("IP");
            entity.Property(e => e.KeyWord).HasColumnName("KEY_WORD");
            entity.Property(e => e.NumOfFile).HasColumnName("NUM_OF_FILE");
            entity.Property(e => e.NumPasscap).HasColumnName("NUM_PASSCAP");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TimeScan).HasColumnName("TIME_SCAN");
            entity.Property(e => e.UrlScanJson).HasColumnName("URL_SCAN_JSON");
            entity.Property(e => e.UserIdRunning).HasColumnName("USER_ID_RUNNING");
        });

        modelBuilder.Entity<BwWebrtcChannelControl>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BW_WEBRTC_CHANNEL_CONTROL");

            entity.Property(e => e.ChannelId)
                .HasMaxLength(255)
                .HasColumnName("CHANNEL_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<BwWebsyncServerChannel>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("BW_WEBSYNC_SERVER_CHANNEL");

            entity.Property(e => e.ChannelId)
                .HasMaxLength(255)
                .HasColumnName("CHANNEL_ID");
            entity.Property(e => e.ChannelTitle)
                .HasMaxLength(255)
                .HasColumnName("CHANNEL_TITLE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ServerWebsync)
                .HasMaxLength(255)
                .HasColumnName("SERVER_WEBSYNC");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CameraRoom>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CAMERA_R__3214EC271D39061A");

            entity.ToTable("CAMERA_ROOM");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CameraAvailable).HasColumnName("CAMERA_AVAILABLE");
            entity.Property(e => e.CameraQuantity).HasColumnName("CAMERA_QUANTITY");
            entity.Property(e => e.Capacity)
                .HasMaxLength(50)
                .HasColumnName("CAPACITY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(150)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.DiskSaveable).HasColumnName("DISK_SAVEABLE");
            entity.Property(e => e.DiskStatus)
                .HasMaxLength(50)
                .HasColumnName("DISK_STATUS");
            entity.Property(e => e.ImageLink)
                .HasMaxLength(100)
                .HasColumnName("IMAGE_LINK");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LoginInformation)
                .HasMaxLength(100)
                .HasColumnName("LOGIN_INFORMATION");
            entity.Property(e => e.Note)
                .HasMaxLength(150)
                .HasColumnName("NOTE");
            entity.Property(e => e.RoomId)
                .HasMaxLength(150)
                .HasColumnName("ROOM_ID");
            entity.Property(e => e.RoomName)
                .HasMaxLength(150)
                .HasColumnName("ROOM_NAME");
            entity.Property(e => e.Series)
                .HasMaxLength(50)
                .HasColumnName("SERIES");
            entity.Property(e => e.SignalLossReason)
                .HasMaxLength(150)
                .HasColumnName("SIGNAL_LOSS_REASON");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CandidateBasic>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CANDIDAT__3214EC27058945A1");

            entity.ToTable("CANDIDATE_BASIC");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Ability)
                .HasMaxLength(255)
                .HasColumnName("ABILITY");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.AppointmentTime).HasColumnName("APPOINTMENT_TIME");
            entity.Property(e => e.Birthday).HasColumnName("BIRTHDAY");
            entity.Property(e => e.CanJoinDate).HasColumnName("CAN_JOIN_DATE");
            entity.Property(e => e.CandidateCode)
                .HasMaxLength(255)
                .HasColumnName("CANDIDATE_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DateQuit).HasColumnName("DATE_QUIT");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasColumnName("EMAIL");
            entity.Property(e => e.FileCv1)
                .HasMaxLength(255)
                .HasColumnName("FILE_CV_1");
            entity.Property(e => e.FileCv2)
                .HasMaxLength(255)
                .HasColumnName("FILE_CV_2");
            entity.Property(e => e.FileCv3)
                .HasMaxLength(255)
                .HasColumnName("FILE_CV_3");
            entity.Property(e => e.Fullname)
                .HasMaxLength(255)
                .HasColumnName("FULLNAME");
            entity.Property(e => e.LanguageUse)
                .HasMaxLength(255)
                .HasColumnName("LANGUAGE_USE");
            entity.Property(e => e.LaptopInfo)
                .HasMaxLength(255)
                .HasColumnName("LAPTOP_INFO");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.MainPracticeTime)
                .HasMaxLength(255)
                .HasColumnName("MAIN_PRACTICE_TIME");
            entity.Property(e => e.MainSkill)
                .HasMaxLength(255)
                .HasColumnName("MAIN_SKILL");
            entity.Property(e => e.Married).HasColumnName("MARRIED");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .HasColumnName("PHONE");
            entity.Property(e => e.SalaryHope)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("SALARY_HOPE");
            entity.Property(e => e.Sex).HasColumnName("SEX");
            entity.Property(e => e.Skype)
                .HasMaxLength(255)
                .HasColumnName("SKYPE");
            entity.Property(e => e.SmartphoneInfo)
                .HasMaxLength(255)
                .HasColumnName("SMARTPHONE_INFO");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SubPracticeTime)
                .HasMaxLength(255)
                .HasColumnName("SUB_PRACTICE_TIME");
            entity.Property(e => e.SubSkill)
                .HasMaxLength(255)
                .HasColumnName("SUB_SKILL");
            entity.Property(e => e.Targeting)
                .HasMaxLength(500)
                .HasColumnName("TARGETING");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkFrom).HasColumnName("WORK_FROM");
            entity.Property(e => e.WorkPlace)
                .HasMaxLength(255)
                .HasColumnName("WORK_PLACE");
            entity.Property(e => e.WorkTo).HasColumnName("WORK_TO");
            entity.Property(e => e.WorkType).HasColumnName("WORK_TYPE");
        });

        modelBuilder.Entity<CandidateCvStorage>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CANDIDATE_CV_STORAGE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData)
                .HasMaxLength(255)
                .HasColumnName("JSON_DATA");
            entity.Property(e => e.MailCode)
                .HasMaxLength(255)
                .HasColumnName("MAIL_CODE");
            entity.Property(e => e.MailContent).HasColumnName("MAIL_CONTENT");
            entity.Property(e => e.Password)
                .HasMaxLength(255)
                .HasColumnName("PASSWORD");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<CandidateInterview>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CANDIDAT__3214EC2750663A57");

            entity.ToTable("CANDIDATE_INTERVIEW");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CandidateCode)
                .HasMaxLength(255)
                .HasColumnName("CANDIDATE_CODE");
            entity.Property(e => e.InterviewDate)
                .HasComment("Ngày tới phỏng vấn")
                .HasColumnName("INTERVIEW_DATE");
            entity.Property(e => e.IsPresent)
                .HasComment("Có mặt")
                .HasColumnName("IS_PRESENT");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasComment("Trạng thái")
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<CandidateWorkEvent>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CANDIDAT__3214EC27A60A90DF");

            entity.ToTable("CANDIDATE_WORK_EVENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CandidateCode)
                .HasMaxLength(255)
                .HasColumnName("CANDIDATE_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DatetimeEvent).HasColumnName("DATETIME_EVENT");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EventTitle)
                .HasMaxLength(255)
                .HasColumnName("EVENT_TITLE");
            entity.Property(e => e.FlagDelete).HasColumnName("FLAG_DELETE");
            entity.Property(e => e.FormatSetting)
                .HasMaxLength(255)
                .HasColumnName("FORMAT_SETTING");
            entity.Property(e => e.FrameTime)
                .HasMaxLength(255)
                .HasColumnName("FRAME_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CardAttachment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CARD_ATT__3214EC27E765E172");

            entity.ToTable("CARD_ATTACHMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.ChkListCode)
                .HasMaxLength(255)
                .HasColumnName("CHK_LIST_CODE");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FileType)
                .HasComment("Type=0(Tệp tin), Type=1(Hình ảnh)")
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.FileUrl)
                .HasMaxLength(255)
                .HasColumnName("FILE_URL");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.IdMapping).HasColumnName("ID_MAPPING");
            entity.Property(e => e.IsEdit).HasColumnName("IS_EDIT");
            entity.Property(e => e.IsEdms).HasColumnName("IS_EDMS");
            entity.Property(e => e.ListPermissionViewFile)
                .IsUnicode(false)
                .HasColumnName("LIST_PERMISSION_VIEW_FILE");
            entity.Property(e => e.ListUserView).HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.MemberId)
                .HasMaxLength(255)
                .HasColumnName("MEMBER_ID");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CardAttachmentCopy>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CARD_ATT__3214EC273A22938E");

            entity.ToTable("CARD_ATTACHMENT_copy");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.ChkListCode)
                .HasMaxLength(255)
                .HasColumnName("CHK_LIST_CODE");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FileType)
                .HasComment("Type=0(Tệp tin), Type=1(Hình ảnh)")
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.FileUrl)
                .HasMaxLength(255)
                .HasColumnName("FILE_URL");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.IdMapping).HasColumnName("ID_MAPPING");
            entity.Property(e => e.IsEdit).HasColumnName("IS_EDIT");
            entity.Property(e => e.IsEdms).HasColumnName("IS_EDMS");
            entity.Property(e => e.ListPermissionViewFile)
                .IsUnicode(false)
                .HasColumnName("LIST_PERMISSION_VIEW_FILE");
            entity.Property(e => e.ListUserView).HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.MemberId)
                .HasMaxLength(255)
                .HasColumnName("MEMBER_ID");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CardCommentList>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CARD_COM__3214EC2723FB9065");

            entity.ToTable("CARD_COMMENT_LIST");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoardCode)
                .HasMaxLength(255)
                .HasColumnName("BOARD_CODE");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CmtContent).HasColumnName("CMT_CONTENT");
            entity.Property(e => e.CmtId)
                .HasMaxLength(255)
                .HasColumnName("CMT_ID");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Dislike).HasColumnName("DISLIKE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.GptAnswer).HasColumnName("GPT_ANSWER");
            entity.Property(e => e.IsGptAnswered).HasColumnName("IS_GPT_ANSWERED");
            entity.Property(e => e.JsonCanvas).HasColumnName("JSON_CANVAS");
            entity.Property(e => e.Like).HasColumnName("LIKE");
            entity.Property(e => e.LikeLog).HasColumnName("LIKE_LOG");
            entity.Property(e => e.MemberId)
                .HasMaxLength(255)
                .HasColumnName("MEMBER_ID");
            entity.Property(e => e.RefParent).HasColumnName("REF_PARENT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CardItemCheck>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CARD_ITE__3214EC27D649B3C6");

            entity.ToTable("CARD_ITEM_CHECK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActInstCode)
                .HasMaxLength(255)
                .HasColumnName("ACT_INST_CODE");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CheckTitle).HasColumnName("CHECK_TITLE");
            entity.Property(e => e.ChkListCode)
                .HasMaxLength(255)
                .HasColumnName("CHK_LIST_CODE");
            entity.Property(e => e.Completed)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
            entity.Property(e => e.Constraint).HasColumnName("CONSTRAINT");
            entity.Property(e => e.Cost)
                .HasColumnType("money")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Deadline).HasColumnName("DEADLINE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.Finishtime).HasColumnName("FINISHTIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.MemberId)
                .HasMaxLength(255)
                .HasColumnName("MEMBER_ID");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Percent).HasColumnName("PERCENT");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.WeightNum)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT_NUM");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(255)
                .HasColumnName("WF_INST_CODE");
        });

        modelBuilder.Entity<CardItemCheckTrackingProgress>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CARD_ITE__3214EC277BA4C77F");

            entity.ToTable("CARD_ITEM_CHECK_TRACKING_PROGRESS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Completed).HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ITEM_CODE");
        });

        modelBuilder.Entity<CardMapping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CARD_MAP__3214EC272FA1387E");

            entity.ToTable("CARD_MAPPING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoardCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BOARD_CODE");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CustomerCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CUSTOMER_CODE");
            entity.Property(e => e.GroupUserCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP_USER_CODE");
            entity.Property(e => e.ListCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LIST_CODE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.Relative)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("RELATIVE");
            entity.Property(e => e.Responsibility)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("RESPONSIBILITY");
            entity.Property(e => e.SupplierCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SUPPLIER_CODE");
            entity.Property(e => e.TeamCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TEAM_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<CardProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CARD_PRO__3214EC27716CA8B4");

            entity.ToTable("CARD_PRODUCT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
        });

        modelBuilder.Entity<CardSubitemCheck>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CARD_SUB__3214EC279B410C96");

            entity.ToTable("CARD_SUBITEM_CHECK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Approve).HasColumnName("APPROVE");
            entity.Property(e => e.ApprovedTime).HasColumnName("APPROVED_TIME");
            entity.Property(e => e.Approver)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("APPROVER");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.ChkListCode)
                .HasMaxLength(255)
                .HasColumnName("CHK_LIST_CODE");
            entity.Property(e => e.Completed)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
            entity.Property(e => e.Cost)
                .HasColumnType("money")
                .HasColumnName("COST");
            entity.Property(e => e.Deadline).HasColumnName("DEADLINE");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.Title).HasColumnName("TITLE");
            entity.Property(e => e.WeightNum)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT_NUM");
        });

        modelBuilder.Entity<CardUserActivity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CARD_USE__3214EC2779CBB941");

            entity.ToTable("CARD_USER_ACTIVITY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACTION");
            entity.Property(e => e.CardCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.ChangeDetails).HasColumnName("CHANGE_DETAILS");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(255)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.IdObject)
                .HasMaxLength(255)
                .HasColumnName("ID_OBJECT");
            entity.Property(e => e.IsCheck).HasColumnName("IS_CHECK");
            entity.Property(e => e.Log).HasColumnName("LOG");
            entity.Property(e => e.UserId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<CareerCatScale>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CAREER_C__3214EC07BFC6DB06");

            entity.ToTable("CAREER_CAT_SCALE");

            entity.Property(e => e.CareerCode)
                .HasMaxLength(255)
                .HasColumnName("CAREER_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PayScaleCode)
                .HasMaxLength(255)
                .HasColumnName("PAY_SCALE_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CatActivity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CAT_ACTI__3214EC27743A8010");

            entity.ToTable("CAT_ACTIVITY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.ActGroup)
                .HasMaxLength(100)
                .HasColumnName("ACT_GROUP");
            entity.Property(e => e.ActName)
                .HasMaxLength(255)
                .HasColumnName("ACT_NAME");
            entity.Property(e => e.ActType)
                .HasMaxLength(100)
                .HasColumnName("ACT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FileUrl)
                .HasMaxLength(255)
                .HasColumnName("FILE_URL");
            entity.Property(e => e.IdMapping).HasColumnName("ID_MAPPING");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CatWorkFlow>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CAT_OBJE__3214EC27826FB70A");

            entity.ToTable("CAT_WORK_FLOW");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkFlowCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WORK_FLOW_CODE");
        });

        modelBuilder.Entity<CategoryCareer>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CATEGORY__3214EC076DEFE7FC");

            entity.ToTable("CATEGORY_CAREER");

            entity.Property(e => e.CareerCode)
                .HasMaxLength(255)
                .HasColumnName("CAREER_CODE");
            entity.Property(e => e.CareerGroup)
                .HasMaxLength(255)
                .HasColumnName("CAREER_GROUP");
            entity.Property(e => e.CareerName)
                .HasMaxLength(255)
                .HasColumnName("CAREER_NAME");
            entity.Property(e => e.CareerType)
                .HasMaxLength(255)
                .HasColumnName("CAREER_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.PayGradesCode)
                .HasMaxLength(255)
                .HasColumnName("PAY_GRADES_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CategoryWorksheet>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CATEGORY_WORKSHEET");

            entity.Property(e => e.CategoryId).HasColumnName("CATEGORY_ID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Order).HasColumnName("ORDER");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.WorksheetId).HasColumnName("WORKSHEET_ID");
        });

        modelBuilder.Entity<ChartReDeMonth>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Chart_RE_DE_Month");

            entity.Property(e => e.Id).HasColumnName("ID");
        });

        modelBuilder.Entity<ChatGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC2728591718");

            entity.ToTable("CHAT_GROUP");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.GroupChanel)
                .HasMaxLength(100)
                .HasColumnName("GROUP_CHANEL");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(100)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.GroupName)
                .HasMaxLength(100)
                .HasColumnName("GROUP_NAME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.ObjectRelative).HasColumnName("OBJECT_RELATIVE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ChatHistory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GROUP_CH__3214EC27CA9415A4");

            entity.ToTable("CHAT_HISTORY");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(100)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Message)
                .HasMaxLength(100)
                .HasColumnName("MESSAGE");
            entity.Property(e => e.MessageType)
                .HasMaxLength(100)
                .HasColumnName("MESSAGE_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CmsAttachment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_atta__3213E83F628FA481");

            entity.ToTable("cms_attachments");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("file_name");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("file_path");
            entity.Property(e => e.FileType)
                .HasMaxLength(255)
                .HasColumnName("file_type");
            entity.Property(e => e.FileUrl)
                .HasMaxLength(255)
                .HasColumnName("file_url");
            entity.Property(e => e.Hits).HasColumnName("hits");
            entity.Property(e => e.ItemId).HasColumnName("item_id");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("title");
            entity.Property(e => e.TitleAttribute)
                .HasMaxLength(255)
                .HasColumnName("title_attribute");
        });

        modelBuilder.Entity<CmsCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_cate__3213E83F656C112C");

            entity.ToTable("cms_categories");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Access).HasColumnName("access");
            entity.Property(e => e.Alias)
                .HasMaxLength(255)
                .HasColumnName("alias");
            entity.Property(e => e.Description)
                .HasMaxLength(4000)
                .HasColumnName("description");
            entity.Property(e => e.ExtraFieldsGroup).HasColumnName("extra_fields_group");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("image");
            entity.Property(e => e.Language)
                .HasMaxLength(255)
                .HasColumnName("language");
            entity.Property(e => e.MultipleLanguage).HasColumnName("multiple_language");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("name");
            entity.Property(e => e.Ordering).HasColumnName("ordering");
            entity.Property(e => e.Params).HasColumnName("params");
            entity.Property(e => e.Parent).HasColumnName("parent");
            entity.Property(e => e.Plugins).HasColumnName("plugins");
            entity.Property(e => e.Published).HasColumnName("published");
            entity.Property(e => e.Template)
                .HasMaxLength(255)
                .HasColumnName("template");
            entity.Property(e => e.Trash).HasColumnName("trash");
        });

        modelBuilder.Entity<CmsComment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_comm__3213E83F68487DD7");

            entity.ToTable("cms_comments");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CommentDate)
                .HasColumnType("datetime")
                .HasColumnName("comment_date");
            entity.Property(e => e.CommentEmail)
                .HasMaxLength(255)
                .HasColumnName("comment_email");
            entity.Property(e => e.CommentText).HasColumnName("comment_text");
            entity.Property(e => e.CommentTitle)
                .HasMaxLength(1000)
                .HasColumnName("comment_title");
            entity.Property(e => e.CommentUrl)
                .HasMaxLength(255)
                .HasColumnName("comment_url");
            entity.Property(e => e.ItemId).HasColumnName("item_id");
            entity.Property(e => e.Published).HasColumnName("published");
            entity.Property(e => e.UserId).HasColumnName("user_id");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("user_name");
        });

        modelBuilder.Entity<CmsExtraField>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_extr__3213E83F6B24EA82");

            entity.ToTable("cms_extra_fields");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Group).HasColumnName("group");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("name");
            entity.Property(e => e.Ordering).HasColumnName("ordering");
            entity.Property(e => e.Published).HasColumnName("published");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("type");
            entity.Property(e => e.Value).HasColumnName("value");
        });

        modelBuilder.Entity<CmsExtraFieldsGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_extr__3213E83F6E01572D");

            entity.ToTable("cms_extra_fields_groups");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("name");
        });

        modelBuilder.Entity<CmsExtraFieldsValue>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_extr__3213E83F70DDC3D8");

            entity.ToTable("cms_extra_fields_value");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CreatedBy).HasColumnName("created_by");
            entity.Property(e => e.CreatedDate)
                .HasColumnType("datetime")
                .HasColumnName("created_date");
            entity.Property(e => e.DatePost)
                .HasColumnType("datetime")
                .HasColumnName("date_post");
            entity.Property(e => e.FieldGroup)
                .HasComment("Vị trí")
                .HasColumnName("field_group");
            entity.Property(e => e.FieldValue)
                .HasComment("Tiêu đề")
                .HasColumnName("field_value");
            entity.Property(e => e.ModifiedBy).HasColumnName("modified_by");
            entity.Property(e => e.ModifiedDate)
                .HasColumnType("datetime")
                .HasColumnName("modified_date");
            entity.Property(e => e.Ordering)
                .HasComment("Thứ tự")
                .HasColumnName("ordering");
            entity.Property(e => e.Publish).HasColumnName("publish");
            entity.Property(e => e.Trash).HasColumnName("trash");
        });

        modelBuilder.Entity<CmsFunction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_func__3213E83F797309D9");

            entity.ToTable("cms_functions");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Created)
                .HasColumnType("datetime")
                .HasColumnName("created");
            entity.Property(e => e.CreatedBy).HasColumnName("created_by");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("description");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.Language)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("language");
            entity.Property(e => e.Modified)
                .HasColumnType("datetime")
                .HasColumnName("modified");
            entity.Property(e => e.ModifiedBy).HasColumnName("modified_by");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("title");
        });

        modelBuilder.Entity<CmsFunctionGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_func__3213E83F73BA3083");

            entity.ToTable("cms_function_group");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Add).HasColumnName("add");
            entity.Property(e => e.Created)
                .HasColumnType("datetime")
                .HasColumnName("created");
            entity.Property(e => e.CreatedBy).HasColumnName("created_by");
            entity.Property(e => e.Delete).HasColumnName("delete");
            entity.Property(e => e.Full).HasColumnName("full");
            entity.Property(e => e.FunctionId).HasColumnName("functionId");
            entity.Property(e => e.GroupId).HasColumnName("groupId");
            entity.Property(e => e.Modified)
                .HasColumnType("datetime")
                .HasColumnName("modified");
            entity.Property(e => e.ModifiedBy).HasColumnName("modified_by");
            entity.Property(e => e.Status).HasColumnName("status");
            entity.Property(e => e.Update).HasColumnName("update");
            entity.Property(e => e.View).HasColumnName("view");
        });

        modelBuilder.Entity<CmsFunctionResource>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_func__3213E83F76969D2E");

            entity.ToTable("cms_function_resource");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CategoryId).HasColumnName("categoryId");
            entity.Property(e => e.Created)
                .HasColumnType("datetime")
                .HasColumnName("created");
            entity.Property(e => e.CreatedBy).HasColumnName("created_by");
            entity.Property(e => e.FunctionId).HasColumnName("functionId");
            entity.Property(e => e.Modified)
                .HasColumnType("datetime")
                .HasColumnName("modified");
            entity.Property(e => e.ModifiedBy).HasColumnName("modified_by");
            entity.Property(e => e.Status).HasColumnName("status");
        });

        modelBuilder.Entity<CmsItem>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_item__3213E83F7C4F7684");

            entity.ToTable("cms_items");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Access).HasColumnName("access");
            entity.Property(e => e.Alias)
                .HasMaxLength(1000)
                .HasColumnName("alias");
            entity.Property(e => e.BlogSubject)
                .HasMaxLength(255)
                .HasColumnName("blog_subject");
            entity.Property(e => e.CatId).HasColumnName("cat_id");
            entity.Property(e => e.CheckedOut).HasColumnName("checked_out");
            entity.Property(e => e.CheckedOutTime)
                .HasColumnType("datetime")
                .HasColumnName("checked_out_time");
            entity.Property(e => e.Created)
                .HasColumnType("datetime")
                .HasColumnName("created");
            entity.Property(e => e.CreatedBy).HasColumnName("created_by");
            entity.Property(e => e.CreatedByAlias)
                .HasMaxLength(255)
                .HasColumnName("created_by_alias");
            entity.Property(e => e.DatePost)
                .HasColumnType("datetime")
                .HasColumnName("date_post");
            entity.Property(e => e.ExtraFields).HasColumnName("extra_fields");
            entity.Property(e => e.ExtraFieldsSearch)
                .HasMaxLength(255)
                .HasColumnName("extra_fields_search");
            entity.Property(e => e.Featured).HasColumnName("featured");
            entity.Property(e => e.FeaturedOrdering).HasColumnName("featured_ordering");
            entity.Property(e => e.FullText).HasColumnName("full_text");
            entity.Property(e => e.Gallery)
                .HasMaxLength(255)
                .HasColumnName("gallery");
            entity.Property(e => e.HashTag).HasColumnName("hash_tag");
            entity.Property(e => e.Hits).HasColumnName("hits");
            entity.Property(e => e.ImageCaption)
                .HasMaxLength(500)
                .HasColumnName("image_caption");
            entity.Property(e => e.ImageCredits)
                .HasMaxLength(255)
                .HasColumnName("image_credits");
            entity.Property(e => e.IntroText).HasColumnName("intro_text");
            entity.Property(e => e.JsonEditor).HasColumnName("JSON_EDITOR");
            entity.Property(e => e.Language)
                .HasMaxLength(255)
                .HasColumnName("language");
            entity.Property(e => e.ListUserView)
                .IsUnicode(false)
                .HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.MetaData)
                .HasMaxLength(1000)
                .HasColumnName("meta_data");
            entity.Property(e => e.MetaDesc)
                .HasMaxLength(1000)
                .HasColumnName("meta_desc");
            entity.Property(e => e.MetaKey)
                .HasMaxLength(1000)
                .HasColumnName("meta_key");
            entity.Property(e => e.Modified)
                .HasColumnType("datetime")
                .HasColumnName("modified");
            entity.Property(e => e.ModifiedBy).HasColumnName("modified_by");
            entity.Property(e => e.MultipleLanguage).HasColumnName("multiple_language");
            entity.Property(e => e.Ordering).HasColumnName("ordering");
            entity.Property(e => e.Params).HasColumnName("params");
            entity.Property(e => e.Plugins).HasColumnName("plugins");
            entity.Property(e => e.PublishDown)
                .HasColumnType("datetime")
                .HasColumnName("publish_down");
            entity.Property(e => e.PublishUp)
                .HasColumnType("datetime")
                .HasColumnName("publish_up");
            entity.Property(e => e.Published).HasColumnName("published");
            entity.Property(e => e.Rate).HasColumnName("rate");
            entity.Property(e => e.Share).HasColumnName("share");
            entity.Property(e => e.Template)
                .HasMaxLength(255)
                .HasColumnName("template");
            entity.Property(e => e.Title)
                .HasMaxLength(1000)
                .HasColumnName("title");
            entity.Property(e => e.Trash).HasColumnName("trash");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("type");
            entity.Property(e => e.Video)
                .HasMaxLength(500)
                .HasColumnName("video");
            entity.Property(e => e.VideoCaption)
                .HasMaxLength(500)
                .HasColumnName("video_caption");
            entity.Property(e => e.VideoCredits)
                .HasMaxLength(255)
                .HasColumnName("video_credits");
        });

        modelBuilder.Entity<CmsRating>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_rati__3213E83F7F2BE32F");

            entity.ToTable("cms_rating");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ItemId).HasColumnName("item_id");
            entity.Property(e => e.Lastip)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("lastip");
            entity.Property(e => e.RatingCount).HasColumnName("rating_count");
            entity.Property(e => e.RatingSum).HasColumnName("rating_sum");
        });

        modelBuilder.Entity<CmsRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_role__3213E83F02084FDA");

            entity.ToTable("cms_roles");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Created)
                .HasColumnType("datetime")
                .HasColumnName("created");
            entity.Property(e => e.CreatedBy).HasColumnName("created_by");
            entity.Property(e => e.Modified)
                .HasColumnType("datetime")
                .HasColumnName("modified");
            entity.Property(e => e.ModifiedBy).HasColumnName("modified_by");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .HasColumnName("name");
            entity.Property(e => e.Rank).HasColumnName("rank");
        });

        modelBuilder.Entity<CmsSetting>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_sett__3213E83F04E4BC85");

            entity.ToTable("cms_setting");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("name");
            entity.Property(e => e.Ordering).HasColumnName("ordering");
            entity.Property(e => e.Published).HasColumnName("published");
            entity.Property(e => e.Value).HasColumnName("value");
        });

        modelBuilder.Entity<CmsTag>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_tags__3213E83F07C12930");

            entity.ToTable("cms_tags");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("name");
            entity.Property(e => e.Published).HasColumnName("published");
        });

        modelBuilder.Entity<CmsTagsXref>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_tags__3213E83F0A9D95DB");

            entity.ToTable("cms_tags_xref");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.ItemId).HasColumnName("item_id");
            entity.Property(e => e.TagId).HasColumnName("tag_id");
        });

        modelBuilder.Entity<CoinRateExchange>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("COIN_RATE_EXCHANGE");

            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Money)
                .HasMaxLength(100)
                .HasColumnName("MONEY");
            entity.Property(e => e.Rate)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("RATE");
            entity.Property(e => e.TimeUpdated).HasColumnName("TIME_UPDATED");
        });

        modelBuilder.Entity<CommAttribute>(entity =>
        {
            entity.HasKey(e => e.CommId).HasName("PK__COMM_ATT__AF8CE2B9395AF137");

            entity.ToTable("COMM_ATTRIBUTE");

            entity.Property(e => e.CommId)
                .HasComment("Customer Id")
                .HasColumnName("CommID");
            entity.Property(e => e.CommCode).HasMaxLength(100);
            entity.Property(e => e.CommGroup).HasMaxLength(100);
            entity.Property(e => e.CommValue).HasMaxLength(255);
            entity.Property(e => e.CreatedBy).HasMaxLength(50);
            entity.Property(e => e.DeletedBy).HasMaxLength(50);
            entity.Property(e => e.UpdatedBy).HasMaxLength(50);
        });

        modelBuilder.Entity<CommitmentDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("COMMITMENT_DETAIL");

            entity.Property(e => e.CommitmentCode)
                .HasMaxLength(255)
                .HasColumnName("COMMITMENT_CODE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
        });

        modelBuilder.Entity<CommitmentHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("COMMITMENT_HEADER");

            entity.Property(e => e.CommitmentCode)
                .HasMaxLength(225)
                .HasColumnName("COMMITMENT_CODE");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(225)
                .IsFixedLength()
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateTime).HasColumnName("CREATE_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.FileReference).HasColumnName("FILE_REFERENCE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ListRule)
                .HasMaxLength(225)
                .HasColumnName("LIST_RULE");
            entity.Property(e => e.Noted)
                .HasMaxLength(225)
                .HasColumnName("NOTED");
            entity.Property(e => e.Signature)
                .HasMaxLength(3000)
                .HasColumnName("SIGNATURE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(225)
                .HasColumnName("STATUS");
            entity.Property(e => e.Surrogate)
                .HasMaxLength(225)
                .HasColumnName("SURROGATE");
            entity.Property(e => e.Title)
                .HasMaxLength(225)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(225)
                .IsFixedLength()
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(225)
                .HasColumnName("USER_ID");
            entity.Property(e => e.UserSign)
                .HasMaxLength(225)
                .HasColumnName("USER_SIGN");
        });

        modelBuilder.Entity<CommonSetting>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("COMMON_SETTING");

            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Asset_code ==null không được quản lý")
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CodeSet)
                .HasMaxLength(255)
                .HasColumnName("CODE_SET");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.GroupNote)
                .HasMaxLength(255)
                .HasColumnName("GROUP_NOTE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Logo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOGO");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.SettingId)
                .ValueGeneratedOnAdd()
                .HasColumnName("SETTING_ID");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ValueSet)
                .HasMaxLength(1000)
                .HasColumnName("VALUE_SET");
        });

        modelBuilder.Entity<CommonSettingArticle>(entity =>
        {
            entity.HasKey(e => e.CodeSet).HasName("PK__COMMON_S__09D346AC13AE7E78");

            entity.ToTable("COMMON_SETTING_ARTICLE");

            entity.Property(e => e.CodeSet)
                .HasMaxLength(255)
                .HasColumnName("CODE_SET");
            entity.Property(e => e.ArticleCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ARTICLE_CODE");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Asset_code ==null không được quản lý")
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.GroupNote)
                .HasMaxLength(255)
                .HasColumnName("GROUP_NOTE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Logo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOGO");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.SettingId)
                .ValueGeneratedOnAdd()
                .HasColumnName("SETTING_ID");
            entity.Property(e => e.Title).HasMaxLength(255);
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ValueSet)
                .HasMaxLength(255)
                .HasColumnName("VALUE_SET");
        });

        modelBuilder.Entity<CommonSettingCategory>(entity =>
        {
            entity.HasKey(e => e.SettingId).HasName("PK__COMMON_S__137118B0C81CB8C8");

            entity.ToTable("COMMON_SETTING_CATEGORY");

            entity.Property(e => e.SettingId).HasColumnName("SETTING_ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Asset_code ==null không được quản lý")
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CategoryCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CATEGORY_CODE");
            entity.Property(e => e.CodeSet)
                .HasMaxLength(255)
                .HasColumnName("CODE_SET");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.GroupNote)
                .HasMaxLength(255)
                .HasColumnName("GROUP_NOTE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Logo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOGO");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.Title).HasMaxLength(255);
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ValueSet).HasColumnName("VALUE_SET");
        });

        modelBuilder.Entity<CommonSettingCategoryCopy>(entity =>
        {
            entity.HasKey(e => e.SettingId).HasName("PK__COMMON_S__137118B049C55D20");

            entity.ToTable("COMMON_SETTING_CATEGORY_copy");

            entity.Property(e => e.SettingId).HasColumnName("SETTING_ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Asset_code ==null không được quản lý")
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CategoryCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CATEGORY_CODE");
            entity.Property(e => e.CodeSet)
                .HasMaxLength(255)
                .HasColumnName("CODE_SET");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.GroupNote)
                .HasMaxLength(255)
                .HasColumnName("GROUP_NOTE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Logo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOGO");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.Title).HasMaxLength(255);
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ValueSet).HasColumnName("VALUE_SET");
        });

        modelBuilder.Entity<CommonSettingGroup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("COMMON_SETTING_GROUP");

            entity.Property(e => e.GroupCode)
                .HasMaxLength(50)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.GroupName)
                .HasMaxLength(50)
                .HasColumnName("GROUP_NAME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<CompanyBankAccount>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("COMPANY_BANK_ACCOUNT");

            entity.Property(e => e.BankAccount)
                .HasMaxLength(255)
                .HasColumnName("BANK_ACCOUNT");
            entity.Property(e => e.BankCode)
                .HasMaxLength(255)
                .HasColumnName("BANK_CODE");
            entity.Property(e => e.BankDeeplink)
                .HasMaxLength(255)
                .HasColumnName("BANK_DEEPLINK");
            entity.Property(e => e.BankId)
                .HasMaxLength(50)
                .HasColumnName("BANK_ID");
            entity.Property(e => e.BankImage)
                .HasMaxLength(255)
                .HasColumnName("BANK_IMAGE");
            entity.Property(e => e.BankName)
                .HasMaxLength(50)
                .HasColumnName("BANK_NAME");
            entity.Property(e => e.BankOwner)
                .HasMaxLength(255)
                .HasColumnName("BANK_OWNER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsActive).HasColumnName("IS_ACTIVE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Order).HasColumnName("ORDER");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CompanyRuleItem>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("COMPANY_RULE_ITEM");

            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateTime)
                .HasColumnType("datetime")
                .HasColumnName("CREATE_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Item)
                .HasMaxLength(255)
                .HasColumnName("ITEM");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(50)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime)
                .HasColumnType("datetime")
                .HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<CompanyScheduleWork>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_WORK___3214EC27BEA3A41C");

            entity.ToTable("COMPANY_SCHEDULE_WORK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(7)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromAfternoon).HasColumnName("FROM_AFTERNOON");
            entity.Property(e => e.FromEvening).HasColumnName("FROM_EVENING");
            entity.Property(e => e.FromMorning).HasColumnName("FROM_MORNING");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ToAfternoon).HasColumnName("TO_AFTERNOON");
            entity.Property(e => e.ToEvening).HasColumnName("TO_EVENING");
            entity.Property(e => e.ToMorning).HasColumnName("TO_MORNING");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<Contact>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CONTACT__3214EC27CCE39216");

            entity.ToTable("CONTACT");

            entity.Property(e => e.Id)
                .HasComment("Contact Id")
                .HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(500)
                .HasComment("Address")
                .HasColumnName("ADDRESS");
            entity.Property(e => e.Birthday)
                .HasColumnType("datetime")
                .HasColumnName("BIRTHDAY");
            entity.Property(e => e.Career)
                .HasMaxLength(50)
                .HasColumnName("CAREER");
            entity.Property(e => e.ContactName)
                .HasMaxLength(50)
                .HasComment("Contact Name")
                .HasColumnName("CONTACT_NAME");
            entity.Property(e => e.CreateTime)
                .HasComment("Create time")
                .HasColumnName("CREATE_TIME");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Customer Code")
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasComment("Email")
                .HasColumnName("EMAIL");
            entity.Property(e => e.Facebook)
                .HasMaxLength(200)
                .HasComment("Facebook")
                .HasColumnName("FACEBOOK");
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Fax")
                .HasColumnName("FAX");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.Flag)
                .HasComment("Flag")
                .HasColumnName("FLAG");
            entity.Property(e => e.GooglePlus)
                .HasMaxLength(200)
                .HasComment("Google Plus")
                .HasColumnName("GOOGLE_PLUS");
            entity.Property(e => e.Hashtag)
                .HasMaxLength(50)
                .HasColumnName("HASHTAG");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasComment("Image")
                .HasColumnName("IMAGE");
            entity.Property(e => e.InChargeOf)
                .HasMaxLength(1000)
                .HasColumnName("IN_CHARGE_OF");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MobilePhone)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Mobile Phone")
                .HasColumnName("MOBILE_PHONE");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasComment("Note")
                .HasColumnName("NOTE");
            entity.Property(e => e.Position)
                .HasMaxLength(50)
                .HasColumnName("POSITION");
            entity.Property(e => e.Sex)
                .HasMaxLength(50)
                .HasColumnName("SEX");
            entity.Property(e => e.Skype)
                .HasMaxLength(200)
                .HasComment("Skype")
                .HasColumnName("SKYPE");
            entity.Property(e => e.Source)
                .HasMaxLength(50)
                .HasColumnName("SOURCE");
            entity.Property(e => e.SuppCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Supplier Code")
                .HasColumnName("SUPP_CODE");
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Telephone")
                .HasColumnName("TELEPHONE");
            entity.Property(e => e.Title)
                .HasMaxLength(1000)
                .HasColumnName("TITLE");
            entity.Property(e => e.Twitter)
                .HasMaxLength(200)
                .HasComment("Twitter")
                .HasColumnName("TWITTER");
            entity.Property(e => e.UpdateTime)
                .HasComment("Update time")
                .HasColumnName("UPDATE_TIME");
            entity.Property(e => e.UserId)
                .HasComment("User Id")
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<ContractActivity>(entity =>
        {
            entity.HasKey(e => e.ContractActivityId).HasName("PK__CONTRACT__62A7B88D0A2E7944");

            entity.ToTable("CONTRACT_ACTIVITY");

            entity.Property(e => e.ContractActivityId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_ACTIVITY_ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(100)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Version).HasColumnName("VERSION");
        });

        modelBuilder.Entity<ContractAttribute>(entity =>
        {
            entity.HasKey(e => e.ContractAttributeId).HasName("PK__CONTRACT__CA96A4AB25247E62");

            entity.ToTable("CONTRACT_ATTRIBUTE");

            entity.Property(e => e.ContractAttributeId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_ATTRIBUTE_ID");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(100)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(50)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .HasColumnName("ATTR_VALUE");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractAttributeHi>(entity =>
        {
            entity.HasKey(e => e.ContractAttributeId).HasName("PK__CONTRACT__CA96A4AB9782DD0D");

            entity.ToTable("CONTRACT_ATTRIBUTE_HIS");

            entity.Property(e => e.ContractAttributeId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_ATTRIBUTE_ID");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(100)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(50)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .HasColumnName("ATTR_VALUE");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractDetail>(entity =>
        {
            entity.HasKey(e => e.ContractDetailId).HasName("PK__CONTRACT__97300B5EC14C7251");

            entity.ToTable("CONTRACT_DETAIL");

            entity.Property(e => e.ContractDetailId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_DETAIL_ID");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(100)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemName)
                .HasMaxLength(255)
                .HasColumnName("ITEM_NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Quatity)
                .HasColumnType("decimal(18, 5)")
                .HasColumnName("QUATITY");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractFile>(entity =>
        {
            entity.HasKey(e => e.ContractFileId).HasName("PK__CONTRACT__3B4129874B52EC11");

            entity.ToTable("CONTRACT_FILE");

            entity.Property(e => e.ContractFileId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_FILE_ID");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .HasColumnName("FILE_CODE");
        });

        modelBuilder.Entity<ContractMemberTask>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CONTRACT__3214EC27901711F1");

            entity.ToTable("CONTRACT_MEMBER_TASK");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.Assignee)
                .HasMaxLength(255)
                .HasColumnName("ASSIGNEE");
            entity.Property(e => e.Assigner).HasColumnName("ASSIGNER");
            entity.Property(e => e.AssignerTime).HasColumnName("ASSIGNER_TIME");
            entity.Property(e => e.ConfirmTime).HasColumnName("CONFIRM_TIME");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.TaskCode)
                .HasMaxLength(100)
                .HasColumnName("TASK_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractNote>(entity =>
        {
            entity.HasKey(e => e.ContractNoteId).HasName("PK__CONTRACT__7053D99890BA7362");

            entity.ToTable("CONTRACT_NOTE");

            entity.Property(e => e.ContractNoteId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_NOTE_ID");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Tags)
                .HasMaxLength(50)
                .HasColumnName("TAGS");
            entity.Property(e => e.Title)
                .HasMaxLength(100)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractPeopleTag>(entity =>
        {
            entity.HasKey(e => e.ContractPeopleTagId).HasName("PK__CONTRACT__F5AE16F41828598F");

            entity.ToTable("CONTRACT_PEOPLE_TAGS");

            entity.Property(e => e.ContractPeopleTagId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_PEOPLE_TAG_ID");
            entity.Property(e => e.Assigner).HasColumnName("ASSIGNER");
            entity.Property(e => e.Confirm)
                .HasMaxLength(100)
                .HasColumnName("CONFIRM");
            entity.Property(e => e.ConfirmTime).HasColumnName("CONFIRM_TIME");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Flags).HasColumnName("FLAGS");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.RequestTime).HasColumnName("REQUEST_TIME");
            entity.Property(e => e.TagsType)
                .HasMaxLength(50)
                .HasColumnName("TAGS_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractPoSchedulePay>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CONTRACT_PO_SCHEDULE_PAY");

            entity.Property(e => e.Condition)
                .HasMaxLength(255)
                .HasColumnName("CONDITION");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EstimateTime).HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Money).HasColumnName("MONEY");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PaidMoney).HasColumnName("PAID_MONEY");
            entity.Property(e => e.PaidTime).HasColumnName("PAID_TIME");
            entity.Property(e => e.PayTimes).HasColumnName("PAY_TIMES");
            entity.Property(e => e.Percentage).HasColumnName("PERCENTAGE");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractSchedulePay>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CONTRACT__809C800AEC3C5676");

            entity.ToTable("CONTRACT_SCHEDULE_PAY");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.Condition)
                .HasMaxLength(255)
                .HasColumnName("CONDITION");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EstimateTime).HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Money).HasColumnName("MONEY");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PaidMoney).HasColumnName("PAID_MONEY");
            entity.Property(e => e.PaidTime).HasColumnName("PAID_TIME");
            entity.Property(e => e.PayTimes).HasColumnName("PAY_TIMES");
            entity.Property(e => e.Percentage).HasColumnName("PERCENTAGE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractSchedulePayHi>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CONTRACT__3214EC27F328931F");

            entity.ToTable("CONTRACT_SCHEDULE_PAY_HIS");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.Condition)
                .HasMaxLength(255)
                .HasColumnName("CONDITION");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EstimateTime).HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Money).HasColumnName("MONEY");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PayTimes).HasColumnName("PAY_TIMES");
            entity.Property(e => e.Percentage).HasColumnName("PERCENTAGE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractServiceDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CONTRACT__3214EC27EFB9D256");

            entity.ToTable("CONTRACT_SERVICE_DETAIL");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CustomFee)
                .HasComment("CHIẾT KHẤU")
                .HasColumnName("CUSTOM_FEE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount)
                .HasComment("GIẢM GIÁ")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.ServiceName)
                .HasMaxLength(255)
                .HasColumnName("SERVICE_NAME");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ContractServiceDetailHi>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CONTRACT__3214EC2700DAAE1B");

            entity.ToTable("CONTRACT_SERVICE_DETAIL_HIS");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CustomFee)
                .HasComment("CHIẾT KHẤU")
                .HasColumnName("CUSTOM_FEE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount)
                .HasComment("GIẢM GIÁ")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.ServiceName)
                .HasMaxLength(255)
                .HasColumnName("SERVICE_NAME");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CostTableLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__COST_TAB__3214EC278E3B88AD");

            entity.ToTable("COST_TABLE_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Catelogue)
                .HasMaxLength(255)
                .HasColumnName("CATELOGUE");
            entity.Property(e => e.ChangeNumber).HasColumnName("CHANGE_NUMBER");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CustomFee)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CUSTOM_FEE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.HeaderCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("HEADER_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PriceCost)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST");
            entity.Property(e => e.PriceCostAirline)
                .HasComment("Giá đại lý đường bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_AIRLINE");
            entity.Property(e => e.PriceCostCatelogue)
                .HasComment("Giá đại lý catalogue")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_CATELOGUE");
            entity.Property(e => e.PriceCostDefault)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_DEFAULT");
            entity.Property(e => e.PriceCostSea)
                .HasComment("Giá đại lý đường biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_SEA");
            entity.Property(e => e.PriceRetail)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL");
            entity.Property(e => e.PriceRetailBuild)
                .HasComment("Giá bán lẻ có thi công")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD");
            entity.Property(e => e.PriceRetailBuildAirline)
                .HasComment("Giá bán lẻ có thi công bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailBuildSea)
                .HasComment("Giá bán lẻ có thi công kho,biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_SEA");
            entity.Property(e => e.PriceRetailNoBuild)
                .HasComment("Giá bán lẻ không thi công")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD");
            entity.Property(e => e.PriceRetailNoBuildAirline)
                .HasComment("Giá bán lẻ không thi công bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailNoBuildSea)
                .HasComment("Giá bán lẻ không thi công kho, biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_SEA");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.RecordStatus)
                .HasMaxLength(255)
                .HasColumnName("RECORD_STATUS");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CrawlerActionGroup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRAWLER_ACTION_GROUP");

            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.GroupId)
                .HasMaxLength(255)
                .HasColumnName("GROUP_ID");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IsOwned).HasColumnName("IS_OWNED");
            entity.Property(e => e.PostId)
                .HasMaxLength(255)
                .HasColumnName("POST_ID");
        });

        modelBuilder.Entity<CrawlerBotManagement>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRAWLER_BOT_MANAGEMENT");

            entity.Property(e => e.BotSessionCode)
                .HasMaxLength(255)
                .HasColumnName("BOT_SESSION_CODE");
            entity.Property(e => e.ConfigSelectorJson).HasColumnName("CONFIG_SELECTOR_JSON");
            entity.Property(e => e.ConfigSelectorJsonSendData).HasColumnName("CONFIG_SELECTOR_JSON_SEND_DATA");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataStoragePath)
                .HasMaxLength(255)
                .HasColumnName("DATA_STORAGE_PATH");
            entity.Property(e => e.DeepScan).HasColumnName("DEEP_SCAN");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IdentifierBot).HasColumnName("IDENTIFIER_BOT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsDownloadFile).HasColumnName("IS_DOWNLOAD_FILE");
            entity.Property(e => e.ListKeyWord)
                .HasMaxLength(255)
                .HasColumnName("LIST_KEY_WORD");
            entity.Property(e => e.RobotCode)
                .HasMaxLength(255)
                .HasColumnName("ROBOT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Url).HasColumnName("URL");
        });

        modelBuilder.Entity<CrawlerDomainConfiguration>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRAWLER_DOMAIN_CONFIGURATION");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DomainGroup)
                .HasMaxLength(255)
                .HasColumnName("DOMAIN_GROUP");
            entity.Property(e => e.DomainName)
                .HasMaxLength(255)
                .HasColumnName("DOMAIN_NAME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CrawlerDomainConfigurationParam>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRAWLER_DOMAIN_CONFIGURATION_PARAM");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataStorage)
                .HasMaxLength(255)
                .HasColumnName("DATA_STORAGE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DomainId).HasColumnName("DOMAIN_ID");
            entity.Property(e => e.DownloadFile).HasColumnName("DOWNLOAD_FILE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KeyWord)
                .HasMaxLength(255)
                .HasColumnName("KEY_WORD");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Url).HasColumnName("URL");
        });

        modelBuilder.Entity<CrawlerInfoFacebookGroup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRAWLER_INFO_FACEBOOK_GROUP");

            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FrequencyPost).HasColumnName("FREQUENCY_POST");
            entity.Property(e => e.FrequencyType)
                .HasMaxLength(50)
                .HasColumnName("FREQUENCY_TYPE");
            entity.Property(e => e.GroupId)
                .HasMaxLength(255)
                .HasColumnName("GROUP_ID");
            entity.Property(e => e.GroupName).HasColumnName("GROUP_NAME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsJoin).HasColumnName("IS_JOIN");
            entity.Property(e => e.IsPermission).HasColumnName("IS_PERMISSION");
            entity.Property(e => e.MemberCount).HasColumnName("MEMBER_COUNT");
            entity.Property(e => e.MutualFriend).HasColumnName("MUTUAL_FRIEND");
            entity.Property(e => e.OwnedBot)
                .HasMaxLength(50)
                .HasColumnName("OWNED_BOT");
            entity.Property(e => e.Summary).HasColumnName("SUMMARY");
            entity.Property(e => e.TypeGroup)
                .HasMaxLength(50)
                .HasColumnName("TYPE_GROUP");
        });

        modelBuilder.Entity<CrawlerJobSchedule>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRAWLER_JOB_SCHEDULE");

            entity.Property(e => e.BotCode)
                .HasMaxLength(50)
                .HasColumnName("BOT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JobScCode).HasColumnName("JOB_SC_CODE");
            entity.Property(e => e.JobScDesc).HasColumnName("JOB_SC_DESC");
            entity.Property(e => e.JobScRunTime).HasColumnName("JOB_SC_RUN_TIME");
            entity.Property(e => e.JobScTitle).HasColumnName("JOB_SC_TITLE");
            entity.Property(e => e.JobScType).HasColumnName("JOB_SC_TYPE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
        });

        modelBuilder.Entity<CrawlerKeyword>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRAWLER_KEYWORDS");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KeyWord)
                .HasMaxLength(250)
                .HasColumnName("KEY_WORD");
            entity.Property(e => e.KeyWordGroup)
                .HasMaxLength(250)
                .HasColumnName("KEY_WORD_GROUP");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CrawlerManageIpRunningBot>(entity =>
        {
            entity.ToTable("CRAWLER_MANAGE_IP_RUNNING_BOT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy).HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.IpComputer)
                .HasColumnType("text")
                .HasColumnName("IP_COMPUTER");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PortComputer).HasColumnName("PORT_COMPUTER");
            entity.Property(e => e.RobotCode).HasColumnName("ROBOT_CODE");
            entity.Property(e => e.RobotName).HasColumnName("ROBOT_NAME");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CrawlerRunningLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRAWLER_RUNNING_LOG");

            entity.Property(e => e.BotCode).HasColumnName("BOT_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy).HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.FileDownloadJson).HasColumnName("FILE_DOWNLOAD_JSON");
            entity.Property(e => e.FileResultData).HasColumnName("FILE_RESULT_DATA");
            entity.Property(e => e.FileSizeDownload).HasColumnName("FILE_SIZE_DOWNLOAD");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Ip).HasColumnName("IP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KeyWord).HasColumnName("KEY_WORD");
            entity.Property(e => e.NumOfFile).HasColumnName("NUM_OF_FILE");
            entity.Property(e => e.NumPasscap).HasColumnName("NUM_PASSCAP");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TimeScan).HasColumnName("TIME_SCAN");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UrlScanJson).HasColumnName("URL_SCAN_JSON");
            entity.Property(e => e.UserIdRunning).HasColumnName("USER_ID_RUNNING");
        });

        modelBuilder.Entity<CrawlerSessionContentResult>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_CRAWLER_SESSION_CONTENT_RESULT_1");

            entity.ToTable("CRAWLER_SESSION_CONTENT_RESULT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BotCode)
                .HasMaxLength(255)
                .HasColumnName("BOT_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy).HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KeyWord).HasColumnName("KEY_WORD");
            entity.Property(e => e.KeyWordJson).HasColumnName("KEY_WORD_JSON");
            entity.Property(e => e.LinkPost).HasColumnName("LINK_POST");
            entity.Property(e => e.MediaCrawl).HasColumnName("MEDIA_CRAWL");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.TextContent).HasColumnName("TEXT_CONTENT");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CrawlerSocialNetworkParam>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRAWLER_SOCIAL_NETWORK_PARAM");

            entity.Property(e => e.AccSettingId).HasColumnName("ACC_SETTING_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ParamJsonContent).HasColumnName("PARAM_JSON_CONTENT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CriteriaRecruitmentAttrDatum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRITERIA_RECRUITMENT_ATTR_DATA");

            entity.Property(e => e.AttrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .HasColumnName("ATTR_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PlanNumber)
                .HasMaxLength(255)
                .HasColumnName("PLAN_NUMBER");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CriteriaRecruitmentCat>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CRITERIA__3214EC27E6430169");

            entity.ToTable("CRITERIA_RECRUITMENT_CAT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataType)
                .HasMaxLength(255)
                .HasColumnName("DATA_TYPE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Parent)
                .HasMaxLength(255)
                .HasColumnName("PARENT");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CrudHung>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CRUD_HUNG");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .HasColumnName("LOCATION");
            entity.Property(e => e.Time).HasColumnName("TIME");
            entity.Property(e => e.UserId).HasColumnName("USER_ID");
            entity.Property(e => e.UserSelectId).HasColumnName("USER_SELECT_ID");
        });

        modelBuilder.Entity<Customer>(entity =>
        {
            entity.HasKey(e => e.CusId).HasName("PK__CUSTOMER__373A37B716954C4D");

            entity.ToTable("CUSTOMER");

            entity.Property(e => e.CusId)
                .HasComment("Customer Id")
                .HasColumnName("CUS_ID");
            entity.Property(e => e.AccountBank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACCOUNT_BANK");
            entity.Property(e => e.ActivityStatus)
                .HasMaxLength(100)
                .HasComment("Activity Status")
                .HasColumnName("ACTIVITY_STATUS");
            entity.Property(e => e.Address)
                .HasMaxLength(500)
                .HasComment("Address")
                .HasColumnName("ADDRESS");
            entity.Property(e => e.AddressBank)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS_BANK");
            entity.Property(e => e.Area)
                .HasMaxLength(255)
                .HasColumnName("AREA");
            entity.Property(e => e.BankName)
                .HasMaxLength(255)
                .HasColumnName("BANK_NAME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CusCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Customer Code")
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.CusGroup)
                .HasMaxLength(100)
                .HasComment("Customer Group")
                .HasColumnName("CUS_GROUP");
            entity.Property(e => e.CusName)
                .HasMaxLength(255)
                .HasComment("Customer Name")
                .HasColumnName("CUS_NAME");
            entity.Property(e => e.CusType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CUS_TYPE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasComment("Description")
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Email)
                .HasMaxLength(200)
                .HasComment("Email")
                .HasColumnName("EMAIL");
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Fax")
                .HasColumnName("FAX");
            entity.Property(e => e.FinanceInfo).HasColumnName("FINANCE_INFO");
            entity.Property(e => e.Flag)
                .HasComment("Flag")
                .HasColumnName("FLAG");
            entity.Property(e => e.GoogleMap)
                .HasMaxLength(500)
                .HasColumnName("GOOGLE_MAP");
            entity.Property(e => e.Group)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.HasStock).HasColumnName("HAS_STOCK");
            entity.Property(e => e.IconLevel)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasComment("ICON LEVEL CODE")
                .HasColumnName("ICON_LEVEL");
            entity.Property(e => e.Identification)
                .HasMaxLength(255)
                .HasColumnName("IDENTIFICATION");
            entity.Property(e => e.InAgent)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IN_AGENT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.ListUserView)
                .IsUnicode(false)
                .HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.Logo)
                .HasMaxLength(255)
                .HasColumnName("LOGO");
            entity.Property(e => e.LotName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Birthday")
                .HasColumnName("LOT_NAME");
            entity.Property(e => e.MobilePhone)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("MobilePhone")
                .HasColumnName("MOBILE_PHONE");
            entity.Property(e => e.PersonInCharge)
                .HasMaxLength(255)
                .HasComment("Người phụ trách")
                .HasColumnName("PERSON_IN_CHARGE");
            entity.Property(e => e.Resource)
                .HasMaxLength(255)
                .HasColumnName("RESOURCE");
            entity.Property(e => e.Role)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ROLE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Surrogate)
                .HasMaxLength(255)
                .HasColumnName("SURROGATE");
            entity.Property(e => e.TaxCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TAX_CODE");
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Telephone")
                .HasColumnName("TELEPHONE");
            entity.Property(e => e.TotalStock)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("TOTAL_STOCK");
            entity.Property(e => e.Transport)
                .HasMaxLength(255)
                .HasColumnName("TRANSPORT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZipCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZIP_CODE");
        });

        modelBuilder.Entity<CustomerAppointment>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("CUSTOMER_APPOINTMENT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CustomerCode)
                .HasMaxLength(100)
                .HasColumnName("CUSTOMER_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .HasColumnName("LOCATION");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.RepeatType)
                .HasMaxLength(255)
                .HasColumnName("REPEAT_TYPE");
            entity.Property(e => e.Tags)
                .HasMaxLength(50)
                .HasColumnName("TAGS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CustomerAttribute>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CUSTOMER__3214EC2721BC1C11");

            entity.ToTable("CUSTOMER_ATTRIBUTE");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CusId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CUS_ID");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Label)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("LABEL");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<CustomerExtend>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CUSTOMER__3213E83FE0B913DB");

            entity.ToTable("CUSTOMER_EXTEND");

            entity.Property(e => e.Id)
                .HasComment("Id")
                .HasColumnName("id");
            entity.Property(e => e.CreatedTime)
                .HasComment("Create Time")
                .HasColumnName("created_time");
            entity.Property(e => e.CustomerId)
                .HasComment("Customer Id")
                .HasColumnName("customer_id");
            entity.Property(e => e.ExtCode)
                .HasMaxLength(100)
                .HasComment("Extend Id")
                .HasColumnName("ext_code");
            entity.Property(e => e.ExtGroup)
                .HasMaxLength(255)
                .HasColumnName("ext_group");
            entity.Property(e => e.ExtValue)
                .HasMaxLength(500)
                .HasColumnName("ext_value");
            entity.Property(e => e.Flag)
                .HasComment("Flag")
                .HasColumnName("flag");
            entity.Property(e => e.Isdeleted).HasColumnName("isdeleted");
            entity.Property(e => e.UpdatedTime)
                .HasComment("Update Time")
                .HasColumnName("updated_time");
        });

        modelBuilder.Entity<CustomerFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CUSTOMER__3214EC27B3E75470");

            entity.ToTable("CUSTOMER_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CustomerId).HasColumnName("CUSTOMER_ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
        });

        modelBuilder.Entity<CustomerModuleRequest>(entity =>
        {
            entity.ToTable("CUSTOMER_MODULE_REQUEST");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ModuleCode)
                .HasMaxLength(50)
                .HasColumnName("MODULE_CODE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(50)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<CustomerReminder>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CUSTOMER__3214EC279F291F7B");

            entity.ToTable("CUSTOMER_REMINDER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CustomerId).HasColumnName("CUSTOMER_ID");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ReminderCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("REMINDER_CODE");
            entity.Property(e => e.ReminderTime).HasColumnName("REMINDER_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<CylinkerFuelLoadingDt>(entity =>
        {
            entity.ToTable("CYLINKER_FUEL_LOADING_DT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CylinkerCode)
                .HasMaxLength(255)
                .HasColumnName("CYLINKER_CODE");
            entity.Property(e => e.TankCode)
                .HasMaxLength(255)
                .HasColumnName("TANK_CODE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.Volume)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("VOLUME");
        });

        modelBuilder.Entity<CylinkerFuelLoadingHd>(entity =>
        {
            entity.ToTable("CYLINKER_FUEL_LOADING_HD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Loader)
                .HasMaxLength(255)
                .HasColumnName("LOADER");
            entity.Property(e => e.LoaderTime).HasColumnName("LOADER_TIME");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TicketCreatedTime).HasColumnName("TICKET_CREATED_TIME");
            entity.Property(e => e.TicketCreator)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CREATOR");
            entity.Property(e => e.TicketTitle)
                .HasMaxLength(255)
                .HasColumnName("TICKET_TITLE");
        });

        modelBuilder.Entity<DashboardDataJson>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DASHBOAR__3214EC27420774B8");

            entity.ToTable("DASHBOARD_DATA_JSON");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataJson).HasColumnName("DATA_JSON");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<DashboardDataJsonCopy>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DASHBOAR__3214EC272960E3FB");

            entity.ToTable("DASHBOARD_DATA_JSON_copy");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataJson).HasColumnName("DATA_JSON");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<DatabaseInstance>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DATABASE_INSTANCE");

            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.AddressNet)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS_NET");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Password)
                .HasMaxLength(255)
                .HasColumnName("PASSWORD");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
            entity.Property(e => e.Version)
                .HasMaxLength(255)
                .HasColumnName("VERSION");
        });

        modelBuilder.Entity<DatabaseServer>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DATABASE_SERVER");

            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.AddressNet)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS_NET");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Enabled).HasColumnName("ENABLED");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Password)
                .HasMaxLength(255)
                .HasColumnName("PASSWORD");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<DbVAmchartSocialSessionLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("db.V_AMCHART_SOCIAL_SESSION_LOG");

            entity.Property(e => e.BotSessionResult).HasColumnName("BOT_SESSION_RESULT");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstDay).HasColumnName("LST_DAY");
        });

        modelBuilder.Entity<DecisionBonusDisciplineDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DECISION__3214EC2733A44F27");

            entity.ToTable("DECISION_BONUS_DISCIPLINE_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionNum)
                .HasMaxLength(255)
                .HasColumnName("DECISION_NUM");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(255)
                .HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Money)
                .HasMaxLength(255)
                .HasColumnName("MONEY");
            entity.Property(e => e.Reason)
                .HasMaxLength(255)
                .HasColumnName("REASON");
            entity.Property(e => e.Result)
                .HasMaxLength(255)
                .HasColumnName("RESULT");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<DecisionBonusDisciplineHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DECISION__3214EC27BD7038F2");

            entity.ToTable("DECISION_BONUS_DISCIPLINE_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionNum)
                .HasMaxLength(255)
                .HasColumnName("DECISION_NUM");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.Noted).HasColumnName("NOTED");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<DecisionMovementDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DECISION__3214EC276F3F0F43");

            entity.ToTable("DECISION_MOVEMENT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionNum)
                .HasMaxLength(255)
                .HasColumnName("DECISION_NUM");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EmployeesCode)
                .HasMaxLength(255)
                .HasColumnName("EMPLOYEES_CODE");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FromTime).HasColumnName("FROM_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.NewDepartCode)
                .HasMaxLength(255)
                .HasColumnName("NEW_DEPART_CODE");
            entity.Property(e => e.NewRole)
                .HasMaxLength(255)
                .HasColumnName("NEW_ROLE");
            entity.Property(e => e.PayRanges)
                .HasMaxLength(38)
                .HasColumnName("PAY_RANGES");
            entity.Property(e => e.PayScaleCode)
                .HasMaxLength(255)
                .HasColumnName("PAY_SCALE_CODE");
            entity.Property(e => e.ReasonMovement)
                .HasMaxLength(255)
                .HasColumnName("REASON_MOVEMENT");
            entity.Property(e => e.Salary)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("SALARY");
            entity.Property(e => e.ToTime).HasColumnName("TO_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<DecisionMovementHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DECISION__3214EC27DAAA02B0");

            entity.ToTable("DECISION_MOVEMENT_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionNum)
                .HasMaxLength(255)
                .HasColumnName("DECISION_NUM");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.Noted).HasColumnName("NOTED");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusLog).HasColumnName("STATUS_LOG");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<DeviceMeetingControl>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DEVICE_MEETING_CONTROL");

            entity.Property(e => e.Device)
                .HasMaxLength(50)
                .HasColumnName("DEVICE");
            entity.Property(e => e.DeviceType)
                .HasMaxLength(50)
                .HasColumnName("DEVICE_TYPE");
            entity.Property(e => e.DisplayName)
                .HasMaxLength(50)
                .HasColumnName("DISPLAY_NAME");
            entity.Property(e => e.Host)
                .HasMaxLength(50)
                .HasColumnName("HOST");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IdMeeting)
                .HasMaxLength(50)
                .HasColumnName("ID_MEETING");
            entity.Property(e => e.JoinTime).HasColumnName("JOIN_TIME");
            entity.Property(e => e.LeaveTime).HasColumnName("LEAVE_TIME");
            entity.Property(e => e.Online).HasColumnName("ONLINE");
            entity.Property(e => e.PasswordMeeting)
                .HasMaxLength(255)
                .HasColumnName("PASSWORD_MEETING");
            entity.Property(e => e.SdkKey)
                .HasMaxLength(50)
                .HasColumnName("SDK_KEY");
            entity.Property(e => e.SdkSecret)
                .HasMaxLength(50)
                .HasColumnName("SDK_SECRET");
        });

        modelBuilder.Entity<DispatchesCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DISPATCH__3214EC278779E683");

            entity.ToTable("DISPATCHES_CATEGORY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DocumentSymbol)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DOCUMENT_SYMBOL");
            entity.Property(e => e.DocumentType)
                .HasMaxLength(255)
                .HasColumnName("DOCUMENT_TYPE");
            entity.Property(e => e.ExpriedProcess).HasColumnName("EXPRIED_PROCESS");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsYearBefore).HasColumnName("IS_YEAR_BEFORE");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.NumberCreator).HasColumnName("NUMBER_CREATOR");
            entity.Property(e => e.Type)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.TypeM)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("TYPE_M");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Year).HasColumnName("YEAR");
        });

        modelBuilder.Entity<DispatchesCommentAct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DISPATCH__3214EC2740D8AAC5");

            entity.ToTable("DISPATCHES_COMMENT_ACT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Comment).HasColumnName("COMMENT");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.ProcessCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROCESS_CODE");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<DispatchesFilesAct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DISPATCH__3214EC278296623E");

            entity.ToTable("DISPATCHES_FILES_ACT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileName).HasColumnName("FILE_NAME");
            entity.Property(e => e.Fomart)
                .HasMaxLength(100)
                .HasColumnName("FOMART");
            entity.Property(e => e.ProcessCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROCESS_CODE");
            entity.Property(e => e.Soure).HasColumnName("SOURE");
            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<DispatchesHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DISPATCH__3214EC273934AFC6");

            entity.ToTable("DISPATCHES_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Confidentiality)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CONFIDENTIALITY");
            entity.Property(e => e.CreatedEditor)
                .HasMaxLength(50)
                .HasColumnName("CREATED_EDITOR");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CreatedUserId)
                .HasMaxLength(50)
                .HasColumnName("CREATED_USER_ID");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DispatchCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DISPATCH_CODE");
            entity.Property(e => e.DocumentCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DOCUMENT_CODE");
            entity.Property(e => e.DocumentNumber).HasColumnName("DOCUMENT_NUMBER");
            entity.Property(e => e.DocumentSymbol)
                .HasMaxLength(255)
                .HasColumnName("DOCUMENT_SYMBOL");
            entity.Property(e => e.DocumentSymbols)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DOCUMENT_SYMBOLS");
            entity.Property(e => e.DocumentType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DOCUMENT_TYPE");
            entity.Property(e => e.DocumentZone)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DOCUMENT_ZONE");
            entity.Property(e => e.Epitome)
                .HasMaxLength(1000)
                .HasColumnName("EPITOME");
            entity.Property(e => e.ExperiedReply).HasColumnName("EXPERIED_REPLY");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.GetMothod)
                .HasMaxLength(50)
                .HasColumnName("GET_MOTHOD");
            entity.Property(e => e.ImportantLevel)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("IMPORTANT_LEVEL");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsProcess).HasColumnName("IS_PROCESS");
            entity.Property(e => e.IsQppl).HasColumnName("IS_QPPL");
            entity.Property(e => e.IsReply).HasColumnName("IS_REPLY");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Origanization)
                .HasMaxLength(255)
                .HasColumnName("ORIGANIZATION");
            entity.Property(e => e.Position)
                .HasMaxLength(255)
                .HasColumnName("POSITION");
            entity.Property(e => e.PromulgateDate).HasColumnName("PROMULGATE_DATE");
            entity.Property(e => e.ReplyStatus)
                .HasMaxLength(255)
                .HasColumnName("REPLY_STATUS");
            entity.Property(e => e.SecurityLevel)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SECURITY_LEVEL");
            entity.Property(e => e.SignDate).HasColumnName("SIGN_DATE");
            entity.Property(e => e.SignUser)
                .HasMaxLength(100)
                .HasColumnName("SIGN_USER");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.UnitEditor)
                .HasMaxLength(255)
                .HasColumnName("UNIT_EDITOR");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserEditor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("USER_EDITOR");
            entity.Property(e => e.Year).HasColumnName("YEAR");
        });

        modelBuilder.Entity<DispatchesMemberActivity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DISPATCH__3214EC27E208F6DB");

            entity.ToTable("DISPATCHES_MEMBER_ACTIVITY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssigneeConfirm)
                .HasMaxLength(255)
                .HasColumnName("ASSIGNEE_CONFIRM");
            entity.Property(e => e.Assigner)
                .HasMaxLength(255)
                .HasColumnName("ASSIGNER");
            entity.Property(e => e.Comment)
                .HasMaxLength(2000)
                .HasColumnName("COMMENT");
            entity.Property(e => e.ConfirmTime).HasColumnName("CONFIRM_TIME");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeadLine).HasColumnName("DEAD_LINE");
            entity.Property(e => e.GroupUserCode)
                .HasMaxLength(255)
                .HasColumnName("GROUP_USER_CODE");
            entity.Property(e => e.ProcessCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROCESS_CODE");
            entity.Property(e => e.Role).HasColumnName("ROLE");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<DispatchesTrackingProcess>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DISPATCH__3214EC273E7311B8");

            entity.ToTable("DISPATCHES_TRACKING_PROCESS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACTION");
            entity.Property(e => e.Comment).HasColumnName("COMMENT");
            entity.Property(e => e.Coordinate)
                .HasMaxLength(255)
                .HasColumnName("COORDINATE");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeadLine).HasColumnName("DEAD_LINE");
            entity.Property(e => e.DispatchCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DISPATCH_CODE");
            entity.Property(e => e.FileList).HasColumnName("FILE_LIST");
            entity.Property(e => e.FromNode)
                .HasMaxLength(100)
                .HasColumnName("FROM_NODE");
            entity.Property(e => e.IsUp).HasColumnName("IS_UP");
            entity.Property(e => e.MemberList).HasColumnName("MEMBER_LIST");
            entity.Property(e => e.NodeProars)
                .HasMaxLength(100)
                .HasColumnName("NODE_PROARS");
            entity.Property(e => e.ProcessCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PROCESS_CODE");
            entity.Property(e => e.Reason).HasColumnName("REASON");
            entity.Property(e => e.Received)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("RECEIVED");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Step).HasColumnName("STEP");
            entity.Property(e => e.ToNode)
                .HasMaxLength(255)
                .HasColumnName("TO_NODE");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
            entity.Property(e => e.ViewerList).HasColumnName("VIEWER_LIST");
        });

        modelBuilder.Entity<DispatchesUser>(entity =>
        {
            entity.HasKey(e => e.GroupUserCode).HasName("PK__DISPATCH__707D788F6E45E7B7");

            entity.ToTable("DISPATCHES_USER");

            entity.Property(e => e.GroupUserCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("GROUP_USER_CODE");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<DispatchesWeekWorkingScheduler>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__DISPATCH__3214EC273583AC45");

            entity.ToTable("DISPATCHES_WEEK_WORKING_SCHEDULER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Content)
                .HasMaxLength(500)
                .HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(50)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<DynamicRegistSurvey>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DYNAMIC_REGIST_SURVEY");

            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(255)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("GROUP_NAME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ImageCover)
                .HasMaxLength(1000)
                .HasColumnName("IMAGE_COVER");
            entity.Property(e => e.Prioritized)
                .HasMaxLength(255)
                .HasColumnName("PRIORITIZED");
            entity.Property(e => e.Repeat)
                .HasMaxLength(255)
                .HasColumnName("REPEAT");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SurveyCode)
                .HasMaxLength(255)
                .HasColumnName("SURVEY_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
        });

        modelBuilder.Entity<DynamicRegistSurveyDatum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("DYNAMIC_REGIST_SURVEY_DATA");

            entity.Property(e => e.AttrValue).HasColumnName("ATTR_VALUE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.SurveyCode)
                .HasMaxLength(50)
                .HasColumnName("SURVEY_CODE");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<DynamicSurveyUser>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Dynamic_Survey_User");

            entity.Property(e => e.AttrGroup)
                .HasMaxLength(50)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Note)
                .HasMaxLength(100)
                .HasColumnName("NOTE");
            entity.Property(e => e.Price)
                .HasMaxLength(50)
                .HasColumnName("PRICE");
            entity.Property(e => e.TimeEat)
                .HasMaxLength(50)
                .HasColumnName("TIME_EAT");
        });

        modelBuilder.Entity<EdmsAudioBook>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_AUD__3214EC27754CCB16");

            entity.ToTable("EDMS_AUDIO_BOOK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AudioPath)
                .HasMaxLength(1000)
                .HasColumnName("AUDIO_PATH");
            entity.Property(e => e.FileId).HasColumnName("FILE_ID");
            entity.Property(e => e.Index).HasColumnName("INDEX");
        });

        modelBuilder.Entity<EdmsBox>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_BOX__3214EC2744F1725C");

            entity.ToTable("EDMS_BOX");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoxCode)
                .HasMaxLength(255)
                .HasColumnName("BOX_CODE");
            entity.Property(e => e.BoxSize)
                .HasMaxLength(255)
                .HasColumnName("BOX_SIZE");
            entity.Property(e => e.CntBrief)
                .HasMaxLength(255)
                .HasColumnName("CNT_BRIEF");
            entity.Property(e => e.CntCell)
                .HasMaxLength(255)
                .HasColumnName("CNT_CELL");
            entity.Property(e => e.DepartCode)
                .HasMaxLength(255)
                .HasColumnName("DEPART_CODE");
            entity.Property(e => e.EndTime)
                .HasColumnType("datetime")
                .HasColumnName("END_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.IsStored).HasColumnName("IS_STORED");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.LstMemberId)
                .HasMaxLength(255)
                .HasColumnName("LST_MEMBER_ID");
            entity.Property(e => e.LstTypeProfileId)
                .HasMaxLength(255)
                .HasColumnName("LST_TYPE_PROFILE_ID");
            entity.Property(e => e.MCntBrief)
                .HasMaxLength(255)
                .HasColumnName("M_CNT_BRIEF");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.NumBoxth)
                .HasMaxLength(255)
                .HasColumnName("NUM_BOXTH");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.RcCode)
                .HasMaxLength(255)
                .HasColumnName("RC_CODE");
            entity.Property(e => e.RcExCode)
                .HasMaxLength(255)
                .HasColumnName("RC_EX_CODE");
            entity.Property(e => e.RqCode)
                .HasMaxLength(255)
                .HasColumnName("RQ_CODE");
            entity.Property(e => e.RqExCode)
                .HasMaxLength(255)
                .HasColumnName("RQ_EX_CODE");
            entity.Property(e => e.StartTime)
                .HasColumnType("datetime")
                .HasColumnName("START_TIME");
            entity.Property(e => e.StatusBox)
                .HasMaxLength(255)
                .HasColumnName("STATUS_BOX");
            entity.Property(e => e.StatusSecurity)
                .HasMaxLength(255)
                .HasColumnName("STATUS_SECURITY");
            entity.Property(e => e.StoragePeriod).HasColumnName("STORAGE_PERIOD");
            entity.Property(e => e.StorageTime)
                .HasColumnType("datetime")
                .HasColumnName("STORAGE_TIME");
            entity.Property(e => e.TypeProfile)
                .HasMaxLength(255)
                .HasColumnName("TYPE_PROFILE");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsBoxFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_BOX__3214EC2782B5A1AC");

            entity.ToTable("EDMS_BOX_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoxId).HasColumnName("BOX_ID");
            entity.Property(e => e.FileId).HasColumnName("FILE_ID");
        });

        modelBuilder.Entity<EdmsBoxTracking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_BOX__3214EC2790013E85");

            entity.ToTable("EDMS_BOX_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(255)
                .HasColumnName("ACTION");
            entity.Property(e => e.ActionTime)
                .HasColumnType("datetime")
                .HasColumnName("ACTION_TIME");
            entity.Property(e => e.BoxCode)
                .HasMaxLength(255)
                .HasColumnName("BOX_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime)
                .HasColumnType("datetime")
                .HasColumnName("CREATED_TIME");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.PositionBox)
                .HasMaxLength(255)
                .HasColumnName("POSITION_BOX");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime)
                .HasColumnType("datetime")
                .HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsCatRepoSetting>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_CAT__3214EC27353DDB1D");

            entity.ToTable("EDMS_CAT_REPO_SETTING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CatCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.FolderId)
                .HasMaxLength(255)
                .HasColumnName("FOLDER_ID");
            entity.Property(e => e.FolderName)
                .HasMaxLength(255)
                .HasColumnName("FOLDER_NAME");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.ReposCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("REPOS_CODE");
        });

        modelBuilder.Entity<EdmsCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_CAT__3214EC27316D4A39");

            entity.ToTable("EDMS_CATEGORY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CatCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CatName)
                .HasMaxLength(255)
                .HasColumnName("CAT_NAME");
            entity.Property(e => e.CatParent)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CAT_PARENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ModuleFileUploadDefault)
                .HasMaxLength(255)
                .HasColumnName("MODULE_FILE_UPLOAD_DEFAULT");
            entity.Property(e => e.PathServerPhysic)
                .HasMaxLength(255)
                .HasColumnName("PATH_SERVER_PHYSIC");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsEntityMapping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_ENT__3214EC07976087E3");

            entity.ToTable("EDMS_ENTITY_MAPPING");

            entity.Property(e => e.BoxCode)
                .HasMaxLength(255)
                .HasColumnName("BOX_CODE");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsEntityMappingAsset>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_ENT__3214EC075E5CE1B3");

            entity.ToTable("EDMS_ENTITY_MAPPING_ASSET");

            entity.Property(e => e.BoxCode)
                .HasMaxLength(255)
                .HasColumnName("BOX_CODE");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsEntityMappingDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_ENT__3214EC071647BDD6");

            entity.ToTable("EDMS_ENTITY_MAPPING_DOCUMENT");

            entity.Property(e => e.BoxCode)
                .HasMaxLength(255)
                .HasColumnName("BOX_CODE");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsFile>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EDMS_FILES");

            entity.Property(e => e.AudioBook)
                .HasMaxLength(1000)
                .HasColumnName("AUDIO_BOOK");
            entity.Property(e => e.CloudFileId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CLOUD_FILE_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Desc).HasColumnName("DESC");
            entity.Property(e => e.EditedFileBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("EDITED_FILE_BY");
            entity.Property(e => e.EditedFileTime).HasColumnName("EDITED_FILE_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileId)
                .ValueGeneratedOnAdd()
                .HasComment("Customer Id")
                .HasColumnName("FILE_ID");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FileParentId).HasColumnName("FILE_PARENT_ID");
            entity.Property(e => e.FileSize)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("FILE_SIZE");
            entity.Property(e => e.FileTypePhysic)
                .HasMaxLength(255)
                .HasColumnName("FILE_TYPE_PHYSIC");
            entity.Property(e => e.FileTypeWork)
                .HasMaxLength(255)
                .HasColumnName("FILE_TYPE_WORK");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEdit).HasColumnName("IS_EDIT");
            entity.Property(e => e.IsFileMaster).HasColumnName("IS_FILE_MASTER");
            entity.Property(e => e.IsFileOrigin).HasColumnName("IS_FILE_ORIGIN");
            entity.Property(e => e.IsScan).HasColumnName("IS_SCAN");
            entity.Property(e => e.IsSearchIndex).HasColumnName("IS_SEARCH_INDEX");
            entity.Property(e => e.ListUserView).HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.MetaDataExt).HasColumnName("META_DATA_EXT");
            entity.Property(e => e.MimeType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MIME_TYPE");
            entity.Property(e => e.NumberDocument)
                .HasMaxLength(50)
                .HasColumnName("NUMBER_DOCUMENT");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE");
            entity.Property(e => e.QrCode).HasColumnName("QR_CODE");
            entity.Property(e => e.ReposCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("REPOS_CODE");
            entity.Property(e => e.Tags).HasColumnName("TAGS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Url)
                .HasMaxLength(255)
                .HasColumnName("URL");
        });

        modelBuilder.Entity<EdmsFilePackCover>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OBJECTIV__3214EC2752EA176C");

            entity.ToTable("EDMS_FILE_PACK_COVER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjPackCode)
                .HasMaxLength(100)
                .HasColumnName("OBJ_PACK_CODE");
            entity.Property(e => e.RackCode)
                .HasMaxLength(100)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(100)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsFilePackCoverAsset>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_FIL__3214EC27479009C0");

            entity.ToTable("EDMS_FILE_PACK_COVER_ASSET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjPackCode)
                .HasMaxLength(100)
                .HasColumnName("OBJ_PACK_CODE");
            entity.Property(e => e.RackCode)
                .HasMaxLength(100)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(100)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsFilePermission>(entity =>
        {
            entity.HasKey(e => e.PermissionId).HasName("PK__EDMS_FIL__EB3C611EE97760EE");

            entity.ToTable("EDMS_FILE_PERMISSION");

            entity.Property(e => e.PermissionId)
                .HasComment("Customer Id")
                .HasColumnName("PERMISSION_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MemberId).HasColumnName("MEMBER_ID");
            entity.Property(e => e.Permission)
                .HasMaxLength(100)
                .HasColumnName("PERMISSION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsFloor>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_FLO__3214EC27C7749C40");

            entity.ToTable("EDMS_FLOOR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AreaSquare)
                .HasMaxLength(255)
                .HasColumnName("AREA_SQUARE");
            entity.Property(e => e.CntLine).HasColumnName("CNT_LINE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.FloorName)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_NAME");
            entity.Property(e => e.Humidity)
                .HasMaxLength(255)
                .HasColumnName("HUMIDITY");
            entity.Property(e => e.Image).HasColumnName("IMAGE");
            entity.Property(e => e.ManagerId)
                .HasMaxLength(255)
                .HasColumnName("MANAGER_ID");
            entity.Property(e => e.MapDesgin).HasColumnName("MAP_DESGIN");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.QrCode).HasColumnName("QR_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Temperature)
                .HasMaxLength(255)
                .HasColumnName("TEMPERATURE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsFloorAsset>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_FLO__3214EC27C6B43189");

            entity.ToTable("EDMS_FLOOR_ASSET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AreaSquare)
                .HasMaxLength(255)
                .HasColumnName("AREA_SQUARE");
            entity.Property(e => e.CntLine).HasColumnName("CNT_LINE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.FloorName)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_NAME");
            entity.Property(e => e.Humidity)
                .HasMaxLength(255)
                .HasColumnName("HUMIDITY");
            entity.Property(e => e.Image).HasColumnName("IMAGE");
            entity.Property(e => e.ManagerId)
                .HasMaxLength(255)
                .HasColumnName("MANAGER_ID");
            entity.Property(e => e.MapDesgin).HasColumnName("MAP_DESGIN");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.QrCode).HasColumnName("QR_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Temperature)
                .HasMaxLength(255)
                .HasColumnName("TEMPERATURE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsFloorDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_FLO__3214EC272B50CC77");

            entity.ToTable("EDMS_FLOOR_DOCUMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AreaSquare)
                .HasMaxLength(255)
                .HasColumnName("AREA_SQUARE");
            entity.Property(e => e.CntLine).HasColumnName("CNT_LINE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.FloorName)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_NAME");
            entity.Property(e => e.Humidity)
                .HasMaxLength(255)
                .HasColumnName("HUMIDITY");
            entity.Property(e => e.Image).HasColumnName("IMAGE");
            entity.Property(e => e.ManagerId)
                .HasMaxLength(255)
                .HasColumnName("MANAGER_ID");
            entity.Property(e => e.MapDesgin).HasColumnName("MAP_DESGIN");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.QrCode).HasColumnName("QR_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Temperature)
                .HasMaxLength(255)
                .HasColumnName("TEMPERATURE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsLine>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_LIN__3214EC27B1D7E8CB");

            entity.ToTable("EDMS_LINE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CntRack).HasColumnName("CNT_RACK");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.LColor)
                .HasMaxLength(255)
                .HasColumnName("L_COLOR");
            entity.Property(e => e.LPosition)
                .HasMaxLength(255)
                .HasColumnName("L_POSITION");
            entity.Property(e => e.LSize)
                .HasMaxLength(255)
                .HasColumnName("L_SIZE");
            entity.Property(e => e.LStatus)
                .HasMaxLength(255)
                .HasColumnName("L_STATUS");
            entity.Property(e => e.LText)
                .HasMaxLength(255)
                .HasColumnName("L_TEXT");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsLineAsset>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_LIN__3214EC27426EB753");

            entity.ToTable("EDMS_LINE_ASSET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CntRack).HasColumnName("CNT_RACK");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.LColor)
                .HasMaxLength(255)
                .HasColumnName("L_COLOR");
            entity.Property(e => e.LPosition)
                .HasMaxLength(255)
                .HasColumnName("L_POSITION");
            entity.Property(e => e.LSize)
                .HasMaxLength(255)
                .HasColumnName("L_SIZE");
            entity.Property(e => e.LStatus)
                .HasMaxLength(255)
                .HasColumnName("L_STATUS");
            entity.Property(e => e.LText)
                .HasMaxLength(255)
                .HasColumnName("L_TEXT");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsLineDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_LIN__3214EC272577A469");

            entity.ToTable("EDMS_LINE_DOCUMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CntRack).HasColumnName("CNT_RACK");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.LColor)
                .HasMaxLength(255)
                .HasColumnName("L_COLOR");
            entity.Property(e => e.LPosition)
                .HasMaxLength(255)
                .HasColumnName("L_POSITION");
            entity.Property(e => e.LSize)
                .HasMaxLength(255)
                .HasColumnName("L_SIZE");
            entity.Property(e => e.LStatus)
                .HasMaxLength(255)
                .HasColumnName("L_STATUS");
            entity.Property(e => e.LText)
                .HasMaxLength(255)
                .HasColumnName("L_TEXT");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsMoveBoxLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_MOV__3214EC275C283495");

            entity.ToTable("EDMS_MOVE_BOX_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoxCode)
                .HasMaxLength(255)
                .HasColumnName("BOX_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.RackCodeNew)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE_NEW");
            entity.Property(e => e.RackCodeOld)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE_OLD");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
        });

        modelBuilder.Entity<EdmsMoveBoxLogDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_MOV__3214EC27F17317A4");

            entity.ToTable("EDMS_MOVE_BOX_LOG_DOCUMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoxCode)
                .HasMaxLength(255)
                .HasColumnName("BOX_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.RackCodeNew)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE_NEW");
            entity.Property(e => e.RackCodeOld)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE_OLD");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
        });

        modelBuilder.Entity<EdmsMoveProductLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_MOV__3214EC27FA9839A4");

            entity.ToTable("EDMS_MOVE_PRODUCT_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCodeOld)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE_OLD");
            entity.Property(e => e.LineCodeOld)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE_OLD");
            entity.Property(e => e.MappingId).HasColumnName("MAPPING_ID");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.RackCodeNew)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE_NEW");
            entity.Property(e => e.RackCodeOld)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE_OLD");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
        });

        modelBuilder.Entity<EdmsObjectShareFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FILE_OBJ__3214EC27DFFF8906_copy1");

            entity.ToTable("EDMS_OBJECT_SHARE_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectCodeShared)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE_SHARED");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.ObjectTypeShared)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE_SHARED");
            entity.Property(e => e.Permission)
                .HasMaxLength(255)
                .HasColumnName("PERMISSION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsRack>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_RAC__3214EC27B7A9ACBE");

            entity.ToTable("EDMS_RACK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CntBox).HasColumnName("CNT_BOX");
            entity.Property(e => e.CntCell)
                .HasMaxLength(255)
                .HasColumnName("CNT_CELL");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Material)
                .HasMaxLength(255)
                .HasColumnName("MATERIAL");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RPosition)
                .HasMaxLength(255)
                .HasColumnName("R_POSITION");
            entity.Property(e => e.RSize)
                .HasMaxLength(255)
                .HasColumnName("R_SIZE");
            entity.Property(e => e.RStatus)
                .HasMaxLength(255)
                .HasColumnName("R_STATUS");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackName)
                .HasMaxLength(255)
                .HasColumnName("RACK_NAME");
        });

        modelBuilder.Entity<EdmsRackAsset>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_RAC__3214EC27C0466C8A");

            entity.ToTable("EDMS_RACK_ASSET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CntBox).HasColumnName("CNT_BOX");
            entity.Property(e => e.CntCell)
                .HasMaxLength(255)
                .HasColumnName("CNT_CELL");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Material)
                .HasMaxLength(255)
                .HasColumnName("MATERIAL");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RSize)
                .HasMaxLength(255)
                .HasColumnName("R_SIZE");
            entity.Property(e => e.RStatus)
                .HasMaxLength(255)
                .HasColumnName("R_STATUS");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackName)
                .HasMaxLength(255)
                .HasColumnName("RACK_NAME");
        });

        modelBuilder.Entity<EdmsRackDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_RAC__3214EC270A018663");

            entity.ToTable("EDMS_RACK_DOCUMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CntBox).HasColumnName("CNT_BOX");
            entity.Property(e => e.CntCell)
                .HasMaxLength(255)
                .HasColumnName("CNT_CELL");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Material)
                .HasMaxLength(255)
                .HasColumnName("MATERIAL");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RSize)
                .HasMaxLength(255)
                .HasColumnName("R_SIZE");
            entity.Property(e => e.RStatus)
                .HasMaxLength(255)
                .HasColumnName("R_STATUS");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackName)
                .HasMaxLength(255)
                .HasColumnName("RACK_NAME");
        });

        modelBuilder.Entity<EdmsReceiptExportFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REC__3214EC27B6F2BF9B");

            entity.ToTable("EDMS_RECEIPT_EXPORT_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileId).HasColumnName("FILE_ID");
            entity.Property(e => e.RecId).HasColumnName("REC_ID");
        });

        modelBuilder.Entity<EdmsReceiptExportStore>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REC__3214EC074929FCCB");

            entity.ToTable("EDMS_RECEIPT_EXPORT_STORE");

            entity.Property(e => e.BrCode)
                .HasMaxLength(255)
                .HasColumnName("BR_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DocType)
                .HasMaxLength(255)
                .HasColumnName("DOC_TYPE");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.NumBox)
                .HasMaxLength(255)
                .HasColumnName("NUM_BOX");
            entity.Property(e => e.PersonReceiver)
                .HasMaxLength(255)
                .HasColumnName("PERSON_RECEIVER");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RcStatus)
                .HasMaxLength(255)
                .HasColumnName("RC_STATUS");
            entity.Property(e => e.RcSupport)
                .HasMaxLength(255)
                .HasColumnName("RC_SUPPORT");
            entity.Property(e => e.RcTicketCode)
                .HasMaxLength(255)
                .HasColumnName("RC_TICKET_CODE");
            entity.Property(e => e.Reason)
                .HasMaxLength(255)
                .HasColumnName("REASON");
            entity.Property(e => e.RqId).HasColumnName("RQ_ID");
            entity.Property(e => e.RqType)
                .HasMaxLength(255)
                .HasColumnName("RQ_TYPE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
            entity.Property(e => e.WhsUser)
                .HasMaxLength(255)
                .HasColumnName("WHS_USER");
        });

        modelBuilder.Entity<EdmsReceiptInputFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REC__3214EC27025EB842");

            entity.ToTable("EDMS_RECEIPT_INPUT_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileId).HasColumnName("FILE_ID");
            entity.Property(e => e.RecId).HasColumnName("REC_ID");
        });

        modelBuilder.Entity<EdmsReceiptInputStore>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REC__3214EC07DE13F52A");

            entity.ToTable("EDMS_RECEIPT_INPUT_STORE");

            entity.Property(e => e.BrCode)
                .HasMaxLength(255)
                .HasColumnName("BR_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DocType)
                .HasMaxLength(255)
                .HasColumnName("DOC_TYPE");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.NumBox)
                .HasMaxLength(255)
                .HasColumnName("NUM_BOX");
            entity.Property(e => e.PersonSender)
                .HasMaxLength(255)
                .HasColumnName("PERSON_SENDER");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RcStatus)
                .HasMaxLength(255)
                .HasColumnName("RC_STATUS");
            entity.Property(e => e.RcSupport)
                .HasMaxLength(255)
                .HasColumnName("RC_SUPPORT");
            entity.Property(e => e.RcTicketCode)
                .HasMaxLength(255)
                .HasColumnName("RC_TICKET_CODE");
            entity.Property(e => e.RqId).HasColumnName("RQ_ID");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
            entity.Property(e => e.WhsUser)
                .HasMaxLength(255)
                .HasColumnName("WHS_USER");
        });

        modelBuilder.Entity<EdmsRemove>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REM__3214EC27E39B7A27");

            entity.ToTable("EDMS_REMOVE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Business)
                .HasMaxLength(255)
                .HasColumnName("BUSINESS");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.PersonProcessor)
                .HasMaxLength(255)
                .HasColumnName("PERSON_PROCESSOR");
            entity.Property(e => e.Picture)
                .HasMaxLength(255)
                .HasColumnName("PICTURE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsRemoveBox>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REM__3214EC27A772694E");

            entity.ToTable("EDMS_REMOVE_BOX");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoxId).HasColumnName("BOX_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.RemoveId).HasColumnName("REMOVE_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsRepoCatFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REP__3214EC273CDEFCE5");

            entity.ToTable("EDMS_REPO_CAT_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CatCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FolderId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FOLDER_ID");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.ReposCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("REPOS_CODE");
        });

        modelBuilder.Entity<EdmsRepoDefaultObject>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REP__3214EC27DCAAA8A3");

            entity.ToTable("EDMS_REPO_DEFAULT_OBJECT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CatCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CatRepoSettingId).HasColumnName("CAT_REPO_SETTING_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FolderId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FOLDER_ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.ReposCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("REPOS_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsRepository>(entity =>
        {
            entity.HasKey(e => e.ReposId).HasName("PK__EDMS_REP__B9E464AF38BD7B5C_copy1");

            entity.ToTable("EDMS_REPOSITORY");

            entity.Property(e => e.ReposId)
                .HasComment("Customer Id")
                .HasColumnName("REPOS_ID");
            entity.Property(e => e.Account)
                .HasMaxLength(50)
                .HasColumnName("ACCOUNT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DelEtedTime).HasColumnName("DElETED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.Desc)
                .HasMaxLength(500)
                .HasColumnName("DESC");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Parent)
                .HasMaxLength(100)
                .HasColumnName("PARENT");
            entity.Property(e => e.PassWord)
                .HasMaxLength(255)
                .IsUnicode(false)
                .UseCollation("SQL_Latin1_General_CP850_BIN")
                .HasColumnName("PASS_WORD");
            entity.Property(e => e.ReposCode)
                .HasMaxLength(100)
                .HasColumnName("REPOS_CODE");
            entity.Property(e => e.ReposName)
                .HasMaxLength(255)
                .HasColumnName("REPOS_NAME");
            entity.Property(e => e.Server)
                .HasMaxLength(255)
                .HasColumnName("SERVER");
            entity.Property(e => e.Token)
                .HasMaxLength(255)
                .HasColumnName("TOKEN");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsRequestEndBox>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REQ__3214EC078350DBA9");

            entity.ToTable("EDMS_REQUEST_END_BOX");

            entity.Property(e => e.BoxCode)
                .HasMaxLength(255)
                .HasColumnName("BOX_CODE");
            entity.Property(e => e.RqCode)
                .HasMaxLength(255)
                .HasColumnName("RQ_CODE");
        });

        modelBuilder.Entity<EdmsRequestExportFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REQ__3214EC2707443E12");

            entity.ToTable("EDMS_REQUEST_EXPORT_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileId).HasColumnName("FILE_ID");
            entity.Property(e => e.ReqId).HasColumnName("REQ_ID");
        });

        modelBuilder.Entity<EdmsRequestExportStore>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REQ__3214EC078506BA69");

            entity.ToTable("EDMS_REQUEST_EXPORT_STORE");

            entity.Property(e => e.BrCode)
                .HasMaxLength(255)
                .HasColumnName("BR_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DocType)
                .HasMaxLength(255)
                .HasColumnName("DOC_TYPE");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.NumBox)
                .HasMaxLength(255)
                .HasColumnName("NUM_BOX");
            entity.Property(e => e.PersonRequest)
                .HasMaxLength(255)
                .HasColumnName("PERSON_REQUEST");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RcStatus)
                .HasMaxLength(255)
                .HasColumnName("RC_STATUS");
            entity.Property(e => e.RcSupport)
                .HasMaxLength(255)
                .HasColumnName("RC_SUPPORT");
            entity.Property(e => e.RcTicketCode)
                .HasMaxLength(255)
                .HasColumnName("RC_TICKET_CODE");
            entity.Property(e => e.Reason)
                .HasMaxLength(255)
                .HasColumnName("REASON");
            entity.Property(e => e.RqId).HasColumnName("RQ_ID");
            entity.Property(e => e.RqType)
                .HasMaxLength(255)
                .HasColumnName("RQ_TYPE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
            entity.Property(e => e.WhsUser)
                .HasMaxLength(255)
                .HasColumnName("WHS_USER");
        });

        modelBuilder.Entity<EdmsRequestFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REQ__3214EC27E9EA2745");

            entity.ToTable("EDMS_REQUEST_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileId).HasColumnName("FILE_ID");
            entity.Property(e => e.ReqId).HasColumnName("REQ_ID");
        });

        modelBuilder.Entity<EdmsRequestInputFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REQ__3214EC272C1E56E6");

            entity.ToTable("EDMS_REQUEST_INPUT_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileId).HasColumnName("FILE_ID");
            entity.Property(e => e.ReqId).HasColumnName("REQ_ID");
        });

        modelBuilder.Entity<EdmsRequestInputStore>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REQ__3214EC070314C6BC");

            entity.ToTable("EDMS_REQUEST_INPUT_STORE");

            entity.Property(e => e.BrCode)
                .HasMaxLength(255)
                .HasColumnName("BR_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DocType)
                .HasMaxLength(255)
                .HasColumnName("DOC_TYPE");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.NumBox)
                .HasMaxLength(255)
                .HasColumnName("NUM_BOX");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RqStatus)
                .HasMaxLength(255)
                .HasColumnName("RQ_STATUS");
            entity.Property(e => e.RqSupport)
                .HasMaxLength(255)
                .HasColumnName("RQ_SUPPORT");
            entity.Property(e => e.RqTicketCode)
                .HasMaxLength(255)
                .HasColumnName("RQ_TICKET_CODE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
            entity.Property(e => e.WhsUser)
                .HasMaxLength(255)
                .HasColumnName("WHS_USER");
        });

        modelBuilder.Entity<EdmsRequestTracking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_REQ__3214EC2724BB3B06");

            entity.ToTable("EDMS_REQUEST_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BrCode)
                .HasMaxLength(255)
                .HasColumnName("BR_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Reason)
                .HasMaxLength(255)
                .HasColumnName("REASON");
            entity.Property(e => e.RqId).HasColumnName("RQ_ID");
            entity.Property(e => e.RqStatus)
                .HasMaxLength(255)
                .HasColumnName("RQ_STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsTermite>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_TER__3214EC2718C225BA");

            entity.ToTable("EDMS_TERMITE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Business)
                .HasMaxLength(255)
                .HasColumnName("BUSINESS");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.PersonProcessor)
                .HasMaxLength(255)
                .HasColumnName("PERSON_PROCESSOR");
            entity.Property(e => e.Picture)
                .HasMaxLength(255)
                .HasColumnName("PICTURE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsTermiteBox>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_TER__3214EC27A30F3F37");

            entity.ToTable("EDMS_TERMITE_BOX");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoxId).HasColumnName("BOX_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.TermiteId).HasColumnName("TERMITE_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsTimeOfDocumentPreservation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_TIM__3214EC27B33ECD82");

            entity.ToTable("EDMS_TIME_OF_DOCUMENT_PRESERVATION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CodeTableCommon)
                .HasMaxLength(100)
                .HasColumnName("CODE_TABLE_COMMON");
            entity.Property(e => e.GroupLevel1)
                .HasMaxLength(255)
                .HasColumnName("GROUP_LEVEL1");
            entity.Property(e => e.GroupLevel2)
                .HasMaxLength(255)
                .HasColumnName("GROUP_LEVEL2");
            entity.Property(e => e.GroupLevel3)
                .HasMaxLength(255)
                .HasColumnName("GROUP_LEVEL3");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.StorageTimeLimit).HasColumnName("STORAGE_TIME_LIMIT");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("TITLE");
            entity.Property(e => e.TitleFull)
                .HasMaxLength(1500)
                .HasColumnName("TITLE_FULL");
            entity.Property(e => e.TypeLevel1)
                .HasMaxLength(500)
                .HasColumnName("TYPE_LEVEL1");
            entity.Property(e => e.TypeLevel2)
                .HasMaxLength(255)
                .HasColumnName("TYPE_LEVEL2");
        });

        modelBuilder.Entity<EdmsTimeOfDocumentPreservationCommon>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_TIM__3214EC27242E6D08");

            entity.ToTable("EDMS_TIME_OF_DOCUMENT_PRESERVATION_COMMON");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.GroupLevel1)
                .HasMaxLength(255)
                .HasColumnName("GROUP_LEVEL1");
            entity.Property(e => e.GroupLevel2)
                .HasMaxLength(255)
                .HasColumnName("GROUP_LEVEL2");
            entity.Property(e => e.GroupLevel3)
                .HasMaxLength(255)
                .HasColumnName("GROUP_LEVEL3");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.StorageTimeLimit).HasColumnName("STORAGE_TIME_LIMIT");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("TITLE");
            entity.Property(e => e.TitleFull)
                .HasMaxLength(1500)
                .HasColumnName("TITLE_FULL");
            entity.Property(e => e.TypeLevel1)
                .HasMaxLength(500)
                .HasColumnName("TYPE_LEVEL1");
            entity.Property(e => e.TypeLevel2)
                .HasMaxLength(255)
                .HasColumnName("TYPE_LEVEL2");
        });

        modelBuilder.Entity<EdmsWarehouse>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WAR__3214EC271D0C9EB3");

            entity.ToTable("EDMS_WAREHOUSE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.ImgWhs)
                .HasMaxLength(255)
                .HasColumnName("IMG_WHS");
            entity.Property(e => e.ManagerId)
                .HasMaxLength(50)
                .HasColumnName("MANAGER_ID");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasComment("PRODUCT(PR), RECORD_VOUCHER (RV)")
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsAddrGps)
                .HasMaxLength(255)
                .HasColumnName("WHS_ADDR_GPS");
            entity.Property(e => e.WhsAddrText)
                .HasMaxLength(255)
                .HasColumnName("WHS_ADDR_TEXT");
            entity.Property(e => e.WhsAreaSquare)
                .HasMaxLength(255)
                .HasColumnName("WHS_AREA_SQUARE");
            entity.Property(e => e.WhsAvatar)
                .HasMaxLength(255)
                .HasColumnName("WHS_AVATAR");
            entity.Property(e => e.WhsCntFloor).HasColumnName("WHS_CNT_FLOOR");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
            entity.Property(e => e.WhsDesginMap)
                .HasMaxLength(255)
                .HasColumnName("WHS_DESGIN_MAP");
            entity.Property(e => e.WhsFlag).HasColumnName("WHS_FLAG");
            entity.Property(e => e.WhsName)
                .HasMaxLength(255)
                .HasColumnName("WHS_NAME");
            entity.Property(e => e.WhsNote).HasColumnName("WHS_NOTE");
            entity.Property(e => e.WhsStatus)
                .HasMaxLength(255)
                .HasColumnName("WHS_STATUS");
            entity.Property(e => e.WhsTags)
                .HasMaxLength(500)
                .HasColumnName("WHS_TAGS");
        });

        modelBuilder.Entity<EdmsWarehouseAsset>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WAR__3214EC2773543982");

            entity.ToTable("EDMS_WAREHOUSE_ASSET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.ImgWhs)
                .HasMaxLength(255)
                .HasColumnName("IMG_WHS");
            entity.Property(e => e.ManagerId)
                .HasMaxLength(50)
                .HasColumnName("MANAGER_ID");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasComment("PRODUCT(PR), RECORD_VOUCHER (RV)")
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsAddrGps)
                .HasMaxLength(255)
                .HasColumnName("WHS_ADDR_GPS");
            entity.Property(e => e.WhsAddrText)
                .HasMaxLength(255)
                .HasColumnName("WHS_ADDR_TEXT");
            entity.Property(e => e.WhsAreaSquare)
                .HasMaxLength(255)
                .HasColumnName("WHS_AREA_SQUARE");
            entity.Property(e => e.WhsAvatar)
                .HasMaxLength(255)
                .HasColumnName("WHS_AVATAR");
            entity.Property(e => e.WhsCntFloor).HasColumnName("WHS_CNT_FLOOR");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
            entity.Property(e => e.WhsDesginMap)
                .HasMaxLength(255)
                .HasColumnName("WHS_DESGIN_MAP");
            entity.Property(e => e.WhsFlag).HasColumnName("WHS_FLAG");
            entity.Property(e => e.WhsName)
                .HasMaxLength(255)
                .HasColumnName("WHS_NAME");
            entity.Property(e => e.WhsNote).HasColumnName("WHS_NOTE");
            entity.Property(e => e.WhsStatus)
                .HasMaxLength(255)
                .HasColumnName("WHS_STATUS");
            entity.Property(e => e.WhsTags)
                .HasMaxLength(500)
                .HasColumnName("WHS_TAGS");
        });

        modelBuilder.Entity<EdmsWarehouseDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WAR__3214EC27F3BAB4FC");

            entity.ToTable("EDMS_WAREHOUSE_DOCUMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.ImgWhs)
                .HasMaxLength(255)
                .HasColumnName("IMG_WHS");
            entity.Property(e => e.ManagerId)
                .HasMaxLength(50)
                .HasColumnName("MANAGER_ID");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasComment("PRODUCT(PR), RECORD_VOUCHER (RV)")
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsAddrGps)
                .HasMaxLength(255)
                .HasColumnName("WHS_ADDR_GPS");
            entity.Property(e => e.WhsAddrText)
                .HasMaxLength(255)
                .HasColumnName("WHS_ADDR_TEXT");
            entity.Property(e => e.WhsAreaSquare)
                .HasMaxLength(255)
                .HasColumnName("WHS_AREA_SQUARE");
            entity.Property(e => e.WhsAvatar)
                .HasMaxLength(255)
                .HasColumnName("WHS_AVATAR");
            entity.Property(e => e.WhsCntFloor).HasColumnName("WHS_CNT_FLOOR");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
            entity.Property(e => e.WhsDesginMap)
                .HasMaxLength(255)
                .HasColumnName("WHS_DESGIN_MAP");
            entity.Property(e => e.WhsFlag).HasColumnName("WHS_FLAG");
            entity.Property(e => e.WhsName)
                .HasMaxLength(255)
                .HasColumnName("WHS_NAME");
            entity.Property(e => e.WhsNote).HasColumnName("WHS_NOTE");
            entity.Property(e => e.WhsParentCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_PARENT_CODE");
            entity.Property(e => e.WhsStatus)
                .HasMaxLength(255)
                .HasColumnName("WHS_STATUS");
            entity.Property(e => e.WhsTags)
                .HasMaxLength(500)
                .HasColumnName("WHS_TAGS");
        });

        modelBuilder.Entity<EdmsWarehouseExtend>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WAR__3214EC273E035016");

            entity.ToTable("EDMS_WAREHOUSE_EXTEND");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.ExtCode)
                .HasMaxLength(100)
                .HasColumnName("EXT_CODE");
            entity.Property(e => e.ExtGroup)
                .HasMaxLength(255)
                .HasColumnName("EXT_GROUP");
            entity.Property(e => e.ExtValue)
                .HasMaxLength(500)
                .HasColumnName("EXT_VALUE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(100)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsWarehouseMedium>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WAR__3214EC27BE273B25");

            entity.ToTable("EDMS_WAREHOUSE_MEDIA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(100)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsWarehouseUser>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WAR__3214EC2764F89795");

            entity.ToTable("EDMS_WAREHOUSE_USERS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.EndTime)
                .HasColumnType("datetime")
                .HasColumnName("END_TIME");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Role)
                .HasMaxLength(255)
                .HasColumnName("ROLE");
            entity.Property(e => e.StartTime)
                .HasColumnType("datetime")
                .HasColumnName("START_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .HasColumnName("USER_ID");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<EdmsWhsMedium>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WHS__3214EC276DAA2FFB");

            entity.ToTable("EDMS_WHS_MEDIA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileExt)
                .HasMaxLength(255)
                .HasColumnName("FILE_EXT");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileSite)
                .HasMaxLength(255)
                .HasColumnName("FILE_SITE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
        });

        modelBuilder.Entity<EdmsWhsQrcode>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WHS__3214EC0712859372");

            entity.ToTable("EDMS_WHS_QRCODE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.PrintNumber).HasColumnName("PRINT_NUMBER");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RackPosition).HasColumnName("RACK_POSITION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsWhsQrcodeAsset>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WHS__3214EC075F587B62");

            entity.ToTable("EDMS_WHS_QRCODE_ASSET");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.PrintNumber).HasColumnName("PRINT_NUMBER");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RackPosition).HasColumnName("RACK_POSITION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EdmsWhsQrcodeDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDMS_WHS__3214EC072EBF814C");

            entity.ToTable("EDMS_WHS_QRCODE_DOCUMENT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.PrintNumber).HasColumnName("PRINT_NUMBER");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RackPosition).HasColumnName("RACK_POSITION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EduCategory>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CATEGORY__3213E83FCB6C5079");

            entity.ToTable("EDU_CATEGORY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Access).HasColumnName("ACCESS");
            entity.Property(e => e.Alias)
                .HasMaxLength(255)
                .HasColumnName("ALIAS");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.ExtraFieldsGroup).HasColumnName("EXTRA_FIELDS_GROUP");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.Language)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("LANGUAGE");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Ordering).HasColumnName("ORDERING");
            entity.Property(e => e.Params).HasColumnName("PARAMS");
            entity.Property(e => e.Parent).HasColumnName("PARENT");
            entity.Property(e => e.Plugins).HasColumnName("PLUGINS");
            entity.Property(e => e.Published).HasColumnName("PUBLISHED");
            entity.Property(e => e.Template)
                .HasMaxLength(255)
                .HasColumnName("TEMPLATE");
            entity.Property(e => e.Trash).HasColumnName("TRASH");
        });

        modelBuilder.Entity<EduExamination>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EDU_EXAMINATION");

            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Duration).HasColumnName("DURATION");
            entity.Property(e => e.ExamInheritance)
                .HasMaxLength(255)
                .HasColumnName("EXAM_INHERITANCE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EduExaminationDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EDU_EXAMINATION_DETAIL");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ExamCode)
                .HasMaxLength(100)
                .HasColumnName("EXAM_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.QuestionCode)
                .HasMaxLength(255)
                .HasColumnName("QUESTION_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EduExtraFieldGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EDU_EXTR__3213E83FC9B4F19A");

            entity.ToTable("EDU_EXTRA_FIELD_GROUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
        });

        modelBuilder.Entity<EduLecture>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__cms_item__3213E83F8BEE0CE4");

            entity.ToTable("EDU_LECTURE");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Access).HasColumnName("access");
            entity.Property(e => e.Alias)
                .HasMaxLength(1000)
                .HasColumnName("alias");
            entity.Property(e => e.CatId).HasColumnName("cat_id");
            entity.Property(e => e.CheckedOut).HasColumnName("checked_out");
            entity.Property(e => e.CheckedOutTime)
                .HasColumnType("datetime")
                .HasColumnName("checked_out_time");
            entity.Property(e => e.Created)
                .HasColumnType("datetime")
                .HasColumnName("created");
            entity.Property(e => e.CreatedBy).HasColumnName("created_by");
            entity.Property(e => e.CreatedByAlias)
                .HasMaxLength(255)
                .HasColumnName("created_by_alias");
            entity.Property(e => e.DatePost)
                .HasColumnType("datetime")
                .HasColumnName("date_post");
            entity.Property(e => e.ExtraFields).HasColumnName("extra_fields");
            entity.Property(e => e.ExtraFieldsSearch)
                .HasMaxLength(255)
                .HasColumnName("extra_fields_search");
            entity.Property(e => e.Featured).HasColumnName("featured");
            entity.Property(e => e.FeaturedOrdering).HasColumnName("featured_ordering");
            entity.Property(e => e.FullText).HasColumnName("full_text");
            entity.Property(e => e.Gallery)
                .HasMaxLength(255)
                .HasColumnName("gallery");
            entity.Property(e => e.Hits).HasColumnName("hits");
            entity.Property(e => e.ImageCaption)
                .HasMaxLength(500)
                .HasColumnName("image_caption");
            entity.Property(e => e.ImageCredits)
                .HasMaxLength(255)
                .HasColumnName("image_credits");
            entity.Property(e => e.IntroText).HasColumnName("intro_text");
            entity.Property(e => e.Language)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("language");
            entity.Property(e => e.ListUserView)
                .IsUnicode(false)
                .HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.MetaData)
                .HasMaxLength(1000)
                .HasColumnName("meta_data");
            entity.Property(e => e.MetaDesc)
                .HasMaxLength(1000)
                .HasColumnName("meta_desc");
            entity.Property(e => e.MetaKey)
                .HasMaxLength(1000)
                .HasColumnName("meta_key");
            entity.Property(e => e.Modified)
                .HasColumnType("datetime")
                .HasColumnName("modified");
            entity.Property(e => e.ModifiedBy).HasColumnName("modified_by");
            entity.Property(e => e.Ordering).HasColumnName("ordering");
            entity.Property(e => e.Params).HasColumnName("params");
            entity.Property(e => e.Plugins).HasColumnName("plugins");
            entity.Property(e => e.PublishDown)
                .HasColumnType("datetime")
                .HasColumnName("publish_down");
            entity.Property(e => e.PublishUp)
                .HasColumnType("datetime")
                .HasColumnName("publish_up");
            entity.Property(e => e.Published).HasColumnName("published");
            entity.Property(e => e.Template)
                .HasMaxLength(255)
                .HasColumnName("template");
            entity.Property(e => e.Title)
                .HasMaxLength(1000)
                .HasColumnName("title");
            entity.Property(e => e.Trash).HasColumnName("trash");
            entity.Property(e => e.Video)
                .HasMaxLength(500)
                .HasColumnName("video");
            entity.Property(e => e.VideoCaption)
                .HasMaxLength(500)
                .HasColumnName("video_caption");
            entity.Property(e => e.VideoCredits)
                .HasMaxLength(255)
                .HasColumnName("video_credits");
        });

        modelBuilder.Entity<EmployeeCertificate>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("EMPLOYEE_CERTIFICATE");

            entity.Property(e => e.CertCode)
                .HasMaxLength(255)
                .HasColumnName("CERT_CODE");
            entity.Property(e => e.CertDateEnd).HasColumnName("CERT_DATE_END");
            entity.Property(e => e.CertDateLicense).HasColumnName("CERT_DATE_LICENSE");
            entity.Property(e => e.CertNum)
                .HasMaxLength(255)
                .HasColumnName("CERT_NUM");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(255)
                .HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ImgPath)
                .HasMaxLength(255)
                .HasColumnName("IMG_PATH");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Noted)
                .HasMaxLength(255)
                .HasColumnName("NOTED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EmployeeCoaching>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EMPLOYEE__3214EC2730FF908A");

            entity.ToTable("EMPLOYEE_COACHING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CoachId).HasColumnName("COACH_ID");
            entity.Property(e => e.CoachType)
                .HasMaxLength(255)
                .HasColumnName("COACH_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<EmployeeStatusTracking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EMPLOYEE__3214EC27352C12CF");

            entity.ToTable("EMPLOYEE_STATUS_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(255)
                .HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjectRelative)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_RELATIVE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.StatusCode)
                .HasMaxLength(255)
                .HasColumnName("STATUS_CODE");
        });

        modelBuilder.Entity<EntityMapping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ENTITY_M__3214EC274940AF25");

            entity.ToTable("ENTITY_MAPPING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PoBuyerCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PO_BUYER_CODE");
            entity.Property(e => e.PoSaleCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PO_SALE_CODE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("REQ_CODE");
        });

        modelBuilder.Entity<ExcuterControlRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EXCUTER___3214EC27A0784278");

            entity.ToTable("EXCUTER_CONTROL_ROLE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.Approve).HasColumnName("APPROVE");
            entity.Property(e => e.ApproveTime).HasColumnName("APPROVE_TIME");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Role)
                .HasMaxLength(100)
                .HasColumnName("ROLE");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.UserId)
                .HasMaxLength(100)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<ExcuterControlRoleInst>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__EXCUTER___3214EC270BA919E2");

            entity.ToTable("EXCUTER_CONTROL_ROLE_INST");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCodeInst)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_CODE_INST");
            entity.Property(e => e.Approve).HasColumnName("APPROVE");
            entity.Property(e => e.ApproveTime).HasColumnName("APPROVE_TIME");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Role)
                .HasMaxLength(100)
                .HasColumnName("ROLE");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.UserId)
                .HasMaxLength(100)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<FaceFaceId>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FACE_FAC__3214EC27ED39232E");

            entity.ToTable("FACE_FACE_ID");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FaceId)
                .HasMaxLength(60)
                .HasColumnName("FACE_ID");
            entity.Property(e => e.ImgPath)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMG_PATH");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
        });

        modelBuilder.Entity<FacoProductCat>(entity =>
        {
            entity.HasKey(e => e.ProductId).HasName("PK__FACO_PRO__52B41763CAF69487");

            entity.ToTable("FACO_PRODUCT_CAT");

            entity.Property(e => e.ProductId)
                .HasComment("Customer Id")
                .HasColumnName("PRODUCT_ID");
            entity.Property(e => e.Color)
                .HasMaxLength(20)
                .HasColumnName("COLOR");
            entity.Property(e => e.Cost).HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_By");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Material)
                .HasMaxLength(255)
                .HasColumnName("MATERIAL");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Origin)
                .HasMaxLength(255)
                .HasColumnName("ORIGIN");
            entity.Property(e => e.PathImg)
                .HasMaxLength(500)
                .HasColumnName("PATH_IMG");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductGroup)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_GROUP");
            entity.Property(e => e.ProductName)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.TradeMark)
                .HasMaxLength(255)
                .HasColumnName("TRADE_MARK");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserManual)
                .HasMaxLength(255)
                .HasColumnName("USER_MANUAL");
        });

        modelBuilder.Entity<Family>(entity =>
        {
            entity.ToTable("FAMILY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BirthYear)
                .HasMaxLength(50)
                .HasComment("năm sinh")
                .HasColumnName("BIRTH_YEAR");
            entity.Property(e => e.ClassComposition)
                .HasMaxLength(100)
                .HasComment("thành phần lớp cơ sở")
                .HasColumnName("CLASS_COMPOSITION");
            entity.Property(e => e.DeathReason)
                .HasMaxLength(100)
                .HasComment("lí do mất")
                .HasColumnName("DEATH_REASON");
            entity.Property(e => e.DeathYear)
                .HasMaxLength(50)
                .HasComment("năm mất")
                .HasColumnName("DEATH_YEAR");
            entity.Property(e => e.HomeTown)
                .HasMaxLength(100)
                .HasComment("quê quán")
                .HasColumnName("HOME_TOWN");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Job)
                .HasMaxLength(100)
                .HasComment("Nghề nghiệp")
                .HasColumnName("JOB");
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .HasColumnName("NAME");
            entity.Property(e => e.PartyMember)
                .HasComment("Đảng viên?")
                .HasColumnName("PARTY_MEMBER");
            entity.Property(e => e.PoliticalAttitude)
                .HasMaxLength(200)
                .HasComment("Thái độ chính trị")
                .HasColumnName("POLITICAL_ATTITUDE");
            entity.Property(e => e.ProfileCode)
                .HasMaxLength(100)
                .HasColumnName("PROFILE_CODE");
            entity.Property(e => e.Relation)
                .HasMaxLength(100)
                .HasComment("Tôn giáo")
                .HasColumnName("RELATION");
            entity.Property(e => e.Residence)
                .HasMaxLength(100)
                .HasComment("Nơi cư trú")
                .HasColumnName("RESIDENCE");
            entity.Property(e => e.WorkingProgress)
                .HasMaxLength(255)
                .HasComment("Quá trình công tác")
                .HasColumnName("WORKING_PROGRESS");
        });

        modelBuilder.Entity<FamilyNodeInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_FAMILY_NODE_INFO_1");

            entity.ToTable("FAMILY_NODE_INFO");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AddressFull)
                .HasMaxLength(200)
                .HasColumnName("ADDRESS_FULL");
            entity.Property(e => e.AliasName)
                .HasMaxLength(100)
                .HasColumnName("ALIAS_NAME");
            entity.Property(e => e.Avartar)
                .HasMaxLength(200)
                .HasColumnName("AVARTAR");
            entity.Property(e => e.Birthday).HasColumnName("BIRTHDAY");
            entity.Property(e => e.BirthdayPlaceGps).HasColumnName("BIRTHDAY_PLACE_GPS");
            entity.Property(e => e.BirthdayText).HasColumnName("BIRTHDAY_TEXT");
            entity.Property(e => e.Branch).HasColumnName("BRANCH");
            entity.Property(e => e.CityProvince)
                .HasMaxLength(200)
                .HasColumnName("CITY_PROVINCE");
            entity.Property(e => e.DeadDay).HasColumnName("DEAD_DAY");
            entity.Property(e => e.DeadPlaceGps).HasColumnName("DEAD_PLACE_GPS");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.Dicstrict)
                .HasMaxLength(100)
                .HasColumnName("DICSTRICT");
            entity.Property(e => e.FamilyName)
                .HasMaxLength(100)
                .HasColumnName("FAMILY_NAME");
            entity.Property(e => e.FamilyNameGroup)
                .HasMaxLength(100)
                .HasColumnName("FAMILY_NAME_GROUP");
            entity.Property(e => e.FamilyTreeNodeCode)
                .HasMaxLength(100)
                .HasColumnName("FAMILY_TREE_NODE_CODE");
            entity.Property(e => e.FullName)
                .HasMaxLength(100)
                .HasColumnName("FULL_NAME");
            entity.Property(e => e.Hand).HasColumnName("HAND");
            entity.Property(e => e.Hashtag)
                .HasMaxLength(100)
                .HasColumnName("HASHTAG");
            entity.Property(e => e.Image)
                .HasMaxLength(200)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Level).HasColumnName("_LEVEL");
            entity.Property(e => e.LineColor)
                .HasMaxLength(100)
                .HasColumnName("LINE_COLOR");
            entity.Property(e => e.LineStyle)
                .HasMaxLength(100)
                .HasColumnName("LINE_STYLE");
            entity.Property(e => e.LocationX).HasColumnName("Location_X");
            entity.Property(e => e.LocationY).HasColumnName("Location_Y");
            entity.Property(e => e.MarriedHist).HasColumnName("MARRIED_HIST");
            entity.Property(e => e.MotherId)
                .HasMaxLength(100)
                .HasColumnName("MOTHER_ID");
            entity.Property(e => e.MultipleMediaList).HasColumnName("MULTIPLE_MEDIA_LIST");
            entity.Property(e => e.No).HasColumnName("NO");
            entity.Property(e => e.NodeCode)
                .HasMaxLength(100)
                .HasColumnName("NODE_CODE");
            entity.Property(e => e.Parent)
                .HasMaxLength(100)
                .HasColumnName("PARENT");
            entity.Property(e => e.Period)
                .HasMaxLength(100)
                .HasColumnName("PERIOD");
            entity.Property(e => e.Role).HasColumnName("ROLE");
            entity.Property(e => e.Sex)
                .HasMaxLength(50)
                .HasColumnName("SEX");
            entity.Property(e => e.Siblings).HasColumnName("SIBLINGS");
            entity.Property(e => e.SocialLink).HasColumnName("SOCIAL_LINK");
            entity.Property(e => e.Wards)
                .HasMaxLength(100)
                .HasColumnName("WARDS");
        });

        modelBuilder.Entity<FamilyTreeInfo>(entity =>
        {
            entity.ToTable("FAMILY_TREE_INFO");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(100)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.FamilyTreeCode)
                .HasMaxLength(100)
                .HasColumnName("FAMILY_TREE_CODE");
            entity.Property(e => e.FamilyTreeNodeCode)
                .HasMaxLength(100)
                .HasColumnName("FAMILY_TREE_NODE_CODE");
            entity.Property(e => e.FamilyV)
                .HasMaxLength(1000)
                .HasColumnName("FAMILY_V");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsPublic).HasColumnName("IS_PUBLIC");
            entity.Property(e => e.Member)
                .HasMaxLength(100)
                .HasColumnName("MEMBER");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATE_BY");
        });

        modelBuilder.Entity<FcmToken>(entity =>
        {
            entity.HasKey(e => e.UserId).HasName("PK__FCM_TOKE__F3BEEBFFEC6A585D");

            entity.ToTable("FCM_TOKEN");

            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
            entity.Property(e => e.AppCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("APP_CODE");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Token).HasColumnName("TOKEN");
        });

        modelBuilder.Entity<FileObjectShare>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FILE_OBJ__3214EC27DFFF8906");

            entity.ToTable("FILE_OBJECT_SHARE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectCodeShared)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE_SHARED");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.Permission)
                .HasMaxLength(255)
                .HasColumnName("PERMISSION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<FileRecruitment>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FILE_REC__3214EC27377AAF63");

            entity.ToTable("FILE_RECRUITMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Url).HasColumnName("URL");
        });

        modelBuilder.Entity<FileVersion>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ACTIVITY__3214EC2709860C47");

            entity.ToTable("FILE_VERSION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Url)
                .HasMaxLength(255)
                .HasColumnName("URL");
            entity.Property(e => e.Version).HasColumnName("VERSION");
        });

        modelBuilder.Entity<FilesShareObjectUser>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FILES_SH__3214EC27B5E2CFDB");

            entity.ToTable("FILES_SHARE_OBJECT_USER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCreated)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CREATED");
            entity.Property(e => e.FileId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_ID");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FileUrl).HasColumnName("FILE_URL");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListUserShare).HasColumnName("LIST_USER_SHARE");
            entity.Property(e => e.ObjectRelative).HasColumnName("OBJECT_RELATIVE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ForecastProductInStock>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FORECAST__3214EC27D4919108");

            entity.ToTable("FORECAST_PRODUCT_IN_STOCK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Cnt).HasColumnName("CNT");
            entity.Property(e => e.Cnt2).HasColumnName("CNT_2");
            entity.Property(e => e.CntForecast).HasColumnName("CNT_FORECAST");
            entity.Property(e => e.CntProductInStock).HasColumnName("CNT_PRODUCT_IN_STOCK");
            entity.Property(e => e.ForecastDate).HasColumnName("FORECAST_DATE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
        });

        modelBuilder.Entity<FormCat>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FORM_CAT__3214EC279FB3790E");

            entity.ToTable("FORM_CAT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FormCode)
                .HasMaxLength(255)
                .HasColumnName("FORM_CODE");
            entity.Property(e => e.FormGroup)
                .HasMaxLength(255)
                .HasColumnName("FORM_GROUP");
            entity.Property(e => e.FormName)
                .HasMaxLength(255)
                .HasColumnName("FORM_NAME");
            entity.Property(e => e.FormNote)
                .HasMaxLength(255)
                .HasColumnName("FORM_NOTE");
            entity.Property(e => e.FormType)
                .HasMaxLength(255)
                .HasColumnName("FORM_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<FormControl>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FORM_CON__3214EC270EC0406A");

            entity.ToTable("FORM_CONTROL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FcAttribute).HasColumnName("FC_ATTRIBUTE");
            entity.Property(e => e.FcCode)
                .HasMaxLength(255)
                .HasColumnName("FC_CODE");
            entity.Property(e => e.FcName)
                .HasMaxLength(255)
                .HasColumnName("FC_NAME");
            entity.Property(e => e.FcParent)
                .HasMaxLength(255)
                .HasColumnName("FC_PARENT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<FundAccEntry>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FUND_ACC__3214EC2791F72918");

            entity.ToTable("FUND_ACC_ENTRY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.AetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("AET_CODE");
            entity.Property(e => e.AetDescription)
                .HasMaxLength(255)
                .HasColumnName("AET_DESCRIPTION");
            entity.Property(e => e.AetRelative)
                .HasMaxLength(255)
                .HasColumnName("AET_RELATIVE");
            entity.Property(e => e.AetRelativeType)
                .HasMaxLength(255)
                .HasColumnName("AET_RELATIVE_TYPE");
            entity.Property(e => e.AetType)
                .HasMaxLength(255)
                .HasColumnName("AET_TYPE");
            entity.Property(e => e.CatCode)
                .HasMaxLength(100)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(100)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeadLine).HasColumnName("DEAD_LINE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.GoogleMap)
                .HasMaxLength(255)
                .HasColumnName("GOOGLE_MAP");
            entity.Property(e => e.IsCompleted).HasColumnName("IS_COMPLETED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsPlan).HasColumnName("IS_PLAN");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.LogData).HasColumnName("LOG_DATA");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.Payer)
                .HasMaxLength(255)
                .HasColumnName("PAYER");
            entity.Property(e => e.Receiptter)
                .HasMaxLength(255)
                .HasColumnName("RECEIPTTER");
            entity.Property(e => e.Status)
                .HasComment("CREATED,CANCEL,PENDING,REFUSE,ACCEPT")
                .HasColumnName("STATUS");
            entity.Property(e => e.StatusObject)
                .HasMaxLength(255)
                .HasColumnName("STATUS_OBJECT");
            entity.Property(e => e.StatusObjectLog).HasColumnName("STATUS_OBJECT_LOG");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TOTAL");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<FundAccEntryTracking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FUND_ACC__3214EC273CE30B07");

            entity.ToTable("FUND_ACC_ENTRY_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action).HasColumnName("ACTION");
            entity.Property(e => e.AetCode)
                .HasMaxLength(255)
                .HasColumnName("AET_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
        });

        modelBuilder.Entity<FundCatReptExp>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FUND_CAT__3214EC271DD79740");

            entity.ToTable("FUND_CAT_REPT_EXPS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CatCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CatName)
                .HasMaxLength(255)
                .HasColumnName("CAT_NAME");
            entity.Property(e => e.CatParent)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CAT_PARENT");
            entity.Property(e => e.CatType)
                .HasMaxLength(100)
                .HasColumnName("CAT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<FundCurrency>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FUND_CUR__3214EC27916220C8");

            entity.ToTable("FUND_CURRENCY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ConversionRate)
                .HasColumnType("decimal(14, 5)")
                .HasColumnName("CONVERSION_RATE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CURRENCY_CODE");
            entity.Property(e => e.DefaultPayment).HasColumnName("DEFAULT_PAYMENT");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<FundExchangeRate>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FUND_EXC__3214EC27E8B95DC1");

            entity.ToTable("FUND_EXCHANGE_RATE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime)
                .HasComment("0")
                .HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Rate)
                .HasColumnType("decimal(18, 6)")
                .HasColumnName("RATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<FundExchangeRateCopy>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FUND_EXC__3214EC2758178C88");

            entity.ToTable("FUND_EXCHANGE_RATE_copy");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime)
                .HasComment("0")
                .HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Rate)
                .HasColumnType("decimal(18, 6)")
                .HasColumnName("RATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<FundFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FUND_FIL__3214EC276BFE8745");

            entity.ToTable("FUND_FILES");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("AET_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileSize)
                .HasMaxLength(100)
                .HasColumnName("FILE_SIZE");
            entity.Property(e => e.FileType)
                .HasMaxLength(100)
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<FundLoadingSmsBank>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LOADING___3214EC279F687AE1");

            entity.ToTable("FUND_LOADING_SMS_BANK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccBalance)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACC_BALANCE");
            entity.Property(e => e.AccReceiver)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACC_RECEIVER");
            entity.Property(e => e.AccSender)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACC_SENDER");
            entity.Property(e => e.BankName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BANK_NAME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CurrencyBalance)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CURRENCY_BALANCE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedDate).HasColumnName("DELETED_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MoneyTranfer)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MONEY_TRANFER");
            entity.Property(e => e.Receiver).HasColumnName("RECEIVER");
            entity.Property(e => e.Sender)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SENDER");
            entity.Property(e => e.SmsRaw)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("SMS_RAW");
            entity.Property(e => e.SmsStatus)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SMS_STATUS");
            entity.Property(e => e.TranferTime)
                .HasColumnType("datetime")
                .HasColumnName("TRANFER_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<FundRelativeObjMng>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__FUND_REL__3214EC27430223BE");

            entity.ToTable("FUND_RELATIVE_OBJ_MNG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.Relative)
                .HasMaxLength(255)
                .HasColumnName("RELATIVE");
            entity.Property(e => e.TickRecptPayCode)
                .HasMaxLength(255)
                .HasColumnName("TICK_RECPT_PAY_CODE");
        });

        modelBuilder.Entity<GalaxyKeyword>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__GALAXY_K__3214EC27F3EF0C2D");

            entity.ToTable("GALAXY_KEYWORD");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.Keyword).HasColumnName("KEYWORD");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<GetCountCardWork>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("GET_COUNT_CARD_WORK");

            entity.Property(e => e.CardWorkExpires).HasColumnName("CARD_WORK_EXPIRES");
            entity.Property(e => e.CardWorkPending).HasColumnName("CARD_WORK_PENDING");
            entity.Property(e => e.CardWorkSuccess).HasColumnName("CARD_WORK_SUCCESS");
            entity.Property(e => e.CardWorkcancel).HasColumnName("CARD_WORKCANCEL");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.SumCardWork).HasColumnName("SUM_CARD_WORK");
        });

        modelBuilder.Entity<GoAboard>(entity =>
        {
            entity.ToTable("GO_ABOARD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Contact)
                .HasMaxLength(255)
                .HasColumnName("CONTACT");
            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .HasColumnName("COUNTRY");
            entity.Property(e => e.From)
                .HasMaxLength(50)
                .HasColumnName("FROM");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProfileCode)
                .HasMaxLength(50)
                .HasColumnName("PROFILE_CODE");
            entity.Property(e => e.To)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TO");
        });

        modelBuilder.Entity<HistorySpecialist>(entity =>
        {
            entity.ToTable("HISTORY_SPECIALIST");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Content)
                .HasMaxLength(255)
                .HasColumnName("CONTENT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MonthYear)
                .HasMaxLength(50)
                .HasColumnName("MONTH_YEAR");
            entity.Property(e => e.ProfileCode)
                .HasMaxLength(50)
                .HasColumnName("PROFILE_CODE");
        });

        modelBuilder.Entity<HolidayDate>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HOLIDAY___3214EC27CF4DF0CC");

            entity.ToTable("HOLIDAY_DATE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CalendarDay).HasColumnName("CALENDAR_DAY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DayOfWeek).HasColumnName("DAY_OF_WEEK");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LunarDay).HasColumnName("LUNAR_DAY");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<HostingServer>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("HOSTING_SERVER");

            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CtwDirectory)
                .HasMaxLength(255)
                .HasColumnName("CTW_DIRECTORY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeployAddress)
                .HasMaxLength(255)
                .HasColumnName("DEPLOY_ADDRESS");
            entity.Property(e => e.DeployDirectory)
                .HasMaxLength(255)
                .HasColumnName("DEPLOY_DIRECTORY");
            entity.Property(e => e.Enabled).HasColumnName("ENABLED");
            entity.Property(e => e.FtpServerInfo).HasColumnName("FTP_SERVER_INFO");
            entity.Property(e => e.GitDirectory)
                .HasMaxLength(255)
                .HasColumnName("GIT_DIRECTORY");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Ip)
                .HasMaxLength(255)
                .HasColumnName("IP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsReserveProxy).HasColumnName("IS_RESERVE_PROXY");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Port)
                .HasMaxLength(255)
                .HasColumnName("PORT");
            entity.Property(e => e.ReserveProxyInfo).HasColumnName("RESERVE_PROXY_INFO");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<HrAddress>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_ADDRE__3213E83F3C0580D8");

            entity.ToTable("HR_ADDRESS");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(250)
                .HasColumnName("Created_By");
            entity.Property(e => e.CreatedTime).HasColumnName("Created_Time");
            entity.Property(e => e.EmployeeId).HasColumnName("Employee_Id");
            entity.Property(e => e.EndTime).HasColumnName("End_Time");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.NowAddress)
                .HasMaxLength(250)
                .HasColumnName("Now_Address");
            entity.Property(e => e.PermanentAddress)
                .HasMaxLength(250)
                .HasColumnName("Permanent_Address");
            entity.Property(e => e.Phone).HasMaxLength(250);
            entity.Property(e => e.StartTime).HasColumnName("Start_Time");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(250)
                .HasColumnName("Updated_By");
            entity.Property(e => e.UpdatedTime).HasColumnName("Updated_Time");
        });

        modelBuilder.Entity<HrContact>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_CONTA__3213E83FF0D459DE");

            entity.ToTable("HR_CONTACT");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Address).HasMaxLength(250);
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(250)
                .HasColumnName("Created_By");
            entity.Property(e => e.CreatedTime).HasColumnName("Created_Time");
            entity.Property(e => e.Email).HasMaxLength(250);
            entity.Property(e => e.EmployeeId).HasColumnName("Employee_Id");
            entity.Property(e => e.Fax).HasMaxLength(250);
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.JobName)
                .HasMaxLength(250)
                .HasColumnName("Job_Name");
            entity.Property(e => e.Name).HasMaxLength(250);
            entity.Property(e => e.Note).HasMaxLength(250);
            entity.Property(e => e.Phone).HasMaxLength(250);
            entity.Property(e => e.Relationship).HasMaxLength(250);
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(250)
                .HasColumnName("Updated_By");
            entity.Property(e => e.UpdatedTime).HasColumnName("Updated_Time");
        });

        modelBuilder.Entity<HrContract>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_CONTR__3213E83FD8598162");

            entity.ToTable("HR_CONTRACT");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.Allowance)
                .HasMaxLength(250)
                .HasComment("Phụ cấp");
            entity.Property(e => e.Bonus).HasComment("Tiền thưởng");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(250)
                .HasColumnName("Contract_Code");
            entity.Property(e => e.ContractType)
                .HasMaxLength(50)
                .HasComment("Loại hợp đồng")
                .HasColumnName("Contract_Type");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(250)
                .HasColumnName("Created_By");
            entity.Property(e => e.CreatedTime).HasColumnName("Created_Time");
            entity.Property(e => e.DateOfLaborBook)
                .HasComment("Ngày cấp sổ lao động")
                .HasColumnName("DATE_OF_LABOR_BOOK");
            entity.Property(e => e.DatesOfPay)
                .HasComment("Ngày thanh toán")
                .HasColumnName("Dates_of_pay");
            entity.Property(e => e.EmployeeId)
                .HasComment("Mã nhân viên")
                .HasColumnName("Employee_Id");
            entity.Property(e => e.EndTime).HasColumnName("End_Time");
            entity.Property(e => e.ExpTimeWork)
                .HasMaxLength(250)
                .HasComment("Thời gian làm việc")
                .HasColumnName("Exp_time_work");
            entity.Property(e => e.File).HasMaxLength(250);
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.InfoContract)
                .HasMaxLength(250)
                .HasComment("Thông tin hợp đồng")
                .HasColumnName("Info_Contract");
            entity.Property(e => e.InfoInsuarance)
                .HasMaxLength(250)
                .HasComment("Thông tin bảo hiểm")
                .HasColumnName("Info_Insuarance");
            entity.Property(e => e.Insuarance).HasComment("Bảo hiểm");
            entity.Property(e => e.LaborBookCode)
                .HasMaxLength(250)
                .HasColumnName("LABOR_BOOK_CODE");
            entity.Property(e => e.OtherAgree)
                .HasMaxLength(250)
                .HasComment("Thỏa thuận khác")
                .HasColumnName("Other_Agree");
            entity.Property(e => e.PayScale)
                .HasMaxLength(255)
                .HasColumnName("PAY_SCALE");
            entity.Property(e => e.Payment)
                .HasMaxLength(250)
                .HasComment("Thanh toán");
            entity.Property(e => e.PlaceLaborBook)
                .HasMaxLength(250)
                .HasComment("Nơi cấp sổ lao động")
                .HasColumnName("PLACE_LABOR_BOOK");
            entity.Property(e => e.PlaceWork)
                .HasMaxLength(250)
                .HasComment("Nơi làm việc")
                .HasColumnName("Place_Work");
            entity.Property(e => e.Salary).HasComment("Lương");
            entity.Property(e => e.SalaryRatio)
                .HasMaxLength(53)
                .HasComment("Bậc lương")
                .HasColumnName("Salary_Ratio");
            entity.Property(e => e.Signer)
                .HasMaxLength(50)
                .HasComment("Người ký");
            entity.Property(e => e.StartTime).HasColumnName("Start_Time");
            entity.Property(e => e.ToolsWork)
                .HasMaxLength(250)
                .HasComment("Công cụ làm việc")
                .HasColumnName("Tools_Work");
            entity.Property(e => e.TypeMoney)
                .HasMaxLength(250)
                .HasComment("Kiểu tiền")
                .HasColumnName("Type_Money");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(250)
                .HasColumnName("Updated_By");
            entity.Property(e => e.UpdatedTime).HasColumnName("Updated_Time");
            entity.Property(e => e.ValueTimeWork).HasColumnName("Value_time_work");
            entity.Property(e => e.WorkContent)
                .HasMaxLength(250)
                .HasComment("Nội dung công việc")
                .HasColumnName("Work_Content");
        });

        modelBuilder.Entity<HrEmployee>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_EMPLO__3214EC0731C319E4");

            entity.ToTable("HR_EMPLOYEE");

            entity.Property(e => e.Id).HasComment("id - Id");
            entity.Property(e => e.Accountholder)
                .HasMaxLength(50)
                .HasComment("Chủ tài khoản - AccountHolder")
                .HasColumnName("accountholder");
            entity.Property(e => e.Accountnumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Số tài khoản - AccountNumber")
                .HasColumnName("accountnumber");
            entity.Property(e => e.Accountopenplace)
                .HasMaxLength(100)
                .HasComment("Nơi mở tài khoản - AccountOpenPlace")
                .HasColumnName("accountopenplace");
            entity.Property(e => e.Bank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Ngân hàng - Bank")
                .HasColumnName("bank");
            entity.Property(e => e.Birthday)
                .HasComment("Ngày sinh - Birthday")
                .HasColumnName("birthday");
            entity.Property(e => e.Birthofplace)
                .HasMaxLength(200)
                .HasComment("Nguyên quán - BirthOfPlace")
                .HasColumnName("birthofplace");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(255)
                .HasColumnName("company_Code");
            entity.Property(e => e.Computerskill)
                .HasMaxLength(250)
                .HasComment("Trình độ tin học - ComputerSkill")
                .HasColumnName("computerskill");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .HasColumnName("create_by");
            entity.Property(e => e.Createtime)
                .HasColumnType("datetime")
                .HasColumnName("createtime");
            entity.Property(e => e.Disciplines)
                .HasMaxLength(50)
                .HasComment("Ngành học - Disciplines")
                .HasColumnName("disciplines");
            entity.Property(e => e.Educationallevel)
                .HasMaxLength(50)
                .HasComment("Trình độ văn hóa - EducationalLevel")
                .HasColumnName("educationallevel");
            entity.Property(e => e.Emailpassword)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("EmailPassword")
                .HasColumnName("emailpassword");
            entity.Property(e => e.Emailuser)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("EmailUser")
                .HasColumnName("emailuser");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(25)
                .HasColumnName("employee_code");
            entity.Property(e => e.Employeegroup)
                .HasMaxLength(50)
                .HasComment("1: Nhân viên\r\n2: Giáo viên\r\n3: Gia sư\r\n4: Thực tập - EmployeeGroup")
                .HasColumnName("employeegroup");
            entity.Property(e => e.Employeekind)
                .HasMaxLength(50)
                .HasComment("Loại hình nhân viên - EmployeeKind")
                .HasColumnName("employeekind");
            entity.Property(e => e.Employeetype)
                .HasMaxLength(50)
                .HasComment("Kiểu nhân viên - EmployeeType")
                .HasColumnName("employeetype");
            entity.Property(e => e.Factiondate)
                .HasComment("Ngày vào đảng - FactionDate")
                .HasColumnType("datetime")
                .HasColumnName("factiondate");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.Fullname)
                .HasMaxLength(50)
                .HasComment("Họ vs tên - FullName")
                .HasColumnName("fullname");
            entity.Property(e => e.Gender)
                .HasComment("Giới tính - Gender")
                .HasColumnName("gender");
            entity.Property(e => e.Health)
                .HasMaxLength(50)
                .HasComment("Sức khẻo - Health")
                .HasColumnName("health");
            entity.Property(e => e.IdDriver).HasColumnName("id_driver");
            entity.Property(e => e.Identification)
                .HasMaxLength(100)
                .HasComment("Nhận dạng - Identification")
                .HasColumnName("identification");
            entity.Property(e => e.Identitycard)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasComment("Chứng minh nhân dân - IdentityCard")
                .HasColumnName("identitycard");
            entity.Property(e => e.Identitycarddate)
                .HasComment("Ngày cấp chứng minh thư - IdentityCardDate")
                .HasColumnName("identitycarddate");
            entity.Property(e => e.Identitycardplace)
                .HasMaxLength(100)
                .HasComment("Nới cấp chứng minh thư - IdentityCardPlace")
                .HasColumnName("identitycardplace");
            entity.Property(e => e.InsuranceBookNumber)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("insurance_book_number");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.Language)
                .HasMaxLength(10)
                .HasColumnName("language");
            entity.Property(e => e.Languagelevel)
                .HasMaxLength(50)
                .HasComment("Trình độ ngoại ngử - LanguageLevel")
                .HasColumnName("languagelevel");
            entity.Property(e => e.LogDepartment).HasColumnName("log_Department");
            entity.Property(e => e.LogEndContract).HasColumnName("log_End_Contract");
            entity.Property(e => e.LogMovement).HasColumnName("log_Movement");
            entity.Property(e => e.LogPayRange).HasColumnName("log_Pay_Range");
            entity.Property(e => e.LogPayScale).HasColumnName("log_Pay_Scale");
            entity.Property(e => e.LogPosition).HasColumnName("log_Position");
            entity.Property(e => e.LogStatus).HasColumnName("log_Status");
            entity.Property(e => e.Maritalstatus)
                .HasComment("Tình trạng hôn nhân - MaritalStatus")
                .HasColumnName("maritalstatus");
            entity.Property(e => e.MarkedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("marked_by");
            entity.Property(e => e.MarkedTime).HasColumnName("marked_time");
            entity.Property(e => e.Nation)
                .HasMaxLength(50)
                .HasComment("Dân tộc - Nation")
                .HasColumnName("nation");
            entity.Property(e => e.Nationlaty)
                .HasMaxLength(100)
                .HasComment("Quốc tịch - Nationlaty")
                .HasColumnName("nationlaty");
            entity.Property(e => e.Nickname)
                .HasMaxLength(50)
                .HasComment("Tên thường dùng - NickName")
                .HasColumnName("nickname");
            entity.Property(e => e.NotWorkDay).HasColumnName("not_work_day");
            entity.Property(e => e.Order).HasColumnName("order");
            entity.Property(e => e.PayCareer)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_career");
            entity.Property(e => e.PayCertificate)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_certificate");
            entity.Property(e => e.PayCoef)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_coef");
            entity.Property(e => e.PayMajor)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_major");
            entity.Property(e => e.PayRange)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_range");
            entity.Property(e => e.PayScale)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_scale");
            entity.Property(e => e.PayTitle)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_title");
            entity.Property(e => e.Permanentresidence)
                .HasMaxLength(200)
                .HasComment("Hộ khẩu thường trú - PermanentResidence")
                .HasColumnName("permanentresidence");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .HasComment("Số điện thoại - Phone")
                .HasColumnName("phone");
            entity.Property(e => e.Picture)
                .HasMaxLength(255)
                .HasComment("Id Hình ảnh - Picture")
                .HasColumnName("picture");
            entity.Property(e => e.Position)
                .HasMaxLength(255)
                .HasComment("Chức vụ - Position")
                .HasColumnName("position");
            entity.Property(e => e.QrCodePayment)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("qr_code_payment");
            entity.Property(e => e.Religion)
                .HasMaxLength(50)
                .HasComment("Tôn giáo - Religion")
                .HasColumnName("religion");
            entity.Property(e => e.Salary)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("salary");
            entity.Property(e => e.SalaryBookNumber)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("salary_book_number");
            entity.Property(e => e.Salaryfactor)
                .HasComment("Hệ số lương - SalaryFactor")
                .HasColumnName("salaryfactor");
            entity.Property(e => e.Salarygroup)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasComment("Nhóm lương - SalaryGroup")
                .HasColumnName("salarygroup");
            entity.Property(e => e.Salarytype)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Loại lương - SalaryType")
                .HasColumnName("salarytype");
            entity.Property(e => e.ShiftList)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_LIST");
            entity.Property(e => e.Socialinsurance)
                .HasMaxLength(50)
                .HasComment("Số bảo hiểm xã hội - SocialInsurance")
                .HasColumnName("socialinsurance");
            entity.Property(e => e.Socialinsurancedate)
                .HasComment("Ngày cấp bảo hiểm xa hội - SocialInsuranceDate")
                .HasColumnName("socialinsurancedate");
            entity.Property(e => e.Socialinsuranceplace)
                .HasMaxLength(20)
                .HasComment("Nơi cấp bảo hiểm xã hội - SocialInsurancePlace")
                .HasColumnName("socialinsuranceplace");
            entity.Property(e => e.Specialized)
                .HasMaxLength(50)
                .HasComment("Chuyên ngành - Specialized")
                .HasColumnName("specialized");
            entity.Property(e => e.Status)
                .HasComment("Trạng thái - Status")
                .HasColumnName("status");
            entity.Property(e => e.Taxcode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Mã số thuế - TaxCode")
                .HasColumnName("taxcode");
            entity.Property(e => e.Trainingschool)
                .HasMaxLength(50)
                .HasComment("Trường đào tạo - TrainingSchool")
                .HasColumnName("trainingschool");
            entity.Property(e => e.Trainingtime)
                .HasMaxLength(200)
                .HasComment("Thời gian đào tạo - TrainingTime")
                .HasColumnName("trainingtime");
            entity.Property(e => e.Trainingtype)
                .HasMaxLength(50)
                .HasComment(" TrainingType")
                .HasColumnName("trainingtype");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Đơn vị - Unit")
                .HasColumnName("unit");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("updated_by");
            entity.Property(e => e.Updatetime)
                .HasColumnType("datetime")
                .HasColumnName("updatetime");
            entity.Property(e => e.Wage)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasComment("Bậc lương - Wage")
                .HasColumnName("wage");
            entity.Property(e => e.WorkFrom).HasColumnName("work_from");
            entity.Property(e => e.WorkTo).HasColumnName("work_to");
            entity.Property(e => e.WorkType)
                .HasMaxLength(50)
                .HasColumnName("work_type");
            entity.Property(e => e.YearsOfExp)
                .HasComment("năm kinh nghiêm")
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("years_of_exp");
        });

        modelBuilder.Entity<HrEmployeeDecision>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_EMPLO__3214EC2709A0E6F8");

            entity.ToTable("HR_EMPLOYEE_DECISION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionCode)
                .HasMaxLength(255)
                .HasColumnName("DECISION_CODE");
            entity.Property(e => e.DecisionDate).HasColumnName("DECISION_DATE");
            entity.Property(e => e.DecisionMakingDate).HasColumnName("DECISION_MAKING_DATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Style)
                .HasComment("1- Chấm dứt hợp đồng\r\n2- Điều động nhân sự\r\n3- Chuyển phong ban nhân sự")
                .HasColumnName("STYLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<HrEmployeeDeploy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("HR_EMPLOYEE_DEPLOY");

            entity.Property(e => e.Accountholder)
                .HasMaxLength(50)
                .HasColumnName("accountholder");
            entity.Property(e => e.Accountnumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("accountnumber");
            entity.Property(e => e.Accountopenplace)
                .HasMaxLength(100)
                .HasColumnName("accountopenplace");
            entity.Property(e => e.Bank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("bank");
            entity.Property(e => e.Birthday).HasColumnName("birthday");
            entity.Property(e => e.Birthofplace)
                .HasMaxLength(200)
                .HasColumnName("birthofplace");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(255)
                .HasColumnName("company_Code");
            entity.Property(e => e.Computerskill)
                .HasMaxLength(250)
                .HasColumnName("computerskill");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .HasColumnName("create_by");
            entity.Property(e => e.Createtime)
                .HasColumnType("datetime")
                .HasColumnName("createtime");
            entity.Property(e => e.Disciplines)
                .HasMaxLength(50)
                .HasColumnName("disciplines");
            entity.Property(e => e.Educationallevel)
                .HasMaxLength(50)
                .HasColumnName("educationallevel");
            entity.Property(e => e.Emailpassword)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("emailpassword");
            entity.Property(e => e.Emailuser)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("emailuser");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(25)
                .HasColumnName("employee_code");
            entity.Property(e => e.Employeegroup)
                .HasMaxLength(50)
                .HasColumnName("employeegroup");
            entity.Property(e => e.Employeekind)
                .HasMaxLength(50)
                .HasColumnName("employeekind");
            entity.Property(e => e.Employeetype)
                .HasMaxLength(50)
                .HasColumnName("employeetype");
            entity.Property(e => e.Factiondate)
                .HasColumnType("datetime")
                .HasColumnName("factiondate");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.Fullname)
                .HasMaxLength(50)
                .HasColumnName("fullname");
            entity.Property(e => e.Gender).HasColumnName("gender");
            entity.Property(e => e.Health)
                .HasMaxLength(50)
                .HasColumnName("health");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.IdDriver).HasColumnName("id_driver");
            entity.Property(e => e.Identification)
                .HasMaxLength(100)
                .HasColumnName("identification");
            entity.Property(e => e.Identitycard)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("identitycard");
            entity.Property(e => e.Identitycarddate).HasColumnName("identitycarddate");
            entity.Property(e => e.Identitycardplace)
                .HasMaxLength(100)
                .HasColumnName("identitycardplace");
            entity.Property(e => e.InsuranceBookNumber)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("insurance_book_number");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.Language)
                .HasMaxLength(10)
                .HasColumnName("language");
            entity.Property(e => e.Languagelevel)
                .HasMaxLength(50)
                .HasColumnName("languagelevel");
            entity.Property(e => e.LogDepartment)
                .HasMaxLength(1000)
                .HasColumnName("log_Department");
            entity.Property(e => e.LogEndContract)
                .HasMaxLength(1000)
                .HasColumnName("log_End_Contract");
            entity.Property(e => e.LogMovement)
                .HasMaxLength(1000)
                .HasColumnName("log_Movement");
            entity.Property(e => e.LogPayRange)
                .HasMaxLength(1000)
                .HasColumnName("log_Pay_Range");
            entity.Property(e => e.LogPayScale)
                .HasMaxLength(1000)
                .HasColumnName("log_Pay_Scale");
            entity.Property(e => e.LogPosition)
                .HasMaxLength(1000)
                .HasColumnName("log_Position");
            entity.Property(e => e.LogStatus)
                .HasMaxLength(1000)
                .HasColumnName("log_Status");
            entity.Property(e => e.Maritalstatus).HasColumnName("maritalstatus");
            entity.Property(e => e.MarkedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("marked_by");
            entity.Property(e => e.MarkedTime).HasColumnName("marked_time");
            entity.Property(e => e.Nation)
                .HasMaxLength(50)
                .HasColumnName("nation");
            entity.Property(e => e.Nationlaty)
                .HasMaxLength(100)
                .HasColumnName("nationlaty");
            entity.Property(e => e.Nickname)
                .HasMaxLength(50)
                .HasColumnName("nickname");
            entity.Property(e => e.NotWorkDay)
                .HasMaxLength(1000)
                .HasColumnName("not_work_day");
            entity.Property(e => e.Order).HasColumnName("order");
            entity.Property(e => e.PayCareer)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_career");
            entity.Property(e => e.PayCertificate)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_certificate");
            entity.Property(e => e.PayCertificateName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_certificate_name");
            entity.Property(e => e.PayCoef)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_coef");
            entity.Property(e => e.PayMajor)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_major");
            entity.Property(e => e.PayMajorName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_major_name");
            entity.Property(e => e.PayRange)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_range");
            entity.Property(e => e.PayScale)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_scale");
            entity.Property(e => e.PayTitle)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_title");
            entity.Property(e => e.PayTitleName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_title_name");
            entity.Property(e => e.Permanentresidence)
                .HasMaxLength(200)
                .HasColumnName("permanentresidence");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .HasColumnName("phone");
            entity.Property(e => e.Picture)
                .HasMaxLength(255)
                .HasColumnName("picture");
            entity.Property(e => e.Position)
                .HasMaxLength(255)
                .HasColumnName("position");
            entity.Property(e => e.QrCodePayment)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("qr_code_payment");
            entity.Property(e => e.Religion)
                .HasMaxLength(50)
                .HasColumnName("religion");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.Salary)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("salary");
            entity.Property(e => e.SalaryBookNumber)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("salary_book_number");
            entity.Property(e => e.Salaryfactor).HasColumnName("salaryfactor");
            entity.Property(e => e.Salarygroup)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("salarygroup");
            entity.Property(e => e.Salarytype)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("salarytype");
            entity.Property(e => e.ShiftList)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_LIST");
            entity.Property(e => e.Socialinsurance)
                .HasMaxLength(50)
                .HasColumnName("socialinsurance");
            entity.Property(e => e.Socialinsurancedate).HasColumnName("socialinsurancedate");
            entity.Property(e => e.Socialinsuranceplace)
                .HasMaxLength(20)
                .HasColumnName("socialinsuranceplace");
            entity.Property(e => e.Specialized)
                .HasMaxLength(50)
                .HasColumnName("specialized");
            entity.Property(e => e.Status)
                .HasMaxLength(1000)
                .HasColumnName("status");
            entity.Property(e => e.Taxcode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("taxcode");
            entity.Property(e => e.Trainingschool)
                .HasMaxLength(50)
                .HasColumnName("trainingschool");
            entity.Property(e => e.Trainingtime)
                .HasMaxLength(200)
                .HasColumnName("trainingtime");
            entity.Property(e => e.Trainingtype)
                .HasMaxLength(50)
                .HasColumnName("trainingtype");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("unit");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("updated_by");
            entity.Property(e => e.Updatetime)
                .HasColumnType("datetime")
                .HasColumnName("updatetime");
            entity.Property(e => e.Wage)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("wage");
            entity.Property(e => e.WorkFrom).HasColumnName("work_from");
            entity.Property(e => e.WorkTo).HasColumnName("work_to");
            entity.Property(e => e.WorkType)
                .HasMaxLength(50)
                .HasColumnName("work_type");
            entity.Property(e => e.YearsOfExp)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("years_of_exp");
        });

        modelBuilder.Entity<HrEmployeeMobilization>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_EMPLO__3214EC27755CD5D7");

            entity.ToTable("HR_EMPLOYEE_MOBILIZATION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionId)
                .HasMaxLength(255)
                .HasColumnName("DECISION_ID");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentIdNew)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEPARTMENT_ID_NEW");
            entity.Property(e => e.DepartmentIdOld)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEPARTMENT_ID_OLD");
            entity.Property(e => e.EmployeeId)
                .HasMaxLength(255)
                .HasColumnName("EMPLOYEE_ID");
            entity.Property(e => e.FormDate).HasColumnName("FORM_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Reason).HasColumnName("REASON");
            entity.Property(e => e.RoleIdNew)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ROLE_ID_NEW");
            entity.Property(e => e.RoleIdOld)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ROLE_ID_OLD");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Wage)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WAGE");
            entity.Property(e => e.WageLevel)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WAGE_LEVEL");
        });

        modelBuilder.Entity<HrRomoocDriver>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_ROMOO__3214EC076DD7916A");

            entity.ToTable("HR_ROMOOC_DRIVER");

            entity.Property(e => e.BalanceCredit).HasColumnName("Balance_Credit");
            entity.Property(e => e.Brand).HasMaxLength(255);
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("company_code");
            entity.Property(e => e.Description).HasMaxLength(500);
            entity.Property(e => e.Email).HasMaxLength(50);
            entity.Property(e => e.Emei)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("emei");
            entity.Property(e => e.EndName)
                .HasMaxLength(255)
                .HasColumnName("End_name");
            entity.Property(e => e.EndNameGps)
                .HasMaxLength(255)
                .HasColumnName("End_Name_GPS");
            entity.Property(e => e.IdFb)
                .HasMaxLength(50)
                .HasColumnName("Id_Fb");
            entity.Property(e => e.IdentificationImage)
                .HasMaxLength(255)
                .HasColumnName("Identification_image");
            entity.Property(e => e.ImageCar)
                .HasMaxLength(255)
                .HasColumnName("Image_car");
            entity.Property(e => e.IsBusy).HasColumnName("Is_busy");
            entity.Property(e => e.IsOnline).HasColumnName("is_Online");
            entity.Property(e => e.LicenseCarImage)
                .HasMaxLength(255)
                .HasColumnName("License_car_image");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(50)
                .HasColumnName("License_plate");
            entity.Property(e => e.Name).HasMaxLength(150);
            entity.Property(e => e.Password).HasMaxLength(50);
            entity.Property(e => e.Phone).HasMaxLength(15);
            entity.Property(e => e.Polyline).HasMaxLength(2000);
            entity.Property(e => e.ProfilePicture)
                .HasMaxLength(255)
                .HasColumnName("Profile_Picture");
            entity.Property(e => e.StartName)
                .HasMaxLength(255)
                .HasColumnName("Start_name");
            entity.Property(e => e.StartNameGps)
                .HasMaxLength(255)
                .HasColumnName("Start_Name_GPS");
            entity.Property(e => e.TaxyType)
                .HasMaxLength(255)
                .HasColumnName("Taxy_type");
            entity.Property(e => e.TypeCarYear)
                .HasMaxLength(50)
                .HasColumnName("type_car_year");
            entity.Property(e => e.TypeDriver).HasColumnName("Type_Driver");
            entity.Property(e => e.TypeSeat).HasColumnName("Type_Seat");
            entity.Property(e => e.Username).HasMaxLength(50);
            entity.Property(e => e.VirualIntiary)
                .HasMaxLength(4000)
                .HasColumnName("virual_intiary");
        });

        modelBuilder.Entity<HrTrainingCourse>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_TRAIN__3213E83F24F9369A");

            entity.ToTable("HR_TRAINING_COURSE");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CertificateName)
                .HasMaxLength(250)
                .HasColumnName("Certificate_Name");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(250)
                .HasColumnName("Created_By");
            entity.Property(e => e.CreatedTime).HasColumnName("Created_Time");
            entity.Property(e => e.EducationName)
                .HasMaxLength(250)
                .HasColumnName("Education_Name");
            entity.Property(e => e.EmployeeId).HasColumnName("Employee_Id");
            entity.Property(e => e.EndTime).HasColumnName("End_Time");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.InfoDetails)
                .HasMaxLength(250)
                .HasColumnName("Info_Details");
            entity.Property(e => e.ReceivedPlace)
                .HasMaxLength(250)
                .HasColumnName("Received_Place");
            entity.Property(e => e.Result).HasMaxLength(250);
            entity.Property(e => e.StartTime).HasColumnName("Start_Time");
            entity.Property(e => e.TraingPlace)
                .HasMaxLength(250)
                .HasColumnName("Traing_Place");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(250)
                .HasColumnName("Updated_By");
            entity.Property(e => e.UpdatedTime).HasColumnName("Updated_Time");
        });

        modelBuilder.Entity<HrTranningCourseFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_TRANN__3214EC279B68A838");

            entity.ToTable("HR_TRANNING_COURSE_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.IdTranningCourse).HasColumnName("ID_TRANNING_COURSE");
        });

        modelBuilder.Entity<HrWorkflow>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_WORKF__3213E83F1E2AC5B0");

            entity.ToTable("HR_WORKFLOWS");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(250)
                .HasColumnName("Created_By");
            entity.Property(e => e.CreatedTime).HasColumnName("Created_Time");
            entity.Property(e => e.Description).HasMaxLength(250);
            entity.Property(e => e.EmployeeId).HasColumnName("Employee_Id");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.InfoDetails)
                .HasMaxLength(250)
                .HasColumnName("Info_Details");
            entity.Property(e => e.NameJob)
                .HasMaxLength(250)
                .HasColumnName("Name_Job");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(250)
                .HasColumnName("Updated_By");
            entity.Property(e => e.UpdatedTime).HasColumnName("Updated_Time");
            entity.Property(e => e.WorkingProcess)
                .HasMaxLength(250)
                .HasColumnName("Working_Process");
        });

        modelBuilder.Entity<HrWorkingProcess>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__HR_WORKI__3213E83FF4D8C73D");

            entity.ToTable("HR_WORKING_PROCESS");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(250)
                .HasColumnName("Created_By");
            entity.Property(e => e.CreatedTime).HasColumnName("Created_Time");
            entity.Property(e => e.Description).HasMaxLength(250);
            entity.Property(e => e.EmployeeId).HasColumnName("Employee_Id");
            entity.Property(e => e.EndDate).HasColumnName("End_Date");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.SalaryRatio).HasColumnName("Salary_Ratio");
            entity.Property(e => e.StartTime).HasColumnName("Start_Time");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(250)
                .HasColumnName("Updated_By");
            entity.Property(e => e.UpdatedTime).HasColumnName("Updated_Time");
            entity.Property(e => e.WageLevel)
                .HasMaxLength(250)
                .HasColumnName("Wage_Level");
        });

        modelBuilder.Entity<InspectionBeforeWarehouseHeader>(entity =>
        {
            entity.ToTable("INSPECTION_BEFORE_WAREHOUSE_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApprovalPerson)
                .HasMaxLength(255)
                .HasColumnName("APPROVAL_PERSON");
            entity.Property(e => e.CheckTheSample)
                .HasMaxLength(255)
                .HasColumnName("CHECK_THE_SAMPLE");
            entity.Property(e => e.ConfirmationDate).HasColumnName("CONFIRMATION_DATE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DateOfApproval).HasColumnName("DATE_OF_APPROVAL");
            entity.Property(e => e.DocumentCode)
                .HasMaxLength(255)
                .HasColumnName("DOCUMENT_CODE");
            entity.Property(e => e.EffectiveDate).HasColumnName("EFFECTIVE_DATE");
            entity.Property(e => e.Endorsement)
                .HasMaxLength(255)
                .HasColumnName("ENDORSEMENT");
            entity.Property(e => e.ImplementationDate).HasColumnName("IMPLEMENTATION_DATE");
            entity.Property(e => e.InspectionDate).HasColumnName("INSPECTION_DATE");
            entity.Property(e => e.Inspector)
                .HasMaxLength(255)
                .HasColumnName("INSPECTOR");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MassProduction)
                .HasMaxLength(255)
                .HasColumnName("MASS_PRODUCTION");
            entity.Property(e => e.NumberOfOven)
                .HasMaxLength(255)
                .HasColumnName("NUMBER_OF_OVEN");
            entity.Property(e => e.PackinglistNumber)
                .HasMaxLength(255)
                .HasColumnName("PACKINGLIST_NUMBER");
            entity.Property(e => e.Quality)
                .HasMaxLength(255)
                .HasColumnName("QUALITY");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.ReviewCode)
                .HasMaxLength(255)
                .HasColumnName("REVIEW_CODE");
            entity.Property(e => e.Session)
                .HasMaxLength(50)
                .HasColumnName("SESSION");
            entity.Property(e => e.Specifications)
                .HasMaxLength(255)
                .HasColumnName("SPECIFICATIONS");
            entity.Property(e => e.SteelGrade)
                .HasMaxLength(255)
                .HasColumnName("STEEL_GRADE");
            entity.Property(e => e.Supplier)
                .HasMaxLength(255)
                .HasColumnName("SUPPLIER");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TypeOfMaterials)
                .HasMaxLength(255)
                .HasColumnName("TYPE_OF_MATERIALS");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.Weight)
                .HasMaxLength(255)
                .HasColumnName("WEIGHT");
        });

        modelBuilder.Entity<IntroducerOfParty>(entity =>
        {
            entity.ToTable("INTRODUCER_OF_PARTY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PersonIntroduced)
                .HasMaxLength(150)
                .HasComment("Người giới thiệu")
                .HasColumnName("PERSON_INTRODUCED");
            entity.Property(e => e.PlaceTimeJoinParty)
                .HasMaxLength(255)
                .HasComment("Ngày và nơi và Đảng lần thứ nhất")
                .HasColumnName("PLACE_TIME_JOIN_PARTY");
            entity.Property(e => e.PlaceTimeJoinUnion)
                .HasMaxLength(255)
                .HasComment("Ngày và nơi vào đoàn")
                .HasColumnName("PLACE_TIME_JOIN_UNION");
            entity.Property(e => e.PlaceTimeRecognize)
                .HasMaxLength(255)
                .HasComment("Ngày và nơi công nhận chính thức lần thứ nhất")
                .HasColumnName("PLACE_TIME_RECOGNIZE");
            entity.Property(e => e.ProfileCode)
                .HasMaxLength(50)
                .HasColumnName("PROFILE_CODE");
        });

        modelBuilder.Entity<InventoryAuditDetail>(entity =>
        {
            entity.ToTable("INVENTORY_AUDIT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AuditTickCode)
                .HasMaxLength(50)
                .HasColumnName("AUDIT_TICK_CODE");
            entity.Property(e => e.AuditType)
                .HasMaxLength(50)
                .HasColumnName("AUDIT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.Image).HasColumnName("IMAGE");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.MapId).HasColumnName("MAP_ID");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.Measurement)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("MEASUREMENT");
            entity.Property(e => e.MeasurementUnit)
                .HasMaxLength(255)
                .HasColumnName("MEASUREMENT_UNIT");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.Position)
                .HasMaxLength(50)
                .HasColumnName("POSITION");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<InventoryAuditHeader>(entity =>
        {
            entity.ToTable("INVENTORY_AUDIT_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AuditFrom).HasColumnName("AUDIT_FROM");
            entity.Property(e => e.AuditTicketCode)
                .HasMaxLength(50)
                .HasColumnName("AUDIT_TICKET_CODE");
            entity.Property(e => e.AuditTo).HasColumnName("AUDIT_TO");
            entity.Property(e => e.Auditors).HasColumnName("AUDITORS");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.InventoryCode)
                .HasMaxLength(50)
                .HasColumnName("INVENTORY_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<InvoiceCustomerGate>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("INVOICE_CUSTOMER_GATE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PassWord)
                .HasMaxLength(50)
                .HasColumnName("PASS_WORD");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(50)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.TaxNumber)
                .HasMaxLength(50)
                .HasColumnName("TAX_NUMBER");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<IotAnalysisAction>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__IOT_ANAL__3214EC27033A52F5");

            entity.ToTable("IOT_ANALYSIS_ACTION");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FaceId)
                .HasMaxLength(1)
                .HasColumnName("FACE_ID");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.Image1)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMAGE1");
            entity.Property(e => e.Image2)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMAGE2");
            entity.Property(e => e.Image3)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMAGE3");
            entity.Property(e => e.Image4)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMAGE4");
            entity.Property(e => e.NameFace)
                .HasMaxLength(255)
                .HasColumnName("NAME_FACE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TOTAL");
        });

        modelBuilder.Entity<IotCarInOut>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__IOT_CAR___3214EC27DBDC0E07");

            entity.ToTable("IOT_CAR_IN_OUT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVE");
            entity.Property(e => e.ConfirmTime).HasColumnName("CONFIRM_TIME");
            entity.Property(e => e.DateTime).HasColumnName("DATE_TIME");
            entity.Property(e => e.Driver)
                .HasMaxLength(255)
                .HasColumnName("DRIVER");
            entity.Property(e => e.Img1)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMG1");
            entity.Property(e => e.Img2)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMG2");
            entity.Property(e => e.Img3)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMG3");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LICENSE_PLATE");
        });

        modelBuilder.Entity<IotDeviceInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__IOT_DEVI__3214EC27EB5DDEE4");

            entity.ToTable("IOT_DEVICE_INFO");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeviceCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE_CODE");
            entity.Property(e => e.DeviceDesc)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE_DESC");
            entity.Property(e => e.DeviceGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE_GROUP");
            entity.Property(e => e.DeviceImage)
                .HasMaxLength(255)
                .HasColumnName("DEVICE_IMAGE");
            entity.Property(e => e.DeviceManufacturer)
                .HasMaxLength(255)
                .HasColumnName("DEVICE_MANUFACTURER");
            entity.Property(e => e.DeviceName)
                .HasMaxLength(255)
                .HasColumnName("DEVICE_NAME");
            entity.Property(e => e.DeviceStatus)
                .HasMaxLength(255)
                .HasColumnName("DEVICE_STATUS");
            entity.Property(e => e.DeviceSvg).HasColumnName("DEVICE_SVG");
            entity.Property(e => e.DeviceType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<IotSensor>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__IOT_SENS__3214EC2731C068A2");

            entity.ToTable("IOT_SENSOR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Accessories)
                .HasMaxLength(255)
                .HasColumnName("ACCESSORIES");
            entity.Property(e => e.Accuracy)
                .HasMaxLength(255)
                .HasColumnName("ACCURACY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeviceName)
                .HasMaxLength(255)
                .HasColumnName("DEVICE_NAME");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .HasColumnName("LOCATION");
            entity.Property(e => e.Mass)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MASS");
            entity.Property(e => e.MeasurementTime).HasColumnName("MEASUREMENT_TIME");
            entity.Property(e => e.Pin)
                .HasMaxLength(255)
                .HasColumnName("PIN");
            entity.Property(e => e.Screen)
                .HasMaxLength(255)
                .HasColumnName("SCREEN");
            entity.Property(e => e.Size)
                .HasMaxLength(1)
                .HasColumnName("SIZE");
            entity.Property(e => e.SpleepDue)
                .HasMaxLength(18)
                .IsUnicode(false)
                .HasColumnName("SPLEEP_DUE");
            entity.Property(e => e.StripDue)
                .HasMaxLength(255)
                .HasColumnName("STRIP_DUE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
        });

        modelBuilder.Entity<IotSetUpAlert>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__IOT_SET___3214EC27262DBE5C");

            entity.ToTable("IOT_SET_UP_ALERT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
        });

        modelBuilder.Entity<IotWarningSetting>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__IOT_WARN__3214EC27DC3648FB");

            entity.ToTable("IOT_WARNING_SETTING");

            entity.Property(e => e.Id)
                .ValueGeneratedNever()
                .HasColumnName("ID");
            entity.Property(e => e.CloseBelow)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("CLOSE_BELOW");
            entity.Property(e => e.CloseOn)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("CLOSE_ON");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeviceCode)
                .HasMaxLength(100)
                .HasColumnName("DEVICE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION");
            entity.Property(e => e.ObjType)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_TYPE");
        });

        modelBuilder.Entity<ItemPackUser>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ITEM_PACK_USER");

            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateTime)
                .HasPrecision(6)
                .HasColumnName("CREATE_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemPack).HasColumnName("ITEM_PACK");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime)
                .HasPrecision(6)
                .HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<ItemPlanJobcard>(entity =>
        {
            entity.ToTable("ITEM_PLAN_JOBCARD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode).HasColumnName("ITEM_CODE");
            entity.Property(e => e.JobcardCode)
                .HasMaxLength(255)
                .HasColumnName("JOBCARD_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("WEIGHT");
        });

        modelBuilder.Entity<IwindoorKeygenManagement>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("IWINDOOR_KEYGEN_MANAGEMENT");

            entity.Property(e => e.ComputerName)
                .HasMaxLength(225)
                .HasColumnName("COMPUTER_NAME");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.HardDriveCode)
                .HasMaxLength(225)
                .HasColumnName("HARD_DRIVE_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.KeyAccess)
                .HasMaxLength(50)
                .HasColumnName("KEY_ACCESS");
            entity.Property(e => e.MacCode)
                .HasMaxLength(225)
                .HasColumnName("MAC_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TimeLog).HasColumnName("TIME_LOG");
        });

        modelBuilder.Entity<JcObjectIdRelative>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JC_OBJEC__3214EC27694875C2");

            entity.ToTable("JC_OBJECT_ID_RELATIVE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ObjId)
                .HasMaxLength(255)
                .HasColumnName("OBJ_ID");
            entity.Property(e => e.ObjTypeCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE_CODE");
            entity.Property(e => e.Relative)
                .HasMaxLength(255)
                .HasColumnName("RELATIVE");
            entity.Property(e => e.ResultPercent)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("RESULT_PERCENT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT");
        });

        modelBuilder.Entity<JcObjectIdRelative100k>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JC_OBJEC__3214EC272E65C63C");

            entity.ToTable("JC_OBJECT_ID_RELATIVE_100K");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjId)
                .HasMaxLength(255)
                .HasColumnName("OBJ_ID");
            entity.Property(e => e.ObjTypeCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE_CODE");
            entity.Property(e => e.Relative)
                .HasMaxLength(255)
                .HasColumnName("RELATIVE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT");
        });

        modelBuilder.Entity<JcObjectIdRelativeSource>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JC_OBJEC__3214EC27BF9606DA");

            entity.ToTable("JC_OBJECT_ID_RELATIVE_SOURCE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjId)
                .HasMaxLength(255)
                .HasColumnName("OBJ_ID");
            entity.Property(e => e.ObjTypeCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE_CODE");
            entity.Property(e => e.Relative)
                .HasMaxLength(255)
                .HasColumnName("RELATIVE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT");
        });

        modelBuilder.Entity<JcObjectType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JC_OBJEC__3214EC27325AFD71");

            entity.ToTable("JC_OBJECT_TYPE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ClassLinq)
                .HasMaxLength(255)
                .HasColumnName("CLASS_LINQ");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjTypeCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE_CODE");
            entity.Property(e => e.ObjTypeName)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE_NAME");
            entity.Property(e => e.ScriptLinq)
                .HasMaxLength(1000)
                .HasColumnName("SCRIPT_LINQ");
            entity.Property(e => e.ScriptSql)
                .HasMaxLength(1000)
                .HasColumnName("SCRIPT_SQL");
            entity.Property(e => e.TableName)
                .HasMaxLength(255)
                .HasColumnName("TABLE_NAME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<JcProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JC_PRODU__3214EC27973BE687");

            entity.ToTable("JC_PRODUCT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JcAct)
                .HasMaxLength(255)
                .HasColumnName("JC_ACT");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<JcService>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JC_SERVI__3214EC27E294F320");

            entity.ToTable("JC_SERVICE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JcAct)
                .HasMaxLength(255)
                .HasColumnName("JC_ACT");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(255)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<JcTrackingBuilding>(entity =>
        {
            entity.HasKey(e => e.JctCode).HasName("PK__JC_TRACK__60F1FA5BFB71B856");

            entity.ToTable("JC_TRACKING_BUILDING");

            entity.Property(e => e.JctCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("JCT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JobCardCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("JOB_CARD_CODE");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Progress)
                .HasMaxLength(255)
                .HasColumnName("PROGRESS");
            entity.Property(e => e.TeamCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TEAM_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<JcTrackingMedium>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JC_TRACK__3214EC27D92A0F03");

            entity.ToTable("JC_TRACKING_MEDIA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileType)
                .HasMaxLength(255)
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JctCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("JCT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<JckMaterialsComsume>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JCK_MATE__3214EC27D4EB7464");

            entity.ToTable("JCK_MATERIALS_COMSUME");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JctCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("JCT_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.Unit)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<JobCardAssignee>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JOB_CARD__3214EC279DA8E93F");

            entity.ToTable("JOB_CARD_ASSIGNEE");

            entity.HasIndex(e => e.IsDeleted, "PK_DEPARTMENT_CARD_JOB");

            entity.HasIndex(e => e.IsDeleted, "PK_USER_CARD_JOB");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Approve).HasColumnName("APPROVE");
            entity.Property(e => e.ApproveTime).HasColumnName("APPROVE_TIME");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CardCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Item).HasColumnName("ITEM");
            entity.Property(e => e.Log).HasColumnName("LOG");
            entity.Property(e => e.Role)
                .HasMaxLength(100)
                .HasColumnName("ROLE");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Type).HasColumnName("TYPE");
            entity.Property(e => e.UserId)
                .HasMaxLength(100)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<JobcardDataLogger>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JOBCARD___3214EC2766DF1824");

            entity.ToTable("JOBCARD_DATA_LOGGER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACT_INST_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DtCode)
                .HasMaxLength(255)
                .HasColumnName("DT_CODE");
            entity.Property(e => e.DtGroup)
                .HasMaxLength(255)
                .HasColumnName("DT_GROUP");
            entity.Property(e => e.DtTitle)
                .HasMaxLength(255)
                .HasColumnName("DT_TITLE");
            entity.Property(e => e.DtUnit)
                .HasMaxLength(255)
                .HasColumnName("DT_UNIT");
            entity.Property(e => e.DtValue)
                .HasMaxLength(255)
                .HasColumnName("DT_VALUE");
            entity.Property(e => e.DtValueType)
                .HasMaxLength(255)
                .HasColumnName("DT_VALUE_TYPE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.ItemList).HasColumnName("ITEM_LIST");
            entity.Property(e => e.JobcardCode)
                .HasMaxLength(255)
                .HasColumnName("JOBCARD_CODE");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.SessionId)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SESSION_ID");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_INST_CODE");
        });

        modelBuilder.Entity<JobcardLink>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JOBCARD___3214EC276B526F50");

            entity.ToTable("JOBCARD_LINK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(100)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CardLink)
                .HasMaxLength(100)
                .HasColumnName("CARD_LINK");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<KeyWordDataPool>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__KEY_WORD__3214EC278D0B0AC7");

            entity.ToTable("KEY_WORD_DATA_POOL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Describe)
                .HasMaxLength(255)
                .HasColumnName("DESCRIBE");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KeyWord)
                .HasMaxLength(255)
                .HasColumnName("KEY_WORD");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<Laudatory>(entity =>
        {
            entity.ToTable("LAUDATORY");

            entity.Property(e => e.Id).ValueGeneratedNever();
            entity.Property(e => e.GrantDecision)
                .HasMaxLength(50)
                .HasColumnName("GRANT_DECISION");
            entity.Property(e => e.Reason)
                .HasMaxLength(200)
                .HasColumnName("REASON");
            entity.Property(e => e.Time).HasColumnName("TIME");
        });

        modelBuilder.Entity<LectureDiscuss>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LECTURE___3214EC2735421096");

            entity.ToTable("LECTURE_DISCUSS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Comment)
                .HasMaxLength(255)
                .HasColumnName("COMMENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.RefLst).HasColumnName("REF_LST");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<LinkedInDataProfileId>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LINKED_IN_DATA_PROFILE_ID");

            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.LinkedInProfileId).HasColumnName("LINKED_IN_PROFILE_ID");
            entity.Property(e => e.LinkedInUrl).HasColumnName("LINKED_IN_URL");
        });

        modelBuilder.Entity<LinkedInDataProfileUser>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LINKED_IN_DATA_PROFILE_USER");

            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.ElementSite).HasColumnName("ELEMENT_SITE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ProfileUrl).HasColumnName("PROFILE_URL");
        });

        modelBuilder.Entity<LinkedInInfoDatum>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LINKED_IN_INFO_DATA");

            entity.Property(e => e.About).HasColumnName("ABOUT");
            entity.Property(e => e.Activity).HasColumnName("ACTIVITY");
            entity.Property(e => e.Award).HasColumnName("AWARD");
            entity.Property(e => e.Contact).HasColumnName("CONTACT");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CurrentJob).HasColumnName("CURRENT_JOB");
            entity.Property(e => e.Education).HasColumnName("EDUCATION");
            entity.Property(e => e.ElementSite).HasColumnName("ELEMENT_SITE");
            entity.Property(e => e.Experience).HasColumnName("EXPERIENCE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Interests).HasColumnName("INTERESTS");
            entity.Property(e => e.Languages).HasColumnName("LANGUAGES");
            entity.Property(e => e.Licenses).HasColumnName("LICENSES");
            entity.Property(e => e.Location).HasColumnName("LOCATION");
            entity.Property(e => e.Name).HasColumnName("NAME");
            entity.Property(e => e.Organization).HasColumnName("ORGANIZATION");
            entity.Property(e => e.ProfileUrl).HasColumnName("PROFILE_URL");
            entity.Property(e => e.Recommendation).HasColumnName("RECOMMENDATION");
            entity.Property(e => e.Skill).HasColumnName("SKILL");
        });

        modelBuilder.Entity<LiquibaseSnapshot>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LIQUIBASE_SNAPSHOT");

            entity.Property(e => e.CurrentSnapshot)
                .HasMaxLength(255)
                .HasColumnName("CURRENT_SNAPSHOT");
            entity.Property(e => e.PreviousSnapshot)
                .HasMaxLength(255)
                .HasColumnName("PREVIOUS_SNAPSHOT");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
        });

        modelBuilder.Entity<LmsBoardTask>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_BOARD_TASK");

            entity.Property(e => e.Avatar)
                .HasMaxLength(255)
                .HasColumnName("AVATAR");
            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_COLOR");
            entity.Property(e => e.BackgroundImage)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_IMAGE");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.BoardCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BOARD_CODE");
            entity.Property(e => e.BoardId)
                .ValueGeneratedOnAdd()
                .HasColumnName("BOARD_ID");
            entity.Property(e => e.BoardName)
                .HasMaxLength(255)
                .HasColumnName("BOARD_NAME");
            entity.Property(e => e.BoardType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BOARD_TYPE");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.Completed)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
            entity.Property(e => e.Cost)
                .HasColumnType("money")
                .HasColumnName("COST");
            entity.Property(e => e.Deadline).HasColumnName("DEADLINE");
            entity.Property(e => e.Department)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.TeamCode)
                .HasMaxLength(255)
                .HasColumnName("TEAM_CODE");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.Visibility)
                .HasMaxLength(255)
                .HasColumnName("VISIBILITY");
        });

        modelBuilder.Entity<LmsClass>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_CLASS");

            entity.Property(e => e.ClassCode)
                .HasMaxLength(255)
                .HasColumnName("CLASS_CODE");
            entity.Property(e => e.ClassName)
                .HasMaxLength(255)
                .HasColumnName("CLASS_NAME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LmsTaskCode)
                .HasMaxLength(255)
                .HasColumnName("LMS_TASK_CODE");
            entity.Property(e => e.ManagerTeacher)
                .HasMaxLength(255)
                .HasColumnName("MANAGER_TEACHER");
            entity.Property(e => e.Noted)
                .HasMaxLength(1000)
                .HasColumnName("NOTED");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsCommonSettingCat>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("lms_common_setting_cat");

            entity.Property(e => e.AttrCode)
                .HasMaxLength(255)
                .HasColumnName("attr_code");
            entity.Property(e => e.AttrName)
                .HasMaxLength(255)
                .HasColumnName("attr_name");
            entity.Property(e => e.AttrNote)
                .HasMaxLength(255)
                .HasColumnName("attr_note");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("created_by");
            entity.Property(e => e.CreatedTime)
                .HasColumnType("datetime")
                .HasColumnName("created_time");
            entity.Property(e => e.DataType)
                .HasMaxLength(255)
                .HasColumnName("data_type");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.Group).HasColumnName("group");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.Order).HasColumnName("order");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("type");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("updated_by");
            entity.Property(e => e.UpdatedTime)
                .HasColumnType("datetime")
                .HasColumnName("updated_time");
        });

        modelBuilder.Entity<LmsCommonSettingValue>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("lms_common_setting_value");

            entity.Property(e => e.AttrCode)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasColumnName("attr_code");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasColumnName("attr_value");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasColumnName("created_by");
            entity.Property(e => e.CreatedTime)
                .HasColumnType("datetime")
                .HasColumnName("created_time");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasColumnName("object_code");
            entity.Property(e => e.TableName)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasColumnName("table_name");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasColumnName("unit");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasColumnName("updated_by");
            entity.Property(e => e.UpdatedTime)
                .HasColumnType("datetime")
                .HasColumnName("updated_time");
        });

        modelBuilder.Entity<LmsCourse>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("lms_course");

            entity.Property(e => e.CourseCode)
                .HasMaxLength(255)
                .HasColumnName("course_code");
            entity.Property(e => e.CourseName)
                .HasMaxLength(255)
                .HasColumnName("course_name");
            entity.Property(e => e.CourseNote)
                .HasMaxLength(255)
                .HasColumnName("course_note");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("created_by");
            entity.Property(e => e.CreatedTime)
                .HasColumnType("datetime")
                .HasColumnName("created_time");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("deleted_by");
            entity.Property(e => e.Duration).HasColumnName("duration");
            entity.Property(e => e.FileBase)
                .HasMaxLength(255)
                .HasColumnName("file_base");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("id");
            entity.Property(e => e.ImgCover)
                .HasMaxLength(255)
                .HasColumnName("img_cover");
            entity.Property(e => e.IsDeleted).HasColumnName("is_deleted");
            entity.Property(e => e.ListSubject).HasColumnName("list_subject");
            entity.Property(e => e.ListVideo).HasColumnName("list_video");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("price");
            entity.Property(e => e.Rating).HasColumnName("rating");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("status");
            entity.Property(e => e.Tags).HasColumnName("tags");
            entity.Property(e => e.TopSearch).HasColumnName("top_search");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("unit");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("updated_by");
            entity.Property(e => e.UpdatedTime)
                .HasColumnType("datetime")
                .HasColumnName("updated_time");
            entity.Property(e => e.VideoPresent)
                .HasMaxLength(255)
                .HasColumnName("video_present");
        });

        modelBuilder.Entity<LmsCourseResult>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_COURSE_RESULT");

            entity.Property(e => e.CorrectQuiz).HasColumnName("CORRECT_QUIZ");
            entity.Property(e => e.CountQuiz).HasColumnName("COUNT_QUIZ");
            entity.Property(e => e.CountViewLecture).HasColumnName("COUNT_VIEW_LECTURE");
            entity.Property(e => e.CourseCode)
                .HasMaxLength(255)
                .HasColumnName("COURSE_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.TotalLecture).HasColumnName("TOTAL_LECTURE");
            entity.Property(e => e.TotalQuiz).HasColumnName("TOTAL_QUIZ");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsExamDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_EXAM_DETAIL");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Duration).HasColumnName("DURATION");
            entity.Property(e => e.ExamCode)
                .HasMaxLength(255)
                .HasColumnName("EXAM_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Mark).HasColumnName("MARK");
            entity.Property(e => e.Order).HasColumnName("ORDER");
            entity.Property(e => e.QuestCode)
                .HasMaxLength(255)
                .HasColumnName("QUEST_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsExamHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_EXAM_HEADER");

            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_COLOR");
            entity.Property(e => e.BackgroundImage)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_IMAGE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.EndDate).HasColumnName("END_DATE");
            entity.Property(e => e.ExamCode)
                .HasMaxLength(255)
                .HasColumnName("EXAM_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Level)
                .HasMaxLength(255)
                .HasColumnName("LEVEL");
            entity.Property(e => e.ListUserJoined).HasColumnName("LIST_USER_JOINED");
            entity.Property(e => e.PracticeTestCode)
                .HasMaxLength(255)
                .HasColumnName("PRACTICE_TEST_CODE");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE");
            entity.Property(e => e.StartDate).HasColumnName("START_DATE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsExamScheduler>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_EXAM_SCHEDULER");

            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_COLOR");
            entity.Property(e => e.BackgroundImage)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_IMAGE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.EndDate).HasColumnName("END_DATE");
            entity.Property(e => e.ExamCode)
                .HasMaxLength(255)
                .HasColumnName("EXAM_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonRef).HasColumnName("JSON_REF");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.ListUserApproved).HasColumnName("LIST_USER_APPROVED");
            entity.Property(e => e.LmsTaskCode)
                .HasMaxLength(255)
                .HasColumnName("LMS_TASK_CODE");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .HasColumnName("LOCATION");
            entity.Property(e => e.StartDate).HasColumnName("START_DATE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsKyc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_KYC");

            entity.Property(e => e.ClassCode)
                .HasMaxLength(255)
                .HasColumnName("CLASS_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FaceId)
                .HasMaxLength(50)
                .HasColumnName("FACE_ID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.SrcVideo)
                .HasMaxLength(255)
                .HasColumnName("SRC_VIDEO");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserIdKyc)
                .HasMaxLength(50)
                .HasColumnName("USER_ID_KYC");
            entity.Property(e => e.UserUpVideo)
                .HasMaxLength(50)
                .HasColumnName("USER_UP_VIDEO");
        });

        modelBuilder.Entity<LmsLectureManagement>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LMS_LECT__3214EC270650DFCE");

            entity.ToTable("LMS_LECTURE_MANAGEMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AnswerTutor888).HasColumnName("ANSWER_TUTOR888");
            entity.Property(e => e.Duration).HasColumnName("DURATION");
            entity.Property(e => e.InteractiveFilePath)
                .HasMaxLength(1000)
                .HasColumnName("INTERACTIVE_FILE_PATH");
            entity.Property(e => e.IsInteractive).HasColumnName("IS_INTERACTIVE");
            entity.Property(e => e.IsTutor888).HasColumnName("IS_TUTOR888");
            entity.Property(e => e.JsonTutor888).HasColumnName("JSON_TUTOR888");
            entity.Property(e => e.LectCode)
                .HasMaxLength(255)
                .HasColumnName("LECT_CODE");
            entity.Property(e => e.LectDescription).HasColumnName("LECT_DESCRIPTION");
            entity.Property(e => e.LectName)
                .HasMaxLength(255)
                .HasColumnName("LECT_NAME");
            entity.Property(e => e.Level)
                .HasMaxLength(255)
                .HasColumnName("LEVEL");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE");
            entity.Property(e => e.Rating).HasColumnName("RATING");
            entity.Property(e => e.Share).HasColumnName("SHARE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.VideoPresent)
                .HasMaxLength(255)
                .HasColumnName("VIDEO_PRESENT");
            entity.Property(e => e.VideosDuration).HasColumnName("VIDEOS_DURATION");
        });

        modelBuilder.Entity<LmsLectureSubjectCourse>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LMS_LECT__3214EC27944CA863");

            entity.ToTable("LMS_LECTURE_SUBJECT_COURSE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CourseCode)
                .HasMaxLength(255)
                .HasColumnName("COURSE_CODE");
            entity.Property(e => e.LectureCode)
                .HasMaxLength(255)
                .HasColumnName("LECTURE_CODE");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
        });

        modelBuilder.Entity<LmsListTask>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_LIST_TASK");

            entity.Property(e => e.Avatar)
                .HasMaxLength(255)
                .HasColumnName("AVATAR");
            entity.Property(e => e.Background)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.BoardCode)
                .HasMaxLength(100)
                .HasColumnName("BOARD_CODE");
            entity.Property(e => e.Completed)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
            entity.Property(e => e.Cost)
                .HasColumnType("money")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Deadline).HasColumnName("DEADLINE");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListCode)
                .HasMaxLength(100)
                .HasColumnName("LIST_CODE");
            entity.Property(e => e.ListId)
                .ValueGeneratedOnAdd()
                .HasColumnName("LIST_ID");
            entity.Property(e => e.ListName)
                .HasMaxLength(255)
                .HasColumnName("LIST_NAME");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.Order).HasColumnName("ORDER");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.WeightNum)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT_NUM");
        });

        modelBuilder.Entity<LmsMentorMentee>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_MENTOR_MENTEE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(45)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate)
                .HasPrecision(6)
                .HasColumnName("CREATED_DATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MenteeCode).HasColumnName("MENTEE_CODE");
            entity.Property(e => e.MentorCode)
                .HasMaxLength(50)
                .HasColumnName("MENTOR_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(45)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate)
                .HasPrecision(6)
                .HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<LmsMsgNotification>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_MSG_NOTIFICATION");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(45)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate)
                .HasPrecision(6)
                .HasColumnName("CREATED_DATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEnabled).HasColumnName("IS_ENABLED");
            entity.Property(e => e.MsgContent).HasColumnName("MSG_CONTENT");
            entity.Property(e => e.MsgType)
                .HasMaxLength(100)
                .HasColumnName("MSG_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(45)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate)
                .HasPrecision(6)
                .HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<LmsPracticeTestDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_PRACTICE_TEST_DETAIL");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Duration).HasColumnName("DURATION");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Mark).HasColumnName("MARK");
            entity.Property(e => e.Order).HasColumnName("ORDER");
            entity.Property(e => e.PracticeTestCode)
                .HasMaxLength(255)
                .HasColumnName("PRACTICE_TEST_CODE");
            entity.Property(e => e.QuestCode)
                .HasMaxLength(255)
                .HasColumnName("QUEST_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsPracticeTestHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_PRACTICE_TEST_HEADER");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Duration).HasColumnName("DURATION");
            entity.Property(e => e.FilePath).HasColumnName("FILE_PATH");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsPublished).HasColumnName("IS_PUBLISHED");
            entity.Property(e => e.Level)
                .HasMaxLength(255)
                .HasColumnName("LEVEL");
            entity.Property(e => e.MarkPass).HasColumnName("MARK_PASS");
            entity.Property(e => e.MarkTotal).HasColumnName("MARK_TOTAL");
            entity.Property(e => e.NumQuiz).HasColumnName("NUM_QUIZ");
            entity.Property(e => e.PracticeTestCode)
                .HasMaxLength(255)
                .HasColumnName("PRACTICE_TEST_CODE");
            entity.Property(e => e.PracticeTestTitle)
                .HasMaxLength(255)
                .HasColumnName("PRACTICE_TEST_TITLE");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE");
            entity.Property(e => e.Rating)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("RATING");
            entity.Property(e => e.RatingLog).HasColumnName("RATING_LOG");
            entity.Property(e => e.Rework).HasColumnName("REWORK");
            entity.Property(e => e.Share).HasColumnName("SHARE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ViewResult).HasColumnName("VIEW_RESULT");
            entity.Property(e => e.WorkSequence).HasColumnName("WORK_SEQUENCE");
        });

        modelBuilder.Entity<LmsPracticeTestHeader1>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_PRACTICE_TEST_HEADER_1");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Duration).HasColumnName("DURATION");
            entity.Property(e => e.FilePath).HasColumnName("FILE_PATH");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsPublished).HasColumnName("IS_PUBLISHED");
            entity.Property(e => e.Level)
                .HasMaxLength(255)
                .HasColumnName("LEVEL");
            entity.Property(e => e.MarkPass).HasColumnName("MARK_PASS");
            entity.Property(e => e.MarkTotal).HasColumnName("MARK_TOTAL");
            entity.Property(e => e.NumQuiz).HasColumnName("NUM_QUIZ");
            entity.Property(e => e.PracticeTestCode)
                .HasMaxLength(255)
                .HasColumnName("PRACTICE_TEST_CODE");
            entity.Property(e => e.PracticeTestTitle)
                .HasMaxLength(255)
                .HasColumnName("PRACTICE_TEST_TITLE");
            entity.Property(e => e.Rating).HasColumnName("RATING");
            entity.Property(e => e.Rework).HasColumnName("REWORK");
            entity.Property(e => e.Share).HasColumnName("SHARE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ViewResult).HasColumnName("VIEW_RESULT");
            entity.Property(e => e.WorkSequence).HasColumnName("WORK_SEQUENCE");
        });

        modelBuilder.Entity<LmsQuizLectureSubjectCourse>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_QUIZ_LECTURE_SUBJECT_COURSE");

            entity.Property(e => e.CourseCode)
                .HasMaxLength(255)
                .HasColumnName("COURSE_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.LectureCode)
                .HasMaxLength(255)
                .HasColumnName("LECTURE_CODE");
            entity.Property(e => e.QuizCode)
                .HasMaxLength(100)
                .HasColumnName("QUIZ_CODE");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
        });

        modelBuilder.Entity<LmsQuizPoolReference>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_QUIZ_POOL_REFERENCE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Dislike).HasColumnName("DISLIKE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsNews).HasColumnName("IS_NEWS");
            entity.Property(e => e.JsonCanvas).HasColumnName("JSON_CANVAS");
            entity.Property(e => e.Like).HasColumnName("LIKE");
            entity.Property(e => e.LikeLog).HasColumnName("LIKE_LOG");
            entity.Property(e => e.QuizCode)
                .HasMaxLength(100)
                .HasColumnName("QUIZ_CODE");
            entity.Property(e => e.RefContent).HasColumnName("REF_CONTENT");
            entity.Property(e => e.RefParent).HasColumnName("REF_PARENT");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(100)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserCreateRef)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_CREATE_REF");
        });

        modelBuilder.Entity<LmsSubject>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LMS_SUBJ__3214EC27728844D5");

            entity.ToTable("LMS_SUBJECT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LmsSubjectCode)
                .HasMaxLength(255)
                .HasColumnName("LMS_SUBJECT_CODE");
            entity.Property(e => e.LmsSubjectDesc)
                .HasMaxLength(255)
                .HasColumnName("LMS_SUBJECT_DESC");
            entity.Property(e => e.LmsSubjectGroup)
                .HasMaxLength(255)
                .HasColumnName("LMS_SUBJECT_GROUP");
            entity.Property(e => e.LmsSubjectName)
                .HasMaxLength(255)
                .HasColumnName("LMS_SUBJECT_NAME");
            entity.Property(e => e.LmsSubjectType)
                .HasMaxLength(255)
                .HasColumnName("LMS_SUBJECT_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsSubjectManagement>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LMS_SUBJ__3214EC2796E7917B");

            entity.ToTable("LMS_SUBJECT_MANAGEMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Author)
                .HasMaxLength(1000)
                .HasColumnName("AUTHOR");
            entity.Property(e => e.CountQuiz).HasColumnName("COUNT_QUIZ");
            entity.Property(e => e.Duration).HasColumnName("DURATION");
            entity.Property(e => e.EdmsCatCode)
                .HasMaxLength(255)
                .HasColumnName("EDMS_CAT_CODE");
            entity.Property(e => e.FileBase).HasColumnName("FILE_BASE");
            entity.Property(e => e.IconFa)
                .HasMaxLength(255)
                .HasColumnName("ICON_FA");
            entity.Property(e => e.Id888).HasColumnName("ID888");
            entity.Property(e => e.ImageCover)
                .HasMaxLength(255)
                .HasColumnName("IMAGE_COVER");
            entity.Property(e => e.IsTutor888).HasColumnName("IS_TUTOR888");
            entity.Property(e => e.Parent).HasColumnName("PARENT");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.SubjectDescription).HasColumnName("SUBJECT_DESCRIPTION");
            entity.Property(e => e.SubjectName)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_NAME");
            entity.Property(e => e.Teacher).HasColumnName("TEACHER");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.VideoPresent)
                .HasMaxLength(255)
                .HasColumnName("VIDEO_PRESENT");
        });

        modelBuilder.Entity<LmsTask>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_TASK");

            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_COLOR");
            entity.Property(e => e.BackgroundImage)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_IMAGE");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListCode)
                .HasMaxLength(100)
                .HasColumnName("LIST_CODE");
            entity.Property(e => e.LmsItemList).HasColumnName("LMS_ITEM_LIST");
            entity.Property(e => e.LmsTaskCode)
                .HasMaxLength(100)
                .HasColumnName("LMS_TASK_CODE");
            entity.Property(e => e.LmsTaskName)
                .HasMaxLength(255)
                .HasColumnName("LMS_TASK_NAME");
            entity.Property(e => e.LmsTaskNext).HasColumnName("LMS_TASK_NEXT");
            entity.Property(e => e.LmsTaskType)
                .HasMaxLength(255)
                .HasColumnName("LMS_TASK_TYPE");
            entity.Property(e => e.LmsUserList).HasColumnName("LMS_USER_LIST");
            entity.Property(e => e.LockShare).HasColumnName("LOCK_SHARE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsTaskActivity>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_TASK_ACTIVITY");

            entity.Property(e => e.Action)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACTION");
            entity.Property(e => e.ChangeDetails).HasColumnName("CHANGE_DETAILS");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(255)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IdObject)
                .HasMaxLength(255)
                .HasColumnName("ID_OBJECT");
            entity.Property(e => e.IsCheck).HasColumnName("IS_CHECK");
            entity.Property(e => e.LmsTaskCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("LMS_TASK_CODE");
            entity.Property(e => e.Log).HasColumnName("LOG");
            entity.Property(e => e.UserId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<LmsTaskCommentList>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_TASK_COMMENT_LIST");

            entity.Property(e => e.CmtContent).HasColumnName("CMT_CONTENT");
            entity.Property(e => e.CmtId)
                .HasMaxLength(255)
                .HasColumnName("CMT_ID");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.LmsTaskCode)
                .HasMaxLength(255)
                .HasColumnName("LMS_TASK_CODE");
            entity.Property(e => e.MemberId)
                .HasMaxLength(255)
                .HasColumnName("MEMBER_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsTaskStudentAssign>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LMS_TASK__3214EC27713149B3");

            entity.ToTable("LMS_TASK_STUDENT_ASSIGN");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACTION");
            entity.Property(e => e.ChangeDetails).HasColumnName("CHANGE_DETAILS");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(255)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.IdObject)
                .HasMaxLength(255)
                .HasColumnName("ID_OBJECT");
            entity.Property(e => e.IsCheck).HasColumnName("IS_CHECK");
            entity.Property(e => e.LmsTaskCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("LMS_TASK_CODE");
            entity.Property(e => e.Log).HasColumnName("LOG");
            entity.Property(e => e.UserId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<LmsTaskUserItemProgress>(entity =>
        {
            entity.ToTable("LMS_TASK_USER_ITEM_PROGRESS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemTitle).HasColumnName("ITEM_TITLE");
            entity.Property(e => e.LmsTaskCode)
                .HasMaxLength(255)
                .HasColumnName("LMS_TASK_CODE");
            entity.Property(e => e.ProgressAuto)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PROGRESS_AUTO");
            entity.Property(e => e.TeacherApproved)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TEACHER_APPROVED");
            entity.Property(e => e.TrainingType)
                .HasMaxLength(255)
                .HasColumnName("TRAINING_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.User)
                .HasMaxLength(255)
                .HasColumnName("USER");
        });

        modelBuilder.Entity<LmsTrackDiligence>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_TRACK_DILIGENCE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectResult).HasColumnName("OBJECT_RESULT");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsTutoringSchedule>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_TUTORING_SCHEDULE");

            entity.Property(e => e.AccountZoom)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACCOUNT_ZOOM");
            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_COLOR");
            entity.Property(e => e.BackgroundImage)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_IMAGE");
            entity.Property(e => e.ClassCode)
                .HasMaxLength(255)
                .HasColumnName("CLASS_CODE");
            entity.Property(e => e.CourseCode)
                .HasMaxLength(255)
                .HasColumnName("COURSE_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsPopupAllowed).HasColumnName("IS_POPUP_ALLOWED");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.LessonDoc).HasColumnName("LESSON_DOC");
            entity.Property(e => e.ListUserApproved).HasColumnName("LIST_USER_APPROVED");
            entity.Property(e => e.MeetingId).HasColumnName("MEETING_ID");
            entity.Property(e => e.PathNotepad)
                .HasMaxLength(1000)
                .HasColumnName("PATH_NOTEPAD");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.Teacher)
                .HasMaxLength(255)
                .HasColumnName("TEACHER");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LmsUserClass>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_USER_CLASS");

            entity.Property(e => e.ClassCode)
                .HasMaxLength(255)
                .HasColumnName("CLASS_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<LmsUserMsg>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_USER_MSG");

            entity.Property(e => e.Confirm).HasColumnName("CONFIRM");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(45)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate)
                .HasPrecision(6)
                .HasColumnName("CREATED_DATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEnabled).HasColumnName("IS_ENABLED");
            entity.Property(e => e.MsgId).HasColumnName("MSG_ID");
            entity.Property(e => e.Note)
                .HasMaxLength(100)
                .HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(45)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate)
                .HasPrecision(6)
                .HasColumnName("UPDATED_DATE");
            entity.Property(e => e.UsrReceiver)
                .HasMaxLength(100)
                .HasColumnName("USR_RECEIVER");
            entity.Property(e => e.UsrSend)
                .HasMaxLength(100)
                .HasColumnName("USR_SEND");
        });

        modelBuilder.Entity<LmsWithdrawn>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LMS_WITHDRAWN");

            entity.Property(e => e.Amount)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("AMOUNT");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateTime)
                .HasPrecision(6)
                .HasColumnName("CREATE_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(50)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.FromIp)
                .HasMaxLength(50)
                .HasColumnName("FROM_IP");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Noted)
                .HasMaxLength(255)
                .HasColumnName("NOTED");
            entity.Property(e => e.PaymentType)
                .HasMaxLength(255)
                .HasColumnName("PAYMENT_TYPE");
            entity.Property(e => e.RequestTime)
                .HasPrecision(6)
                .HasColumnName("REQUEST_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TransactionLog).HasColumnName("TRANSACTION_LOG");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime)
                .HasPrecision(6)
                .HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserPay)
                .HasMaxLength(50)
                .HasColumnName("USER_PAY");
            entity.Property(e => e.UserRequest)
                .HasMaxLength(50)
                .HasColumnName("USER_REQUEST");
            entity.Property(e => e.WithdrawCode)
                .HasMaxLength(255)
                .HasColumnName("WITHDRAW_CODE");
        });

        modelBuilder.Entity<LogChangeDocument>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LOG_DOCU__3214EC27BB25747A");

            entity.ToTable("LOG_CHANGE_DOCUMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileName)
                .HasMaxLength(500)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FileType)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsEdited).HasColumnName("IS_EDITED");
            entity.Property(e => e.LogContent).HasColumnName("LOG_CONTENT");
            entity.Property(e => e.LogText).HasColumnName("LOG_TEXT");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.TimeEdit).HasColumnName("TIME_EDIT");
            entity.Property(e => e.TimeFinish).HasColumnName("TIME_FINISH");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<LogMessage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LOG_MESS__3214EC27A0DF12FF");

            entity.ToTable("LOG_MESSAGE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Channel)
                .HasMaxLength(255)
                .HasColumnName("CHANNEL");
            entity.Property(e => e.Content).HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileId).HasColumnName("FILE_ID");
            entity.Property(e => e.GivenName)
                .HasMaxLength(255)
                .HasColumnName("GIVEN_NAME");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.Image)
                .HasMaxLength(1000)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsFile).HasColumnName("IS_FILE");
            entity.Property(e => e.TimeChat).HasColumnName("TIME_CHAT");
            entity.Property(e => e.Url)
                .HasMaxLength(255)
                .HasColumnName("URL");
            entity.Property(e => e.User)
                .HasMaxLength(255)
                .HasColumnName("USER");
        });

        modelBuilder.Entity<LogisticTracking>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("LOGISTIC_TRACKING");

            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.AddressText).HasColumnName("ADDRESS_TEXT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DriverInfo)
                .HasMaxLength(255)
                .HasColumnName("DRIVER_INFO");
            entity.Property(e => e.GpsData)
                .IsUnicode(false)
                .HasColumnName("GPS_DATA");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(255)
                .HasColumnName("LICENSE_PLATE");
            entity.Property(e => e.PoB2bCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_B2B_CODE");
            entity.Property(e => e.ShipmentCode)
                .HasMaxLength(255)
                .HasColumnName("SHIPMENT_CODE");
            entity.Property(e => e.TimeActivity).HasColumnName("TIME_ACTIVITY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LotProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LOT_PROD__3214EC2766469DF4");

            entity.ToTable("LOT_PRODUCT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BarCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BAR_CODE");
            entity.Property(e => e.Cost)
                .HasColumnType("money")
                .HasColumnName("COST");
            entity.Property(e => e.CostMedium)
                .HasColumnType("money")
                .HasColumnName("COST_MEDIUM");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CustomFee)
                .HasColumnType("money")
                .HasColumnName("CUSTOM_FEE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount)
                .HasColumnType("money")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.ExpiryDate).HasColumnName("EXPIRY_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.LotProductName)
                .HasMaxLength(255)
                .HasColumnName("LOT_PRODUCT_NAME");
            entity.Property(e => e.ManufactureDate)
                .HasComment("Ngày sản xuất")
                .HasColumnName("MANUFACTURE_DATE");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.Origin)
                .HasMaxLength(255)
                .HasComment("xuất xứ")
                .HasColumnName("ORIGIN");
            entity.Property(e => e.Packing)
                .HasMaxLength(255)
                .HasColumnName("PACKING");
            entity.Property(e => e.PathImg)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PATH_IMG");
            entity.Property(e => e.PoundAge)
                .HasColumnType("money")
                .HasColumnName("POUND_AGE");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.Store).HasColumnName("STORE");
            entity.Property(e => e.Supplier)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SUPPLIER");
            entity.Property(e => e.Tax)
                .HasColumnType("money")
                .HasColumnName("TAX");
            entity.Property(e => e.TaxMedium)
                .HasColumnType("money")
                .HasColumnName("TAX_MEDIUM");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TransferCost)
                .HasColumnType("money")
                .HasColumnName("TRANSFER_COST");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(7)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<LotProductDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__LOT_PROD__3214EC273F60F572");

            entity.ToTable("LOT_PRODUCT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BarCode)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("BAR_CODE");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount).HasColumnName("DISCOUNT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.QrCode)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(7)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MapDataGp>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MAP_DATA__3214EC274CED77EE");

            entity.ToTable("MAP_DATA_GPS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(500)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.GisData).HasColumnName("GIS_DATA");
            entity.Property(e => e.Icon)
                .HasMaxLength(255)
                .HasColumnName("ICON");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsActive).HasColumnName("IS_ACTIVE");
            entity.Property(e => e.IsDefault).HasColumnName("IS_DEFAULT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MakerGps)
                .HasMaxLength(255)
                .HasColumnName("MAKER_GPS");
            entity.Property(e => e.MapCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("MAP_CODE");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.PolygonGps).HasColumnName("POLYGON_GPS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MapStockProdIn>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MAP_STOC__3214EC278238DB8A");

            entity.ToTable("MAP_STOCK_PROD_IN");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MapId).HasColumnName("MAP_ID");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.ProdCode)
                .HasMaxLength(255)
                .HasColumnName("PROD_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
        });

        modelBuilder.Entity<MappingControllerTable>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MAPPING___3214EC2784D333C6");

            entity.ToTable("MAPPING_CONTROLLER_TABLE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTION");
            entity.Property(e => e.Controller)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CONTROLLER");
            entity.Property(e => e.Table)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TABLE");
        });

        modelBuilder.Entity<MappingMain>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MAPPING___3214EC279AFADF2E");

            entity.ToTable("MAPPING_MAIN");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjNote)
                .HasMaxLength(255)
                .HasColumnName("OBJ_NOTE");
            entity.Property(e => e.ObjRelative)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasComment("(Chính, Hỗ trợ, Bổ sung, Phụ lục)")
                .HasColumnName("OBJ_RELATIVE");
            entity.Property(e => e.ObjRootCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Danh sách tất cả key (Code Y/C đặt hàng, Code Dự án...)")
                .HasColumnName("OBJ_ROOT_CODE");
            entity.Property(e => e.ObjRootType)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_ROOT_TYPE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("PROJECT, PO_BUY, PO_SALE, ORDER, REQ_PRICE")
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MappingModul>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MAPPING___3214EC278066F7FB");

            entity.ToTable("MAPPING_MODUL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
        });

        modelBuilder.Entity<MaterialAttribute>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MATERIAL__3214EC2799279CA2");

            entity.ToTable("MATERIAL_ATTRIBUTE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Attribute)
                .HasMaxLength(100)
                .HasColumnName("ATTRIBUTE");
            entity.Property(e => e.AttributeValue)
                .HasMaxLength(255)
                .HasColumnName("ATTRIBUTE_VALUE");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ProductId).HasColumnName("PRODUCT_ID");
        });

        modelBuilder.Entity<MaterialFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MATERIAL__3214EC2775038F7D");

            entity.ToTable("MATERIAL_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Fomart)
                .HasMaxLength(255)
                .HasColumnName("FOMART");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(512)
                .HasColumnName("NAME");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Soure)
                .HasMaxLength(255)
                .HasColumnName("SOURE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MaterialInvoice>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MATERIAL__3214EC27A74619A9");

            entity.ToTable("MATERIAL_INVOICE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.ContractId).HasColumnName("CONTRACT_ID");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(100)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Reason).HasColumnName("REASON");
            entity.Property(e => e.Title)
                .HasMaxLength(250)
                .HasColumnName("TITLE");
            entity.Property(e => e.TotalPay).HasColumnName("TOTAL_PAY");
            entity.Property(e => e.Type).HasColumnName("TYPE");
        });

        modelBuilder.Entity<MaterialPaymentTicket>(entity =>
        {
            entity.HasKey(e => e.PaymentTickitId).HasName("PK__MATERIAL__545E58DDDB56CC41");

            entity.ToTable("MATERIAL_PAYMENT_TICKET");

            entity.Property(e => e.PaymentTickitId).HasColumnName("PAYMENT_TICKIT_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(20)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.MoneyTotal)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("MONEY_TOTAL");
            entity.Property(e => e.PayCode)
                .HasMaxLength(100)
                .HasColumnName("PAY_CODE");
            entity.Property(e => e.PayNextMoney)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PAY_NEXT_MONEY");
            entity.Property(e => e.PayNextTime).HasColumnName("PAY_NEXT_TIME");
            entity.Property(e => e.PayNote)
                .HasMaxLength(255)
                .HasColumnName("PAY_NOTE");
            entity.Property(e => e.PayObjId)
                .HasMaxLength(100)
                .HasColumnName("PAY_OBJ_ID");
            entity.Property(e => e.PayObjType)
                .HasMaxLength(50)
                .HasColumnName("PAY_OBJ_TYPE");
            entity.Property(e => e.PayOfWay)
                .HasMaxLength(50)
                .HasColumnName("PAY_OF_WAY");
            entity.Property(e => e.PayRemain)
                .HasMaxLength(100)
                .HasColumnName("PAY_REMAIN");
            entity.Property(e => e.PayTimeCnt).HasColumnName("PAY_TIME_CNT");
            entity.Property(e => e.PayTitle)
                .HasMaxLength(255)
                .HasColumnName("PAY_TITLE");
            entity.Property(e => e.PayType).HasColumnName("PAY_TYPE");
            entity.Property(e => e.PayerId)
                .HasMaxLength(100)
                .HasColumnName("PAYER_ID");
            entity.Property(e => e.ReceiperId)
                .HasMaxLength(100)
                .HasColumnName("RECEIPER_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MaterialProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MATERIAL__3214EC271C48007D");

            entity.ToTable("MATERIAL_PRODUCT");

            entity.HasIndex(e => e.ProductCode, "IX_MATERIAL_PRODUCT").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Accessory).HasColumnName("ACCESSORY");
            entity.Property(e => e.Barcode).HasColumnName("BARCODE");
            entity.Property(e => e.Brand)
                .HasMaxLength(255)
                .HasColumnName("BRAND");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.ExpireDate).HasColumnName("EXPIRE_DATE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.ForecastInStock)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("FORECAST_IN_STOCK");
            entity.Property(e => e.ForecastTime).HasColumnName("FORECAST_TIME");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(50)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.High)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("HIGH");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.ImpType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMP_TYPE");
            entity.Property(e => e.InStock)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("IN_STOCK");
            entity.Property(e => e.IndustryClass)
                .HasMaxLength(255)
                .HasColumnName("INDUSTRY_CLASS");
            entity.Property(e => e.Inheritance)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("INHERITANCE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Json)
                .HasMaxLength(255)
                .HasColumnName("JSON");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.Label)
                .HasMaxLength(255)
                .HasColumnName("LABEL");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationTxt)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TXT");
            entity.Property(e => e.Long)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LONG");
            entity.Property(e => e.Material)
                .HasMaxLength(1000)
                .HasColumnName("MATERIAL");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Packing)
                .HasMaxLength(255)
                .HasColumnName("PACKING");
            entity.Property(e => e.Pattern)
                .HasMaxLength(1000)
                .HasColumnName("PATTERN");
            entity.Property(e => e.PriceCostAirline)
                .HasComment("Giá đại lý đường bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_AIRLINE");
            entity.Property(e => e.PriceCostCatelogue)
                .HasComment("Giá đại lý catalogue")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_CATELOGUE");
            entity.Property(e => e.PriceCostSea)
                .HasComment("Giá đại lý đường biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_SEA");
            entity.Property(e => e.PricePerM)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE_PER_M");
            entity.Property(e => e.PricePerM2)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE_PER_M2");
            entity.Property(e => e.PriceRetailBuild)
                .HasComment("Giá bán lẻ có thi công")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD");
            entity.Property(e => e.PriceRetailBuildAirline)
                .HasComment("Giá bán lẻ có thi công bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailBuildSea)
                .HasComment("Giá bán lẻ có thi công kho,biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_SEA");
            entity.Property(e => e.PriceRetailNoBuild)
                .HasComment("Giá bán lẻ không thi công")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD");
            entity.Property(e => e.PriceRetailNoBuildAirline)
                .HasComment("Giá bán lẻ không thi công bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailNoBuildSea)
                .HasComment("Giá bán lẻ không thi công kho, biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_SEA");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.QrCode).HasColumnName("QR_CODE");
            entity.Property(e => e.Serial)
                .HasMaxLength(255)
                .HasColumnName("SERIAL");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Supplier)
                .HasMaxLength(255)
                .HasColumnName("SUPPLIER");
            entity.Property(e => e.TypeCode)
                .HasMaxLength(50)
                .HasColumnName("TYPE_CODE");
            entity.Property(e => e.TypeCode2)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TYPE_CODE2");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitWeight)
                .HasMaxLength(255)
                .HasColumnName("UNIT_WEIGHT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT");
            entity.Property(e => e.Wide)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WIDE");
        });

        modelBuilder.Entity<MaterialProductDeploy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MATERIAL_PRODUCT_DEPLOY");

            entity.Property(e => e.Accessory).HasColumnName("ACCESSORY");
            entity.Property(e => e.Barcode)
                .HasMaxLength(1000)
                .HasColumnName("BARCODE");
            entity.Property(e => e.Brand)
                .HasMaxLength(255)
                .HasColumnName("BRAND");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.ForecastInStock)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("FORECAST_IN_STOCK");
            entity.Property(e => e.ForecastTime).HasColumnName("FORECAST_TIME");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(50)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.GroupCodeName)
                .HasMaxLength(255)
                .HasColumnName("GROUP_CODE_NAME");
            entity.Property(e => e.High)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("HIGH");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.ImpType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMP_TYPE");
            entity.Property(e => e.InStock)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("IN_STOCK");
            entity.Property(e => e.IndustryClass)
                .HasMaxLength(255)
                .HasColumnName("INDUSTRY_CLASS");
            entity.Property(e => e.Inheritance)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("INHERITANCE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Json)
                .HasMaxLength(255)
                .HasColumnName("JSON");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.Label)
                .HasMaxLength(255)
                .HasColumnName("LABEL");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationTxt)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TXT");
            entity.Property(e => e.Long)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LONG");
            entity.Property(e => e.Material)
                .HasMaxLength(1000)
                .HasColumnName("MATERIAL");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Packing)
                .HasMaxLength(255)
                .HasColumnName("PACKING");
            entity.Property(e => e.Pattern)
                .HasMaxLength(1000)
                .HasColumnName("PATTERN");
            entity.Property(e => e.PriceCostAirline)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_AIRLINE");
            entity.Property(e => e.PriceCostCatelogue)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_CATELOGUE");
            entity.Property(e => e.PriceCostSea)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_SEA");
            entity.Property(e => e.PricePerM)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE_PER_M");
            entity.Property(e => e.PricePerM2)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE_PER_M2");
            entity.Property(e => e.PriceRetailBuild)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD");
            entity.Property(e => e.PriceRetailBuildAirline)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailBuildSea)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_SEA");
            entity.Property(e => e.PriceRetailNoBuild)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD");
            entity.Property(e => e.PriceRetailNoBuildAirline)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailNoBuildSea)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_SEA");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.QrCode)
                .HasMaxLength(1000)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.Serial)
                .HasMaxLength(255)
                .HasColumnName("SERIAL");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Supplier)
                .HasMaxLength(255)
                .HasColumnName("SUPPLIER");
            entity.Property(e => e.TypeCode)
                .HasMaxLength(50)
                .HasColumnName("TYPE_CODE");
            entity.Property(e => e.TypeCode2)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TYPE_CODE2");
            entity.Property(e => e.TypeCodeName)
                .HasMaxLength(255)
                .HasColumnName("TYPE_CODE_NAME");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitName)
                .HasMaxLength(255)
                .HasColumnName("UNIT_NAME");
            entity.Property(e => e.UnitNameWeight)
                .HasMaxLength(255)
                .HasColumnName("UNIT_NAME_WEIGHT");
            entity.Property(e => e.UnitWeight)
                .HasMaxLength(255)
                .HasColumnName("UNIT_WEIGHT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT");
            entity.Property(e => e.Wide)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WIDE");
        });

        modelBuilder.Entity<MaterialProductGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MATERIAL__3214EC27662794FF");

            entity.ToTable("MATERIAL_PRODUCT_GROUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.GroupType)
                .HasMaxLength(50)
                .HasColumnName("GROUP_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Level).HasColumnName("LEVEL");
            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .HasColumnName("NAME");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MaterialStore>(entity =>
        {
            entity.HasKey(e => e.StoreId).HasName("PK__MATERIAL__F5E247F15D94B5B0");

            entity.ToTable("MATERIAL_STORE");

            entity.Property(e => e.StoreId).HasColumnName("STORE_ID");
            entity.Property(e => e.Area)
                .HasMaxLength(255)
                .HasColumnName("AREA");
            entity.Property(e => e.BranchId).HasColumnName("BRANCH_ID");
            entity.Property(e => e.CountFloor).HasColumnName("COUNT_FLOOR");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.District).HasColumnName("DISTRICT");
            entity.Property(e => e.Extend)
                .HasMaxLength(255)
                .HasColumnName("EXTEND");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Location)
                .HasMaxLength(250)
                .HasColumnName("LOCATION");
            entity.Property(e => e.Province).HasColumnName("PROVINCE");
            entity.Property(e => e.QrCode)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(100)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.StoreName)
                .HasMaxLength(250)
                .HasColumnName("STORE_NAME");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .HasColumnName("USER_ID");
            entity.Property(e => e.Ward).HasColumnName("WARD");
        });

        modelBuilder.Entity<MaterialStoreBatchGood>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MATERIAL__3214EC27C36929CC");

            entity.ToTable("MATERIAL_STORE_BATCH_GOODS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Barcode)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("BARCODE");
            entity.Property(e => e.BlockCode)
                .HasMaxLength(100)
                .HasColumnName("BLOCK_CODE");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.Cost).HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(100)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DateExpire).HasColumnName("DATE_EXPIRE");
            entity.Property(e => e.DateProduce).HasColumnName("DATE_PRODUCE");
            entity.Property(e => e.DateReiceive).HasColumnName("DATE_REICEIVE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Madein)
                .HasMaxLength(100)
                .HasColumnName("MADEIN");
            entity.Property(e => e.Name)
                .HasMaxLength(250)
                .HasColumnName("NAME");
            entity.Property(e => e.Packing)
                .HasMaxLength(500)
                .HasColumnName("PACKING");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.Sale).HasColumnName("SALE");
            entity.Property(e => e.StoreId).HasColumnName("STORE_ID");
            entity.Property(e => e.SupplierId).HasColumnName("SUPPLIER_ID");
            entity.Property(e => e.Total).HasColumnName("TOTAL");
            entity.Property(e => e.Unit)
                .HasMaxLength(250)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Vat).HasColumnName("VAT");
        });

        modelBuilder.Entity<MaterialType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MATERIAL__3214EC27A12E7BF7");

            entity.ToTable("MATERIAL_TYPE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .HasColumnName("NAME");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MeetingSchedule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__APP_VEND__E99CB38515F0FDBA");

            entity.ToTable("MEETING_SCHEDULE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountZoom)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACCOUNT_ZOOM");
            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_COLOR");
            entity.Property(e => e.BackgroundImage)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_IMAGE");
            entity.Property(e => e.Comment).HasColumnName("COMMENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonCanvas).HasColumnName("JSON_CANVAS");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.JsonRef).HasColumnName("JSON_REF");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.ListUserApproved).HasColumnName("LIST_USER_APPROVED");
            entity.Property(e => e.MeetingId).HasColumnName("MEETING_ID");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MessageActivity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MESSAGE___3214EC2775826356");

            entity.ToTable("MESSAGE_ACTIVITY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActFrom)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACT_FROM");
            entity.Property(e => e.ActTo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACT_TO");
            entity.Property(e => e.Command)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("COMMAND");
            entity.Property(e => e.CommandTime).HasColumnName("COMMAND_TIME");
            entity.Property(e => e.Confirm)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CONFIRM");
            entity.Property(e => e.ConfirmTime).HasColumnName("CONFIRM_TIME");
            entity.Property(e => e.ConfirmedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CONFIRMED_BY");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.User)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER");
        });

        modelBuilder.Entity<MobiFunctionJobcardList>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MOBI_FUN__3214EC27B8816287");

            entity.ToTable("MOBI_FUNCTION_JOBCARD_LIST");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Desc).HasColumnName("DESC");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Value)
                .HasMaxLength(255)
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<MobileAppFunction>(entity =>
        {
            entity.HasKey(e => e.AppFunctionId).HasName("PK__MOBILE_A__A5B8F15332EC4AAF");

            entity.ToTable("MOBILE_APP_FUNCTION");

            entity.Property(e => e.AppFunctionId).HasColumnName("APP_FUNCTION_ID");
            entity.Property(e => e.ApplicationCode)
                .HasMaxLength(50)
                .HasColumnName("APPLICATION_CODE");
            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
        });

        modelBuilder.Entity<MobileFunction>(entity =>
        {
            entity.HasKey(e => e.FunctionCode).HasName("PK__MOBILE_F__157D5A598C921F7E");

            entity.ToTable("MOBILE_FUNCTION");

            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.FunctionId)
                .ValueGeneratedOnAdd()
                .HasColumnName("FUNCTION_ID");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(50)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");

            entity.HasOne(d => d.ParentCodeNavigation).WithMany(p => p.InverseParentCodeNavigation)
                .HasForeignKey(d => d.ParentCode)
                .HasConstraintName("FK__MOBILE_FU__PAREN__1AFEE62D");
        });

        modelBuilder.Entity<MobilePermission>(entity =>
        {
            entity.HasKey(e => e.PermissionId).HasName("PK__MOBILE_P__EB3C611E6F0EB64E");

            entity.ToTable("MOBILE_PERMISSION");

            entity.Property(e => e.PermissionId).HasColumnName("PERMISSION_ID");
            entity.Property(e => e.ApplicationCode)
                .HasMaxLength(50)
                .HasColumnName("APPLICATION_CODE");
            entity.Property(e => e.ExpiredDate).HasColumnName("EXPIRED_DATE");
            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
            entity.Property(e => e.GroupUserCode)
                .HasMaxLength(50)
                .HasColumnName("GROUP_USER_CODE");
            entity.Property(e => e.Json).HasColumnName("JSON");
            entity.Property(e => e.ResourceCode)
                .HasMaxLength(100)
                .HasColumnName("RESOURCE_CODE");
            entity.Property(e => e.RoleId)
                .HasMaxLength(50)
                .HasColumnName("ROLE_ID");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");

            entity.HasOne(d => d.FunctionCodeNavigation).WithMany(p => p.MobilePermissions)
                .HasForeignKey(d => d.FunctionCode)
                .HasConstraintName("FK_MOBILE_PERMISSION_MOBILE_FUNCTION");

            entity.HasOne(d => d.GroupUserCodeNavigation).WithMany(p => p.MobilePermissions)
                .HasForeignKey(d => d.GroupUserCode)
                .HasConstraintName("FK_MOBILE_PERMISSION_AD_GROUP_USER");

            entity.HasOne(d => d.ResourceCodeNavigation).WithMany(p => p.MobilePermissions)
                .HasForeignKey(d => d.ResourceCode)
                .HasConstraintName("FK_MOBILE_PERMISSION_MOBILE_RESOURCE");

            entity.HasOne(d => d.Role).WithMany(p => p.MobilePermissions)
                .HasForeignKey(d => d.RoleId)
                .HasConstraintName("FK_MOBILE_PERMISSION_ASP_NET_ROLES");
        });

        modelBuilder.Entity<MobilePrivilege>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MOBILE_PRIVILEGE");

            entity.Property(e => e.FunctionCode)
                .HasMaxLength(50)
                .HasColumnName("FUNCTION_CODE");
            entity.Property(e => e.PrivilegeId)
                .ValueGeneratedOnAdd()
                .HasColumnName("PRIVILEGE_ID");
            entity.Property(e => e.ResourceCode)
                .HasMaxLength(100)
                .HasColumnName("RESOURCE_CODE");
        });

        modelBuilder.Entity<MobileResource>(entity =>
        {
            entity.HasKey(e => e.ResourceCode).HasName("PK__MOBILE_R__094C9AB2546E0F15");

            entity.ToTable("MOBILE_RESOURCE");

            entity.Property(e => e.ResourceCode)
                .HasMaxLength(100)
                .HasColumnName("RESOURCE_CODE");
            entity.Property(e => e.Api)
                .HasMaxLength(255)
                .HasColumnName("API");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(2000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Json).HasColumnName("JSON");
            entity.Property(e => e.Ord).HasColumnName("ORD");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(100)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.ResourceId)
                .ValueGeneratedOnAdd()
                .HasColumnName("RESOURCE_ID");
            entity.Property(e => e.Scope).HasColumnName("SCOPE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Style)
                .HasMaxLength(10)
                .HasColumnName("STYLE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<MrpInspectionClinkerBroken>(entity =>
        {
            entity.ToTable("MRP_INSPECTION_CLINKER_BROKEN");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Origin)
                .HasMaxLength(255)
                .HasColumnName("ORIGIN");
            entity.Property(e => e.Serial)
                .HasMaxLength(255)
                .HasColumnName("SERIAL");
            entity.Property(e => e.TechStatus)
                .HasMaxLength(255)
                .HasColumnName("TECH_STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpInspectionClinkerInput>(entity =>
        {
            entity.ToTable("MRP_INSPECTION_CLINKER_INPUT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ClinkerType)
                .HasMaxLength(255)
                .HasColumnName("CLINKER_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.NumInput)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("NUM_INPUT");
            entity.Property(e => e.NumSuggest)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("NUM_SUGGEST");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpInspectionDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MRP_INSPECTION_DETAIL");

            entity.Property(e => e.CapacityCreated)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CAPACITY_CREATED");
            entity.Property(e => e.CapacityInspect)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CAPACITY_INSPECT");
            entity.Property(e => e.CapacityUnit)
                .HasMaxLength(255)
                .HasColumnName("CAPACITY_UNIT");
            entity.Property(e => e.CompletionDate).HasColumnName("COMPLETION_DATE");
            entity.Property(e => e.Conclusion)
                .HasMaxLength(255)
                .HasColumnName("CONCLUSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DateCreate).HasColumnName("DATE_CREATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ExpansionRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXPANSION_RATE");
            entity.Property(e => e.ExpansionValue)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXPANSION_VALUE");
            entity.Property(e => e.ExpireDate).HasColumnName("EXPIRE_DATE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.InnerInspection)
                .HasMaxLength(255)
                .HasColumnName("INNER_INSPECTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ManufacturingDate).HasColumnName("MANUFACTURING_DATE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOTE");
            entity.Property(e => e.Origin)
                .HasMaxLength(255)
                .HasColumnName("ORIGIN");
            entity.Property(e => e.OuterInspection)
                .HasMaxLength(255)
                .HasColumnName("OUTER_INSPECTION");
            entity.Property(e => e.PressureTest)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRESSURE_TEST");
            entity.Property(e => e.PressureUnit)
                .HasMaxLength(255)
                .HasColumnName("PRESSURE_UNIT");
            entity.Property(e => e.PressureWork)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRESSURE_WORK");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.Serial)
                .HasMaxLength(255)
                .HasColumnName("SERIAL");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WeightCreated)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT_CREATED");
            entity.Property(e => e.WeightInspect)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT_INSPECT");
            entity.Property(e => e.WeightUnit)
                .HasMaxLength(255)
                .HasColumnName("WEIGHT_UNIT");
            entity.Property(e => e.WeightWater)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT_WATER");
        });

        modelBuilder.Entity<MrpInspectionHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_INSP__3214EC273A7343CE");

            entity.ToTable("MRP_INSPECTION_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Customer)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliveryDateEst).HasColumnName("DELIVERY_DATE_EST");
            entity.Property(e => e.DeliveryDateReal).HasColumnName("DELIVERY_DATE_REAL");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KcsCode)
                .HasMaxLength(255)
                .HasColumnName("KCS_CODE");
            entity.Property(e => e.KcsDate).HasColumnName("KCS_DATE");
            entity.Property(e => e.KcsExcuter)
                .HasMaxLength(255)
                .HasColumnName("KCS_EXCUTER");
            entity.Property(e => e.KcsTitle)
                .HasMaxLength(255)
                .HasColumnName("KCS_TITLE");
            entity.Property(e => e.Receiver)
                .HasMaxLength(255)
                .HasColumnName("RECEIVER");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.StoreKeeper)
                .HasMaxLength(255)
                .HasColumnName("STORE_KEEPER");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpInspectionItemRepairDetail>(entity =>
        {
            entity.ToTable("MRP_INSPECTION_ITEM_REPAIR_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemReplaceDt).HasColumnName("ITEM_REPLACE_DT");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpKcsTicketDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_KCS___3214EC27D538DC61");

            entity.ToTable("MRP_KCS_TICKET_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ExpireDate).HasColumnName("EXPIRE_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KcsCode)
                .HasMaxLength(255)
                .HasColumnName("KCS_CODE");
            entity.Property(e => e.PressureUnit)
                .HasMaxLength(255)
                .HasColumnName("PRESSURE_UNIT");
            entity.Property(e => e.PressureValue)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRESSURE_VALUE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.PurityUnit)
                .HasMaxLength(255)
                .HasColumnName("PURITY_UNIT");
            entity.Property(e => e.PurityValue)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PURITY_VALUE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpKcsTicketHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_KCS___3214EC27A92CC37A");

            entity.ToTable("MRP_KCS_TICKET_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KcsCode)
                .HasMaxLength(255)
                .HasColumnName("KCS_CODE");
            entity.Property(e => e.KcsDate).HasColumnName("KCS_DATE");
            entity.Property(e => e.KcsExcuter)
                .HasMaxLength(255)
                .HasColumnName("KCS_EXCUTER");
            entity.Property(e => e.KcsTitle)
                .HasMaxLength(255)
                .HasColumnName("KCS_TITLE");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpOrderDt>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_ORDE__3214EC27BF476AEE");

            entity.ToTable("MRP_ORDER_DT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Item)
                .HasMaxLength(255)
                .HasColumnName("ITEM");
            entity.Property(e => e.ItemReplaceDt).HasColumnName("ITEM_REPLACE_DT");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.OrderCode)
                .HasMaxLength(255)
                .HasColumnName("ORDER_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpOrderHd>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_ORDE__3214EC2785E3C88F");

            entity.ToTable("MRP_ORDER_HD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AddressDelivery)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS_DELIVERY");
            entity.Property(e => e.Contact)
                .HasMaxLength(255)
                .HasColumnName("CONTACT");
            entity.Property(e => e.Contacter)
                .HasMaxLength(255)
                .HasColumnName("CONTACTER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CustomerCode)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER_CODE");
            entity.Property(e => e.CustomerTitle)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER_TITLE");
            entity.Property(e => e.DateOrdered).HasColumnName("DATE_ORDERED");
            entity.Property(e => e.DateReceived).HasColumnName("DATE_RECEIVED");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .HasColumnName("EMAIL");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.OrderCode)
                .HasMaxLength(255)
                .HasColumnName("ORDER_CODE");
            entity.Property(e => e.Payment)
                .HasMaxLength(255)
                .HasColumnName("PAYMENT");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(255)
                .HasColumnName("PHONE_NUMBER");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpPumpFrameTicket>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_PUMP__3214EC271540A1B5");

            entity.ToTable("MRP_PUMP_FRAME_TICKET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ProductTime).HasColumnName("PRODUCT_TIME");
            entity.Property(e => e.PumpFrameCode)
                .HasMaxLength(255)
                .HasColumnName("PUMP_FRAME_CODE");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpPumpItemDt>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_PUMP__3214EC27CF4600DC");

            entity.ToTable("MRP_PUMP_ITEM_DT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Item)
                .HasMaxLength(255)
                .HasColumnName("ITEM");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpRepairDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_REPA__3214EC27FD614295");

            entity.ToTable("MRP_REPAIR_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemReplaceDt).HasColumnName("ITEM_REPLACE_DT");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpRepairHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_REPA__3214EC2778540E01");

            entity.ToTable("MRP_REPAIR_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ImpCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMP_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.RepairDate).HasColumnName("REPAIR_DATE");
            entity.Property(e => e.Repairer)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("REPAIRER");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<MrpTransportAttrext>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MRP_TRANSPORT_ATTREXT");

            entity.Property(e => e.AttrCode)
                .HasMaxLength(255)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.TransportCode)
                .HasMaxLength(255)
                .HasColumnName("TRANSPORT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<MrpWeighingTicket>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__MRP_WEIG__3214EC2784FA61CC");

            entity.ToTable("MRP_WEIGHING_TICKET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CustomerCode)
                .HasMaxLength(255)
                .HasColumnName("CUSTOMER_CODE");
            entity.Property(e => e.DateGross).HasColumnName("DATE_GROSS");
            entity.Property(e => e.DateNet).HasColumnName("DATE_NET");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Item)
                .HasMaxLength(255)
                .HasColumnName("ITEM");
            entity.Property(e => e.MassGood)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("MASS_GOOD");
            entity.Property(e => e.MassGross)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("MASS_GROSS");
            entity.Property(e => e.MassNet)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("MASS_NET");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.PlateCar)
                .HasMaxLength(255)
                .HasColumnName("PLATE_CAR");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Tec)
                .HasMaxLength(255)
                .HasColumnName("TEC");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WeighCode)
                .HasMaxLength(255)
                .HasColumnName("WEIGH_CODE");
            entity.Property(e => e.WeighTitle)
                .HasMaxLength(255)
                .HasColumnName("WEIGH_TITLE");
        });

        modelBuilder.Entity<MrtTransportHd>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("MRT_TRANSPORT_HD");

            entity.Property(e => e.CntItemBack)
                .HasMaxLength(255)
                .HasColumnName("CNT_ITEM_BACK");
            entity.Property(e => e.CntItemGo)
                .HasMaxLength(255)
                .HasColumnName("CNT_ITEM_GO");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliveryOrderLst).HasColumnName("DELIVERY_ORDER_LST");
            entity.Property(e => e.Driver)
                .HasMaxLength(255)
                .HasColumnName("DRIVER");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemType)
                .HasMaxLength(255)
                .HasColumnName("ITEM_TYPE");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Payment)
                .HasMaxLength(255)
                .HasColumnName("PAYMENT");
            entity.Property(e => e.PlateCar)
                .HasMaxLength(255)
                .HasColumnName("PLATE_CAR");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TrackWay)
                .HasMaxLength(255)
                .HasColumnName("TRACK_WAY");
            entity.Property(e => e.TransportCode)
                .HasMaxLength(255)
                .HasColumnName("TRANSPORT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<NodeInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__NODE_INF__3214EC27E759BDF5");

            entity.ToTable("NODE_INFO");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(500)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.District)
                .HasMaxLength(255)
                .HasColumnName("DISTRICT");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MarkerGps)
                .HasMaxLength(255)
                .HasColumnName("MARKER_GPS");
            entity.Property(e => e.NodeCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NODE_CODE");
            entity.Property(e => e.NodeName)
                .HasMaxLength(255)
                .HasColumnName("NODE_NAME");
            entity.Property(e => e.PolygonGps).HasColumnName("POLYGON_GPS");
            entity.Property(e => e.Province)
                .HasMaxLength(255)
                .HasColumnName("PROVINCE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Ward)
                .HasMaxLength(255)
                .HasColumnName("WARD");
        });

        modelBuilder.Entity<Notification>(entity =>
        {
            entity.HasKey(e => e.NotifyId).HasName("PK__NOTIFICA__33BCA7C85929D114");

            entity.ToTable("NOTIFICATION");

            entity.Property(e => e.NotifyId)
                .HasComment("Customer Id")
                .HasColumnName("NOTIFY_ID");
            entity.Property(e => e.ConfirmTime).HasColumnName("CONFIRM_TIME");
            entity.Property(e => e.Content).HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DateEvent).HasColumnName("DATE_EVENT");
            entity.Property(e => e.DateWarning).HasColumnName("DATE_WARNING");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsWarning).HasColumnName("IS_WARNING");
            entity.Property(e => e.LstContractCode)
                .HasMaxLength(100)
                .HasColumnName("LST_CONTRACT_CODE");
            entity.Property(e => e.NotifyCode)
                .HasMaxLength(100)
                .HasColumnName("NOTIFY_CODE");
            entity.Property(e => e.Receiver)
                .HasMaxLength(255)
                .HasColumnName("RECEIVER");
            entity.Property(e => e.ReceiverConfirm)
                .HasMaxLength(50)
                .HasColumnName("RECEIVER_CONFIRM");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<NotificationManager>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__NOTIFICA__3214EC278DB81C31");

            entity.ToTable("NOTIFICATION_MANAGER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.NotifyCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOTIFY_CODE");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<NotificationObject>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__NOTIFICA__3214EC2707A7B862");

            entity.ToTable("NOTIFICATION_OBJECT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsViewed).HasColumnName("IS_VIEWED");
            entity.Property(e => e.ListUser)
                .HasMaxLength(1000)
                .HasColumnName("LIST_USER");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(255)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TYPE");
        });

        modelBuilder.Entity<NotificationSetting>(entity =>
        {
            entity.ToTable("NOTIFICATION_SETTING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active).HasColumnName("ACTIVE");
            entity.Property(e => e.Body).HasColumnName("BODY");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(255)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateTime).HasColumnName("CREATE_TIME");
            entity.Property(e => e.DeleteBy)
                .HasMaxLength(255)
                .HasColumnName("DELETE_BY");
            entity.Property(e => e.DeleteTime).HasColumnName("DELETE_TIME");
            entity.Property(e => e.Interval).HasColumnName("INTERVAL");
            entity.Property(e => e.IsDelete).HasColumnName("IS_DELETE");
            entity.Property(e => e.NotifyCode)
                .HasMaxLength(255)
                .HasColumnName("NOTIFY_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<NumberPhoneDn>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("NUMBER_PHONE_DN");

            entity.Property(e => e.ChứcDanh)
                .HasMaxLength(255)
                .HasColumnName("CHỨC DANH");
            entity.Property(e => e.HọTên)
                .HasMaxLength(255)
                .HasColumnName("HỌ TÊN ");
            entity.Property(e => e.TênTrường)
                .HasMaxLength(255)
                .HasColumnName("TÊN TRƯỜNG");
            entity.Property(e => e.ĐiệnThoại)
                .HasMaxLength(255)
                .HasColumnName("ĐIỆN THOẠI");
            entity.Property(e => e.ĐịaChỉ)
                .HasMaxLength(255)
                .HasColumnName("ĐỊA CHỈ ");
        });

        modelBuilder.Entity<ObeAccount>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OBE_ACCO__3214EC2746EDFEA2");

            entity.ToTable("OBE_ACCOUNT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Password)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PASSWORD");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<ObeAiRecognitionTracking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OBE_AI_R__3214EC2712964153");

            entity.ToTable("OBE_AI_RECOGNITION_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeviceId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE_ID");
            entity.Property(e => e.FaceId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FACE_ID");
            entity.Property(e => e.ImgPath)
                .HasMaxLength(255)
                .HasColumnName("IMG_PATH");
            entity.Property(e => e.ObjName)
                .HasMaxLength(255)
                .HasColumnName("OBJ_NAME");
        });

        modelBuilder.Entity<ObeListDevice>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OBE_LIST__3214EC27AD8BCAB9");

            entity.ToTable("OBE_LIST_DEVICE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Account)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACCOUNT");
            entity.Property(e => e.Describe)
                .HasMaxLength(255)
                .HasColumnName("DESCRIBE");
            entity.Property(e => e.DeviceId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE_ID");
            entity.Property(e => e.DeviceTitle)
                .HasMaxLength(150)
                .HasColumnName("DEVICE_TITLE");
            entity.Property(e => e.DeviceType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE_TYPE");
            entity.Property(e => e.PositionDevice)
                .HasMaxLength(255)
                .HasColumnName("POSITION_DEVICE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Vendor)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("VENDOR");
        });

        modelBuilder.Entity<ObjectActivityInstanceNote>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OBJECT_A__3214EC27F2C22AB7");

            entity.ToTable("OBJECT_ACTIVITY_INSTANCE_NOTE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityInstCode)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_INST_CODE");
            entity.Property(e => e.ActivityInstShare)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_INST_SHARE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListUser).HasColumnName("LIST_USER");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectJsonConstraintView).HasColumnName("OBJECT_JSON_CONSTRAINT_VIEW");
            entity.Property(e => e.ObjectJsonData).HasColumnName("OBJECT_JSON_DATA");
            entity.Property(e => e.ObjectJsonDataUser)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_JSON_DATA_USER");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ObjectTypeStatusGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OBJECT_T__3214EC27CAFC11A9");

            entity.ToTable("OBJECT_TYPE_STATUS_GROUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ObjectTypeCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE_CODE");
            entity.Property(e => e.StatusGroupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS_GROUP_CODE");
        });

        modelBuilder.Entity<ObjectiverPackCover>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OBJECTIV__3214EC27416FA279");

            entity.ToTable("OBJECTIVER_PACK_COVER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Located)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("LOCATED");
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .HasColumnName("NAME");
            entity.Property(e => e.ObjPackCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_PACK_CODE");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.SpecSize)
                .HasMaxLength(100)
                .HasColumnName("SPEC_SIZE");
            entity.Property(e => e.Unit)
                .HasMaxLength(100)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasMaxLength(100)
                .HasColumnName("WEIGHT");
        });

        modelBuilder.Entity<ObjectiverPackCoverAsset>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OBJECTIV__3214EC2748E61C27");

            entity.ToTable("OBJECTIVER_PACK_COVER_ASSET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Located)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("LOCATED");
            entity.Property(e => e.Name)
                .HasMaxLength(100)
                .HasColumnName("NAME");
            entity.Property(e => e.ObjPackCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_PACK_CODE");
            entity.Property(e => e.ParentCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PARENT_CODE");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.SpecSize)
                .HasMaxLength(100)
                .HasColumnName("SPEC_SIZE");
            entity.Property(e => e.Unit)
                .HasMaxLength(100)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasMaxLength(100)
                .HasColumnName("WEIGHT");
        });

        modelBuilder.Entity<OperatingVideoTrack>(entity =>
        {
            entity.ToTable("OPERATING_VIDEO_TRACK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Executer)
                .HasMaxLength(255)
                .HasColumnName("EXECUTER");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.OperatingType)
                .HasMaxLength(255)
                .HasColumnName("OPERATING_TYPE");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.Po)
                .HasMaxLength(255)
                .HasColumnName("PO");
            entity.Property(e => e.RecordDevice)
                .HasMaxLength(255)
                .HasColumnName("RECORD_DEVICE");
            entity.Property(e => e.SessionCode).HasColumnName("SESSION_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.VideoName)
                .HasMaxLength(255)
                .HasColumnName("VIDEO_NAME");
        });

        modelBuilder.Entity<OperationLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OPERATIO__3214EC27580E262B");

            entity.ToTable("OPERATION_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(255)
                .HasColumnName("ACTION");
            entity.Property(e => e.Controller)
                .HasMaxLength(255)
                .HasColumnName("CONTROLLER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Ip)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IP");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.RequestBody).HasColumnName("REQUEST_BODY");
            entity.Property(e => e.RequestHeader).HasColumnName("REQUEST_HEADER");
            entity.Property(e => e.Table)
                .HasMaxLength(255)
                .HasColumnName("TABLE");
        });

        modelBuilder.Entity<OperationOnlineSupport>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OPERATIO__3214EC279970D853");

            entity.ToTable("OPERATION_ONLINE_SUPPORT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LastCallTime).HasColumnName("LAST_CALL_TIME");
            entity.Property(e => e.LocationCall)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_CALL");
            entity.Property(e => e.PassWord)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PASS_WORD");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.TitleName)
                .HasMaxLength(255)
                .HasColumnName("TITLE_NAME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_NAME");
            entity.Property(e => e.UserType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_TYPE");
        });

        modelBuilder.Entity<OperationOnlineSupportTracking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__OPERATIO__3214EC27A48E5C6B");

            entity.ToTable("OPERATION_ONLINE_SUPPORT_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Caller)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CALLER");
            entity.Property(e => e.EndedTime).HasColumnName("ENDED_TIME");
            entity.Property(e => e.Receiver)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("RECEIVER");
            entity.Property(e => e.StartedTime).HasColumnName("STARTED_TIME");
            entity.Property(e => e.SvrLocation)
                .HasMaxLength(255)
                .HasColumnName("SVR_LOCATION");
            entity.Property(e => e.SvrSession)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SVR_SESSION");
        });

        modelBuilder.Entity<OrderRequestRaw>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ORDER_RE__3214EC27446FA3D9");

            entity.ToTable("ORDER_REQUEST_RAW");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Content).HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("EMAIL");
            entity.Property(e => e.Ip)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IP");
            entity.Property(e => e.Keyword)
                .HasMaxLength(255)
                .HasColumnName("KEYWORD");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .HasColumnName("PHONE");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(100)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.RequestTime).HasColumnName("REQUEST_TIME");
            entity.Property(e => e.RequestType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("REQUEST_TYPE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<OrderRequestRaw275>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ORDER_RE__3214EC27D71E6670");

            entity.ToTable("ORDER_REQUEST_RAW_27_5");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Content).HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("EMAIL");
            entity.Property(e => e.Ip)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IP");
            entity.Property(e => e.Keyword)
                .HasMaxLength(255)
                .HasColumnName("KEYWORD");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .HasColumnName("PHONE");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(100)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.RequestTime).HasColumnName("REQUEST_TIME");
            entity.Property(e => e.RequestType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("REQUEST_TYPE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<OrderRequestRaw288>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ORDER_RE__3214EC27FA3CC503");

            entity.ToTable("ORDER_REQUEST_RAW_28_8");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Content).HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("EMAIL");
            entity.Property(e => e.Ip)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IP");
            entity.Property(e => e.Keyword)
                .HasMaxLength(255)
                .HasColumnName("KEYWORD");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .HasColumnName("PHONE");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(100)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.RequestTime).HasColumnName("REQUEST_TIME");
            entity.Property(e => e.RequestType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("REQUEST_TYPE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<OrderRequestRawFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ORDER_RE__3214EC2760B616AC");

            entity.ToTable("ORDER_REQUEST_RAW_FILES");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileSize)
                .HasMaxLength(100)
                .HasColumnName("FILE_SIZE");
            entity.Property(e => e.FileType)
                .HasMaxLength(100)
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsMaster).HasColumnName("IS_MASTER");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<OrderRequestRawFiles275>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ORDER_RE__3214EC27AB4D8CF3");

            entity.ToTable("ORDER_REQUEST_RAW_FILES_27_5");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileSize)
                .HasMaxLength(100)
                .HasColumnName("FILE_SIZE");
            entity.Property(e => e.FileType)
                .HasMaxLength(100)
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<OrderSupplierReview>(entity =>
        {
            entity.ToTable("ORDER_SUPPLIER_REVIEW");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CreatorTicket)
                .HasMaxLength(255)
                .HasColumnName("CREATOR_TICKET");
            entity.Property(e => e.DateReviewTicket)
                .HasMaxLength(255)
                .HasColumnName("DATE_REVIEW_TICKET");
            entity.Property(e => e.Flag)
                .HasMaxLength(255)
                .HasColumnName("FLAG");
            entity.Property(e => e.Noted)
                .HasMaxLength(255)
                .HasColumnName("NOTED");
            entity.Property(e => e.ReviewCode)
                .HasMaxLength(255)
                .HasColumnName("REVIEW_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SupplierResultReview).HasColumnName("SUPPLIER_RESULT_REVIEW");
            entity.Property(e => e.TitleReview)
                .HasMaxLength(255)
                .HasColumnName("TITLE_REVIEW");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
        });

        modelBuilder.Entity<OrderSupplierReviewDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ORDER_SUPPLIER_REVIEW_DETAILS");

            entity.Property(e => e.DeliveryTime)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Noted)
                .HasMaxLength(255)
                .HasColumnName("NOTED");
            entity.Property(e => e.PaymentMethod)
                .HasMaxLength(255)
                .HasColumnName("PAYMENT_METHOD");
            entity.Property(e => e.Pricing)
                .HasMaxLength(255)
                .HasColumnName("PRICING");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.QcSystem)
                .HasMaxLength(255)
                .HasColumnName("QC_SYSTEM");
            entity.Property(e => e.Reputation)
                .HasMaxLength(255)
                .HasColumnName("REPUTATION");
            entity.Property(e => e.ResultReview)
                .HasMaxLength(255)
                .HasColumnName("RESULT_REVIEW");
            entity.Property(e => e.ReviewCode)
                .HasMaxLength(255)
                .HasColumnName("REVIEW_CODE");
            entity.Property(e => e.SupplierCode)
                .HasMaxLength(255)
                .HasColumnName("SUPPLIER_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
        });

        modelBuilder.Entity<OtpManger>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("OTP_MANGER");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Otp)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("OTP");
            entity.Property(e => e.PhoneNumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PHONE_NUMBER");
            entity.Property(e => e.UserName)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<PAreaCategory>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("P_AREA_CATEGORY");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PAreaCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("P_AREA_CODE");
            entity.Property(e => e.PAreaDescription).HasColumnName("P_AREA_DESCRIPTION");
            entity.Property(e => e.PAreaParent)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("P_AREA_PARENT");
            entity.Property(e => e.PAreaType)
                .HasMaxLength(255)
                .HasColumnName("P_AREA_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PAreaCategoryStore>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("P_AREA_CATEGORY_STORE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.PAreaCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("P_AREA_CODE");
            entity.Property(e => e.PAreaDescription)
                .HasMaxLength(255)
                .HasColumnName("P_AREA_DESCRIPTION");
            entity.Property(e => e.PAreaParent)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("P_AREA_PARENT");
            entity.Property(e => e.PAreaType)
                .HasMaxLength(255)
                .HasColumnName("P_AREA_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PAreaCategoryStoreBk>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("P_AREA_CATEGORY_STORE_BK");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.PAreaCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("P_AREA_CODE");
            entity.Property(e => e.PAreaDescription)
                .HasMaxLength(255)
                .HasColumnName("P_AREA_DESCRIPTION");
            entity.Property(e => e.PAreaParent)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("P_AREA_PARENT");
            entity.Property(e => e.PAreaType)
                .HasMaxLength(255)
                .HasColumnName("P_AREA_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PAreaMapping>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("P_AREA_MAPPING");

            entity.Property(e => e.CategoryCode)
                .HasMaxLength(255)
                .HasColumnName("CATEGORY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonAttr).HasColumnName("JSON_ATTR");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SvgIconData)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PAreaMappingStore>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("P_AREA_MAPPING_STORE");

            entity.Property(e => e.CategoryCode)
                .HasMaxLength(255)
                .HasColumnName("CATEGORY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Deep).HasColumnName("DEEP");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonAttr).HasColumnName("JSON_ATTR");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SvgIconData)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<PAreaMappingStoreBk>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("P_AREA_MAPPING_STORE_BK");

            entity.Property(e => e.CategoryCode)
                .HasMaxLength(255)
                .HasColumnName("CATEGORY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonAttr).HasColumnName("JSON_ATTR");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SvgIconData)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<PAreaMappingStoreNew>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("P_AREA_MAPPING_STORE_NEW");

            entity.Property(e => e.CategoryCode)
                .HasMaxLength(255)
                .HasColumnName("CATEGORY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonAttr).HasColumnName("JSON_ATTR");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SvgIconData)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<PackageObject>(entity =>
        {
            entity.ToTable("PACKAGE_OBJECT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AttrPack).HasColumnName("ATTR_PACK");
            entity.Property(e => e.CurrentPos)
                .HasMaxLength(255)
                .HasColumnName("CURRENT_POS");
            entity.Property(e => e.Level)
                .HasMaxLength(255)
                .HasColumnName("LEVEL");
            entity.Property(e => e.Noted).HasColumnName("NOTED");
            entity.Property(e => e.NumPosition)
                .HasMaxLength(255)
                .HasColumnName("NUM_POSITION");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.PackCodeParent)
                .HasMaxLength(255)
                .HasColumnName("PACK_CODE_PARENT");
            entity.Property(e => e.PackLot)
                .HasMaxLength(255)
                .HasColumnName("PACK_LOT");
            entity.Property(e => e.PackName)
                .HasMaxLength(255)
                .HasColumnName("PACK_NAME");
            entity.Property(e => e.PackType)
                .HasMaxLength(255)
                .HasColumnName("PACK_TYPE");
            entity.Property(e => e.Specs)
                .HasMaxLength(255)
                .HasColumnName("SPECS");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.StatusReady)
                .HasMaxLength(255)
                .HasColumnName("STATUS_READY");
        });

        modelBuilder.Entity<PackageTicketDt>(entity =>
        {
            entity.ToTable("PACKAGE_TICKET_DT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductNumRange)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_NUM_RANGE");
            entity.Property(e => e.StatusProductPallet)
                .HasMaxLength(255)
                .HasColumnName("STATUS_PRODUCT_PALLET");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
        });

        modelBuilder.Entity<PackageTicketHd>(entity =>
        {
            entity.ToTable("PACKAGE_TICKET_HD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Noted).HasColumnName("NOTED");
            entity.Property(e => e.Packager)
                .HasMaxLength(255)
                .HasColumnName("PACKAGER");
            entity.Property(e => e.PackagerTime).HasColumnName("PACKAGER_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TicketCreator)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CREATOR");
            entity.Property(e => e.TicketTimeCreator).HasColumnName("TICKET_TIME_CREATOR");
            entity.Property(e => e.TicketTitle)
                .HasMaxLength(255)
                .HasColumnName("TICKET_TITLE");
        });

        modelBuilder.Entity<PackingType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ATTR_GAL__3214EC277D7F1D30");

            entity.ToTable("PACKING_TYPE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataType)
                .HasMaxLength(255)
                .HasColumnName("DATA_TYPE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Parent)
                .HasMaxLength(255)
                .HasColumnName("PARENT");
            entity.Property(e => e.Size)
                .HasMaxLength(250)
                .HasColumnName("SIZE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<Param4Warning>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PARAM_4___3214EC2723914B01");

            entity.ToTable("PARAM_4_WARNING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AetType)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("AET_TYPE");
            entity.Property(e => e.CatCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromTime).HasColumnName("FROM_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ToTime).HasColumnName("TO_TIME");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PartyAdmissionProfile>(entity =>
        {
            entity.ToTable("PARTY_ADMISSION_PROFILE");

            entity.Property(e => e.Id)
                .HasComment("id - Id")
                .HasColumnName("ID");
            entity.Property(e => e.BirthName)
                .HasMaxLength(100)
                .HasComment("Tên thường dùng ")
                .HasColumnName("BIRTH_NAME");
            entity.Property(e => e.Birthday)
                .HasComment("Ngày sinh - Birthday")
                .HasColumnName("BIRTHDAY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedPlace)
                .HasMaxLength(255)
                .HasComment("Nơi tạo")
                .HasColumnName("CREATED_PLACE");
            entity.Property(e => e.CurrentName)
                .HasMaxLength(100)
                .HasComment("Tên hiên nay")
                .HasColumnName("CURRENT_NAME");
            entity.Property(e => e.Degree)
                .HasMaxLength(50)
                .HasComment("Học hàm")
                .HasColumnName("DEGREE");
            entity.Property(e => e.ForeignLanguage)
                .HasMaxLength(255)
                .HasComment("Ngoại ngữ")
                .HasColumnName("FOREIGN_LANGUAGE");
            entity.Property(e => e.Gender)
                .HasComment("Giới tính - Gender")
                .HasColumnName("GENDER");
            entity.Property(e => e.GeneralEducation)
                .HasMaxLength(50)
                .HasComment("Giáo dục phổ thông")
                .HasColumnName("GENERAL_EDUCATION");
            entity.Property(e => e.HomeTown)
                .HasMaxLength(255)
                .HasComment("Quê quán")
                .HasColumnName("HOME_TOWN");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItDegree)
                .HasMaxLength(255)
                .HasComment("Tin học")
                .HasColumnName("IT_DEGREE");
            entity.Property(e => e.Job)
                .HasMaxLength(255)
                .HasColumnName("JOB");
            entity.Property(e => e.JobEducation)
                .HasMaxLength(255)
                .HasComment("Giáo dục nghề nghiệp")
                .HasColumnName("JOB_EDUCATION");
            entity.Property(e => e.MinorityLanguages)
                .HasMaxLength(255)
                .IsFixedLength()
                .HasComment("Tiếng dân tộc thiểu số")
                .HasColumnName("MINORITY_LANGUAGES");
            entity.Property(e => e.Nation)
                .HasMaxLength(255)
                .HasComment("Dân tộc - Nation")
                .HasColumnName("NATION");
            entity.Property(e => e.PermanentResidence)
                .HasMaxLength(255)
                .HasComment("Hộ khẩu thường trú - PermanentResidence")
                .HasColumnName("PERMANENT_RESIDENCE");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .HasComment("Số điện thoại - Phone")
                .HasColumnName("PHONE");
            entity.Property(e => e.Picture)
                .HasMaxLength(255)
                .HasComment("Id Hình ảnh - Picture")
                .HasColumnName("PICTURE");
            entity.Property(e => e.PlaceBirth)
                .HasMaxLength(255)
                .HasComment("Nơi sinh")
                .HasColumnName("PLACE_BIRTH");
            entity.Property(e => e.PoliticalTheory)
                .HasMaxLength(255)
                .HasComment("Lí luận chính trị")
                .HasColumnName("POLITICAL_THEORY");
            entity.Property(e => e.ProfileLink).HasColumnName("PROFILE_LINK");
            entity.Property(e => e.Religion)
                .HasMaxLength(255)
                .HasComment("Tôn giáo - Religion")
                .HasColumnName("RELIGION");
            entity.Property(e => e.ResumeNumber)
                .HasMaxLength(50)
                .HasComment("Số lí lịch")
                .HasColumnName("RESUME_NUMBER");
            entity.Property(e => e.SelfComment)
                .HasMaxLength(255)
                .HasComment("Tự nhận xét")
                .HasColumnName("SELF_COMMENT");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TemporaryAddress)
                .HasMaxLength(250)
                .HasComment("Địa chỉ tạm trú")
                .HasColumnName("TEMPORARY_ADDRESS");
            entity.Property(e => e.UnderPostGraduateEducation)
                .HasMaxLength(255)
                .HasComment("Giáo dục đại học và sau đại học")
                .HasColumnName("UNDER_POST_GRADUATE_EDUCATION");
            entity.Property(e => e.UserCode).HasColumnName("USER_CODE");
            entity.Property(e => e.Username)
                .HasMaxLength(50)
                .HasColumnName("USERNAME");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(50)
                .HasColumnName("WF_INST_CODE");
        });

        modelBuilder.Entity<PayDecisionDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PAY_DECI__3214EC275F0ADB74");

            entity.ToTable("PAY_DECISION_DETAILS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CareerCode)
                .HasMaxLength(255)
                .HasColumnName("CAREER_CODE");
            entity.Property(e => e.CareerTitle)
                .HasMaxLength(255)
                .HasColumnName("CAREER_TITLE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionNum)
                .HasMaxLength(255)
                .HasColumnName("DECISION_NUM");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(255)
                .HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LabourContract)
                .HasMaxLength(255)
                .HasColumnName("LABOUR_CONTRACT");
            entity.Property(e => e.PayRange)
                .HasMaxLength(255)
                .HasColumnName("PAY_RANGE");
            entity.Property(e => e.PayScale)
                .HasMaxLength(255)
                .HasColumnName("PAY_SCALE");
            entity.Property(e => e.Salary)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("SALARY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PayDecisionHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PAY_DECI__3214EC277A872C45");

            entity.ToTable("PAY_DECISION_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionNum)
                .HasMaxLength(255)
                .HasColumnName("DECISION_NUM");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.Noted)
                .HasMaxLength(255)
                .HasColumnName("NOTED");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusLog).HasColumnName("STATUS_LOG");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<PayScale>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PAY_SCAL__3214EC27E2B29D2B");

            entity.ToTable("PAY_SCALE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CareerCode)
                .HasMaxLength(255)
                .HasColumnName("CAREER_CODE");
            entity.Property(e => e.CareerTitle)
                .HasMaxLength(255)
                .HasColumnName("CAREER_TITLE");
            entity.Property(e => e.Certificate)
                .HasMaxLength(255)
                .HasColumnName("CERTIFICATE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Major)
                .HasMaxLength(255)
                .HasColumnName("MAJOR");
            entity.Property(e => e.PayBase)
                .HasColumnType("decimal(38, 0)")
                .HasColumnName("PAY_BASE");
            entity.Property(e => e.PayScaleCode)
                .HasMaxLength(255)
                .HasColumnName("PAY_SCALE_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PayScaleDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PAY_SCAL__3214EC2700B5DDDE");

            entity.ToTable("PAY_SCALE_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CareerCode)
                .HasMaxLength(255)
                .HasColumnName("CAREER_CODE");
            entity.Property(e => e.Coeff)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("COEFF");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Ranges)
                .HasMaxLength(255)
                .HasColumnName("RANGES");
            entity.Property(e => e.Salary)
                .HasColumnType("decimal(38, 0)")
                .HasColumnName("SALARY");
            entity.Property(e => e.ScaleCode)
                .HasMaxLength(255)
                .HasColumnName("SCALE_CODE");
            entity.Property(e => e.ScaleDtCode)
                .HasMaxLength(255)
                .HasColumnName("SCALE_DT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PaySheet>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PAY_SHEE__3214EC271A5F97A3");

            entity.ToTable("PAY_SHEET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BasicPay)
                .HasColumnType("decimal(38, 0)")
                .HasColumnName("BASIC_PAY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PayCoef)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("PAY_COEF");
            entity.Property(e => e.PayGradesCode)
                .HasMaxLength(255)
                .HasColumnName("PAY_GRADES_CODE");
            entity.Property(e => e.PayGradesGroup)
                .HasMaxLength(255)
                .HasColumnName("PAY_GRADES_GROUP");
            entity.Property(e => e.PayGradesName)
                .HasMaxLength(255)
                .HasColumnName("PAY_GRADES_NAME");
            entity.Property(e => e.PayRanges).HasColumnName("PAY_RANGES");
            entity.Property(e => e.PayScale)
                .HasMaxLength(255)
                .HasColumnName("PAY_SCALE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PaymentGateway>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PAYMENT_GATEWAY");

            entity.Property(e => e.ConfigJson).HasColumnName("CONFIG_JSON");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .HasColumnName("EMAIL");
            entity.Property(e => e.GatewayCode)
                .HasMaxLength(255)
                .HasColumnName("GATEWAY_CODE");
            entity.Property(e => e.GatewayName)
                .HasMaxLength(255)
                .HasColumnName("GATEWAY_NAME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Logo)
                .HasMaxLength(1000)
                .HasColumnName("LOGO");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(50)
                .HasColumnName("SERVICE_TYPE");
        });

        modelBuilder.Entity<PersonalHistory>(entity =>
        {
            entity.ToTable("PERSONAL_HISTORY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Begin)
                .HasMaxLength(50)
                .HasColumnName("BEGIN");
            entity.Property(e => e.Content)
                .HasMaxLength(1000)
                .HasColumnName("CONTENT");
            entity.Property(e => e.End)
                .HasMaxLength(50)
                .HasColumnName("END");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProfileCode)
                .HasMaxLength(50)
                .HasColumnName("PROFILE_CODE");
        });

        modelBuilder.Entity<PlanExcuteRecruitmentDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PLAN_REC__3214EC279B10F4F9");

            entity.ToTable("PLAN_EXCUTE_RECRUITMENT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CandidateCode)
                .HasMaxLength(255)
                .HasColumnName("CANDIDATE_CODE");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListFileResult)
                .HasMaxLength(255)
                .HasColumnName("LIST_FILE_RESULT");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.RecruitmentCode)
                .HasMaxLength(255)
                .HasColumnName("RECRUITMENT_CODE");
            entity.Property(e => e.Result)
                .HasMaxLength(255)
                .HasColumnName("RESULT");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PlanExcuteRecruitmentHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PLAN_REC__3214EC27D89F2BDF");

            entity.ToTable("PLAN_EXCUTE_RECRUITMENT_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PlanNumber)
                .HasMaxLength(255)
                .HasColumnName("PLAN_NUMBER");
            entity.Property(e => e.RecruitmentCode)
                .HasMaxLength(255)
                .HasColumnName("RECRUITMENT_CODE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusLog).HasColumnName("STATUS_LOG");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PlanRecruitmentDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PLAN_REC__3214EC27A289533F");

            entity.ToTable("PLAN_RECRUITMENT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Age)
                .HasMaxLength(50)
                .HasColumnName("AGE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Gender)
                .HasMaxLength(255)
                .HasColumnName("GENDER");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Level)
                .HasMaxLength(255)
                .HasColumnName("LEVEL");
            entity.Property(e => e.Local)
                .HasMaxLength(255)
                .HasColumnName("LOCAL");
            entity.Property(e => e.PlanNumber)
                .HasMaxLength(255)
                .HasColumnName("PLAN_NUMBER");
            entity.Property(e => e.Position)
                .HasMaxLength(255)
                .HasColumnName("POSITION");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.Specialize)
                .HasMaxLength(255)
                .HasColumnName("SPECIALIZE");
            entity.Property(e => e.Tier)
                .HasMaxLength(255)
                .HasColumnName("TIER");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.YearOfExperience).HasColumnName("YEAR_OF_EXPERIENCE");
        });

        modelBuilder.Entity<PlanRecruitmentHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PLAN_REC__3214EC27E706A5C7");

            entity.ToTable("PLAN_RECRUITMENT_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.PlanDate).HasColumnName("PLAN_DATE");
            entity.Property(e => e.PlanNumber)
                .HasMaxLength(255)
                .HasColumnName("PLAN_NUMBER");
            entity.Property(e => e.PlanType)
                .HasMaxLength(255)
                .HasColumnName("PLAN_TYPE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusLog).HasColumnName("STATUS_LOG");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserCreated)
                .HasMaxLength(255)
                .HasColumnName("USER_CREATED");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<PluginManage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ZOOM_MAN__3214EC271DE0B89A");

            entity.ToTable("PLUGIN_MANAGE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Active).HasColumnName("ACTIVE");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Url)
                .HasMaxLength(255)
                .HasColumnName("URL");
        });

        modelBuilder.Entity<PoBuyerDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PO_SUP_D__3214EC271AEC05C8");

            entity.ToTable("PO_BUYER_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.ExpectedDate).HasColumnName("EXPECTED_DATE");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.PoCount)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_COUNT");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.QuantityNeedImport)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY_NEED_IMPORT");
            entity.Property(e => e.QuantityReal)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("QUANTITY_REAL");
            entity.Property(e => e.RateConversion)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("RATE_CONVERSION");
            entity.Property(e => e.RateLoss)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("RATE_LOSS");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.SupCode)
                .HasMaxLength(255)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.TotalAmount)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TOTAL_AMOUNT");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitPrice)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("UNIT_PRICE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PoBuyerHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PO_SUP_H__3214EC272631A336");

            entity.ToTable("PO_BUYER_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApprovedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("APPROVED_BY");
            entity.Property(e => e.ApprovedTime).HasColumnName("APPROVED_TIME");
            entity.Property(e => e.Budget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("BUDGET");
            entity.Property(e => e.Buyer)
                .HasMaxLength(255)
                .HasColumnName("BUYER");
            entity.Property(e => e.BuyerCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BUYER_CODE");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.Confirm).HasColumnName("CONFIRM");
            entity.Property(e => e.Consigner)
                .HasMaxLength(255)
                .HasComment("Người gửi hàng")
                .HasColumnName("CONSIGNER");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(20)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DateOfOrder)
                .HasComment("Date of order")
                .HasColumnName("DATE_OF_ORDER");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMAIL");
            entity.Property(e => e.EstimateTime).HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.LastBudget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LAST_BUDGET");
            entity.Property(e => e.ListUserView)
                .IsUnicode(false)
                .HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.Mobile)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MOBILE");
            entity.Property(e => e.Noted)
                .HasMaxLength(500)
                .HasColumnName("NOTED");
            entity.Property(e => e.OrderBy)
                .HasMaxLength(255)
                .HasColumnName("ORDER_BY");
            entity.Property(e => e.PaymentTerm).HasColumnName("PAYMENT_TERM");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.PoTitle)
                .HasMaxLength(255)
                .HasColumnName("PO_TITLE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.RealBudget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("REAL_BUDGET");
            entity.Property(e => e.ShippingAdd)
                .HasMaxLength(255)
                .HasColumnName("SHIPPING_ADD");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusLog).HasColumnName("STATUS_LOG");
            entity.Property(e => e.StatusObject)
                .HasMaxLength(255)
                .HasColumnName("STATUS_OBJECT");
            entity.Property(e => e.StatusObjectLog).HasColumnName("STATUS_OBJECT_LOG");
            entity.Property(e => e.SupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<PoBuyerHeaderNotDone>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("PO_BUYER_HEADER_NOT_DONE");

            entity.Property(e => e.ApprovedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("APPROVED_BY");
            entity.Property(e => e.ApprovedTime).HasColumnName("APPROVED_TIME");
            entity.Property(e => e.Buyer)
                .HasMaxLength(255)
                .HasColumnName("BUYER");
            entity.Property(e => e.BuyerCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BUYER_CODE");
            entity.Property(e => e.Confirm).HasColumnName("CONFIRM");
            entity.Property(e => e.Consigner)
                .HasMaxLength(255)
                .HasColumnName("CONSIGNER");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(20)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DateOfOrder).HasColumnName("DATE_OF_ORDER");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMAIL");
            entity.Property(e => e.EstimateTime).HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListUserView)
                .IsUnicode(false)
                .HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.Mobile)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MOBILE");
            entity.Property(e => e.Noted)
                .HasMaxLength(500)
                .HasColumnName("NOTED");
            entity.Property(e => e.OrderBy)
                .HasMaxLength(255)
                .HasColumnName("ORDER_BY");
            entity.Property(e => e.PaymentTerm).HasColumnName("PAYMENT_TERM");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.PoTitle)
                .HasMaxLength(255)
                .HasColumnName("PO_TITLE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.ShippingAdd)
                .HasMaxLength(255)
                .HasColumnName("SHIPPING_ADD");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PoBuyerHeaderPayment>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("PO_BUYER_HEADER_PAYMENT");

            entity.Property(e => e.ApprovedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("APPROVED_BY");
            entity.Property(e => e.ApprovedTime).HasColumnName("APPROVED_TIME");
            entity.Property(e => e.Buyer)
                .HasMaxLength(255)
                .HasColumnName("BUYER");
            entity.Property(e => e.BuyerCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BUYER_CODE");
            entity.Property(e => e.Confirm).HasColumnName("CONFIRM");
            entity.Property(e => e.Consigner)
                .HasMaxLength(255)
                .HasColumnName("CONSIGNER");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(20)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DateOfOrder).HasColumnName("DATE_OF_ORDER");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("EMAIL");
            entity.Property(e => e.EstimateTime).HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.ListUserView)
                .IsUnicode(false)
                .HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.Mobile)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MOBILE");
            entity.Property(e => e.Noted)
                .HasMaxLength(500)
                .HasColumnName("NOTED");
            entity.Property(e => e.OrderBy)
                .HasMaxLength(255)
                .HasColumnName("ORDER_BY");
            entity.Property(e => e.PaymentTerm).HasColumnName("PAYMENT_TERM");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.PoTitle)
                .HasMaxLength(255)
                .HasColumnName("PO_TITLE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.ShippingAdd)
                .HasMaxLength(255)
                .HasColumnName("SHIPPING_ADD");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusLog).HasColumnName("STATUS_LOG");
            entity.Property(e => e.StatusObject)
                .HasMaxLength(255)
                .HasColumnName("STATUS_OBJECT");
            entity.Property(e => e.StatusObjectLog).HasColumnName("STATUS_OBJECT_LOG");
            entity.Property(e => e.SupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.TotalAmount)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("TOTAL_AMOUNT");
            entity.Property(e => e.TotalPayment)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("TOTAL_PAYMENT");
            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<PoCusUpdatedTracking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PO_CUS_U__3214EC27D27372EC");

            entity.ToTable("PO_CUS_UPDATED_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApprovedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("APPROVED_BY");
            entity.Property(e => e.ApprovedTime).HasColumnName("APPROVED_TIME");
            entity.Property(e => e.Confirm)
                .HasMaxLength(255)
                .HasColumnName("CONFIRM");
            entity.Property(e => e.ConfirmTime).HasColumnName("CONFIRM_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PoCusCode)
                .HasMaxLength(255)
                .HasColumnName("PO_CUS_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdateContent).HasColumnName("UPDATE_CONTENT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PoSaleHeader>(entity =>
        {
            entity.HasKey(e => e.ContractHeaderId).HasName("PK__CONTRACT__809C800A0B92E6AD");

            entity.ToTable("PO_SALE_HEADER");

            entity.Property(e => e.ContractHeaderId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_HEADER_ID");
            entity.Property(e => e.AcceptanceTime).HasColumnName("ACCEPTANCE_TIME");
            entity.Property(e => e.Budget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("BUDGET");
            entity.Property(e => e.BudgetExcludeTax)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("BUDGET_EXCLUDE_TAX");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.Confirm).HasColumnName("CONFIRM");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractDate).HasColumnName("CONTRACT_DATE");
            entity.Property(e => e.ContractNo)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_NO");
            entity.Property(e => e.ContractRelative).HasColumnName("CONTRACT_RELATIVE");
            entity.Property(e => e.ContractType)
                .HasMaxLength(255)
                .HasColumnName("CONTRACT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(20)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Describe)
                .HasMaxLength(500)
                .HasColumnName("DESCRIBE");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.Duration)
                .HasMaxLength(100)
                .HasColumnName("DURATION");
            entity.Property(e => e.EffectiveDate).HasColumnName("EFFECTIVE_DATE");
            entity.Property(e => e.EndDate).HasColumnName("END_DATE");
            entity.Property(e => e.EstimateTime).HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.IsChangeProduct).HasColumnName("IS_CHANGE_PRODUCT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.LastBudget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LAST_BUDGET");
            entity.Property(e => e.ListUserView)
                .IsUnicode(false)
                .HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.LocationHardCopy)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_HARD_COPY");
            entity.Property(e => e.LogData).HasColumnName("LOG_DATA");
            entity.Property(e => e.LogProductDetail).HasColumnName("LOG_PRODUCT_DETAIL");
            entity.Property(e => e.MainService)
                .HasMaxLength(255)
                .HasColumnName("MAIN_SERVICE");
            entity.Property(e => e.Maintenance).HasColumnName("MAINTENANCE");
            entity.Property(e => e.PrjCode)
                .HasMaxLength(255)
                .HasColumnName("PRJ_CODE");
            entity.Property(e => e.RealBudget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("REAL_BUDGET");
            entity.Property(e => e.Signer)
                .HasMaxLength(100)
                .HasColumnName("SIGNER");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusObject)
                .HasMaxLength(255)
                .HasColumnName("STATUS_OBJECT");
            entity.Property(e => e.StatusObjectLog).HasColumnName("STATUS_OBJECT_LOG");
            entity.Property(e => e.Tags)
                .HasMaxLength(50)
                .HasColumnName("TAGS");
            entity.Property(e => e.TaxAmount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TAX_AMOUNT");
            entity.Property(e => e.Title)
                .HasMaxLength(1000)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Version).HasColumnName("VERSION");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<PoSaleHeaderHi>(entity =>
        {
            entity.HasKey(e => e.ContractHeaderId).HasName("PK__CONTRACT__809C800A8282F706");

            entity.ToTable("PO_SALE_HEADER_HIS");

            entity.Property(e => e.ContractHeaderId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_HEADER_ID");
            entity.Property(e => e.AcceptanceTime).HasColumnName("ACCEPTANCE_TIME");
            entity.Property(e => e.Budget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("BUDGET");
            entity.Property(e => e.BudgetExcludeTax)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("BUDGET_EXCLUDE_TAX");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.Confirm).HasColumnName("CONFIRM");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractDate).HasColumnName("CONTRACT_DATE");
            entity.Property(e => e.ContractNo)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_NO");
            entity.Property(e => e.ContractRelative).HasColumnName("CONTRACT_RELATIVE");
            entity.Property(e => e.ContractType)
                .HasMaxLength(50)
                .HasColumnName("CONTRACT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(20)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Describe)
                .HasMaxLength(500)
                .HasColumnName("DESCRIBE");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.Duration)
                .HasMaxLength(100)
                .HasColumnName("DURATION");
            entity.Property(e => e.EffectiveDate).HasColumnName("EFFECTIVE_DATE");
            entity.Property(e => e.EndDate).HasColumnName("END_DATE");
            entity.Property(e => e.EstimateTime).HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.IsChangeProduct).HasColumnName("IS_CHANGE_PRODUCT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LastBudget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LAST_BUDGET");
            entity.Property(e => e.LocationHardCopy)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_HARD_COPY");
            entity.Property(e => e.LogData).HasColumnName("LOG_DATA");
            entity.Property(e => e.LogProductDetail).HasColumnName("LOG_PRODUCT_DETAIL");
            entity.Property(e => e.MainService)
                .HasMaxLength(255)
                .HasColumnName("MAIN_SERVICE");
            entity.Property(e => e.Maintenance).HasColumnName("MAINTENANCE");
            entity.Property(e => e.PrjCode)
                .HasMaxLength(255)
                .HasColumnName("PRJ_CODE");
            entity.Property(e => e.RealBudget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("REAL_BUDGET");
            entity.Property(e => e.Signer)
                .HasMaxLength(100)
                .HasColumnName("SIGNER");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.Tags)
                .HasMaxLength(50)
                .HasColumnName("TAGS");
            entity.Property(e => e.TaxAmount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TAX_AMOUNT");
            entity.Property(e => e.Title)
                .HasMaxLength(1000)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Version).HasColumnName("VERSION");
        });

        modelBuilder.Entity<PoSaleHeaderNotDone>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("PO_SALE_HEADER_NOT_DONE");

            entity.Property(e => e.AcceptanceTime).HasColumnName("ACCEPTANCE_TIME");
            entity.Property(e => e.Budget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("BUDGET");
            entity.Property(e => e.BudgetExcludeTax)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("BUDGET_EXCLUDE_TAX");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.Confirm).HasColumnName("CONFIRM");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractDate).HasColumnName("CONTRACT_DATE");
            entity.Property(e => e.ContractHeaderId)
                .ValueGeneratedOnAdd()
                .HasColumnName("CONTRACT_HEADER_ID");
            entity.Property(e => e.ContractNo)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_NO");
            entity.Property(e => e.ContractRelative).HasColumnName("CONTRACT_RELATIVE");
            entity.Property(e => e.ContractType)
                .HasMaxLength(50)
                .HasColumnName("CONTRACT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(20)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Describe)
                .HasMaxLength(500)
                .HasColumnName("DESCRIBE");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.Duration)
                .HasMaxLength(100)
                .HasColumnName("DURATION");
            entity.Property(e => e.EffectiveDate).HasColumnName("EFFECTIVE_DATE");
            entity.Property(e => e.EndDate).HasColumnName("END_DATE");
            entity.Property(e => e.EstimateTime).HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.IsChangeProduct).HasColumnName("IS_CHANGE_PRODUCT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LastBudget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("LAST_BUDGET");
            entity.Property(e => e.ListUserView)
                .IsUnicode(false)
                .HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.LocationHardCopy)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_HARD_COPY");
            entity.Property(e => e.LogData).HasColumnName("LOG_DATA");
            entity.Property(e => e.LogProductDetail).HasColumnName("LOG_PRODUCT_DETAIL");
            entity.Property(e => e.MainService)
                .HasMaxLength(255)
                .HasColumnName("MAIN_SERVICE");
            entity.Property(e => e.Maintenance).HasColumnName("MAINTENANCE");
            entity.Property(e => e.PrjCode)
                .HasMaxLength(255)
                .HasColumnName("PRJ_CODE");
            entity.Property(e => e.RealBudget)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("REAL_BUDGET");
            entity.Property(e => e.Signer)
                .HasMaxLength(100)
                .HasColumnName("SIGNER");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.Tags)
                .HasMaxLength(50)
                .HasColumnName("TAGS");
            entity.Property(e => e.TaxAmount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TAX_AMOUNT");
            entity.Property(e => e.Title)
                .HasMaxLength(1000)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Version).HasColumnName("VERSION");
        });

        modelBuilder.Entity<PoSaleProductDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__CONTRACT__3214EC27BD919CB6");

            entity.ToTable("PO_SALE_PRODUCT_DETAIL");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(20)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CustomFee)
                .HasComment("CHIẾT KHẤU")
                .HasColumnName("CUSTOM_FEE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount)
                .HasComment("GIẢM GIÁ")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PriceType)
                .HasMaxLength(255)
                .HasColumnName("PRICE_TYPE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.QuantityNeedExport)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY_NEED_EXPORT");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PoSupAttribute>(entity =>
        {
            entity.HasKey(e => e.ContractAttributeId).HasName("PK__PO_SUP_A__CA96A4ABCB55A108");

            entity.ToTable("PO_SUP_ATTRIBUTE");

            entity.Property(e => e.ContractAttributeId)
                .HasComment("Customer Id")
                .HasColumnName("CONTRACT_ATTRIBUTE_ID");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(100)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(50)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .HasColumnName("ATTR_VALUE");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PoSupFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PO_SUP_F__3214EC27ABF79ACA");

            entity.ToTable("PO_SUP_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_TYPE");
            entity.Property(e => e.Noted).HasColumnName("NOTED");
        });

        modelBuilder.Entity<PoSupRequestImpProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PO_SUP_R__3214EC27FBE241B2");

            entity.ToTable("PO_SUP_REQUEST_IMP_PRODUCT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .HasComment("Mã Po sup")
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasComment("Mã yêu cầu nhập khẩu")
                .HasColumnName("REQ_CODE");
        });

        modelBuilder.Entity<PoSupUpdatedTracking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PO_SUP_U__3214EC27A94E4A86");

            entity.ToTable("PO_SUP_UPDATED_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApprovedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("APPROVED_BY");
            entity.Property(e => e.ApprovedTime).HasColumnName("APPROVED_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdateContent).HasColumnName("UPDATE_CONTENT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PoolMemberNotification>(entity =>
        {
            entity.HasKey(e => e.NotifyId).HasName("PK__POOL_MEM__33BCA7C83779668F");

            entity.ToTable("POOL_MEMBER_NOTIFICATION");

            entity.Property(e => e.NotifyId)
                .HasComment("Customer Id")
                .HasColumnName("NOTIFY_ID");
            entity.Property(e => e.Assignee).HasColumnName("ASSIGNEE");
            entity.Property(e => e.AssigneeTime).HasColumnName("ASSIGNEE_TIME");
            entity.Property(e => e.Assigner).HasColumnName("ASSIGNER");
            entity.Property(e => e.AssignerTime).HasColumnName("ASSIGNER_TIME");
            entity.Property(e => e.ConfirmTime).HasColumnName("CONFIRM_TIME");
            entity.Property(e => e.Link)
                .HasMaxLength(255)
                .HasColumnName("LINK");
            entity.Property(e => e.ModuleName)
                .HasMaxLength(255)
                .HasColumnName("MODULE_NAME");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
        });

        modelBuilder.Entity<PriceQuoteDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRICE_QU__3214EC27D07F0283");

            entity.ToTable("PRICE_QUOTE_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliveryTime).HasColumnName("DELIVERY_TIME");
            entity.Property(e => e.DesiredPrice)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DESIRED_PRICE");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.ExpectedDate).HasColumnName("EXPECTED_DATE");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.QuantitySupplies)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY_SUPPLIES");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.SupCode)
                .HasMaxLength(255)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<PriceQuoteHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRICE_QU__3214EC2716B776B6");

            entity.ToTable("PRICE_QUOTE_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ExpectedDate).HasColumnName("EXPECTED_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TimeTicketCreate).HasColumnName("TIME_TICKET_CREATE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserRequest)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_REQUEST");
        });

        modelBuilder.Entity<PriceQuoteServiceDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRICE_QU__3214EC279B803E11");

            entity.ToTable("PRICE_QUOTE_SERVICE_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CustomFee).HasColumnName("CUSTOM_FEE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount).HasColumnName("DISCOUNT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(100)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.ServiceName)
                .HasMaxLength(255)
                .HasColumnName("SERVICE_NAME");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProdDeliveryAttrValue>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROD_DEL__3214EC271BCDF967");

            entity.ToTable("PROD_DELIVERY_ATTR_VALUE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MarkType)
                .HasMaxLength(255)
                .HasColumnName("MARK_TYPE");
            entity.Property(e => e.ProdCode)
                .HasMaxLength(255)
                .HasColumnName("PROD_CODE");
            entity.Property(e => e.TicketExpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_EXP_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.Value)
                .HasMaxLength(255)
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<ProdDeliveryDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROD_DEL__3214EC27643F390D");

            entity.ToTable("PROD_DELIVERY_DETAIL");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.AttrCustom)
                .HasMaxLength(255)
                .HasColumnName("ATTR_CUSTOM");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount).HasColumnName("DISCOUNT");
            entity.Property(e => e.ExportDetailGroup)
                .HasMaxLength(100)
                .HasColumnName("EXPORT_DETAIL_GROUP");
            entity.Property(e => e.InsideOriginMap)
                .HasMaxLength(511)
                .HasColumnName("INSIDE_ORIGIN_MAP");
            entity.Property(e => e.InsideOriginNo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("INSIDE_ORIGIN_NO");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsInside).HasColumnName("IS_INSIDE");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.MapId).HasColumnName("MAP_ID");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProdParent)
                .HasMaxLength(255)
                .HasColumnName("PROD_PARENT");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductCoil)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_COIL");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.SalePrice)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("SALE_PRICE");
            entity.Property(e => e.TaxRate).HasColumnName("TAX_RATE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProdDeliveryHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROD_DEL__3214EC2744BB2340");

            entity.ToTable("PROD_DELIVERY_HEADER");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.CostTotal)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COST_TOTAL");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(50)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.InsurantTime)
                .HasColumnType("datetime")
                .HasColumnName("INSURANT_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.LogData).HasColumnName("LOG_DATA");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.NextTimePayment)
                .HasColumnType("datetime")
                .HasColumnName("NEXT_TIME_PAYMENT");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PaymentStatus)
                .HasMaxLength(50)
                .HasColumnName("PAYMENT_STATUS");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(255)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionText)
                .HasMaxLength(255)
                .HasColumnName("POSITION_TEXT");
            entity.Property(e => e.Reason)
                .HasMaxLength(500)
                .HasColumnName("REASON");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(100)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.StoreCodeReceipt)
                .HasMaxLength(100)
                .HasColumnName("STORE_CODE_RECEIPT");
            entity.Property(e => e.TaxTotal)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TAX_TOTAL");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TimeTicketCreate)
                .HasColumnType("datetime")
                .HasColumnName("TIME_TICKET_CREATE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TotalMustPayment)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL_MUST_PAYMENT");
            entity.Property(e => e.TotalPayed)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL_PAYED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserExport)
                .HasMaxLength(50)
                .HasColumnName("USER_EXPORT");
            entity.Property(e => e.UserReceipt)
                .HasMaxLength(50)
                .HasColumnName("USER_RECEIPT");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<ProdInStockAttrValue>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROD_IN___3214EC271F021E32");

            entity.ToTable("PROD_IN_STOCK_ATTR_VALUE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MarkType)
                .HasMaxLength(255)
                .HasColumnName("MARK_TYPE");
            entity.Property(e => e.ProdCode)
                .HasMaxLength(255)
                .HasColumnName("PROD_CODE");
            entity.Property(e => e.TicketImpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_IMP_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.Value)
                .HasMaxLength(255)
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<ProdPackageDelivery>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROD_PAC__3214EC2765E592B1");

            entity.ToTable("PROD_PACKAGE_DELIVERY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CoilCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("COIL_CODE");
            entity.Property(e => e.CoilRelative)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("COIL_RELATIVE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_TYPE");
            entity.Property(e => e.PositionInStore)
                .HasMaxLength(255)
                .HasColumnName("POSITION_IN_STORE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductLot)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_LOT");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.Remain)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("REMAIN");
            entity.Property(e => e.Size)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("SIZE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TicketExpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_EXP_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProdPackageReceived>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROD_PAC__3214EC278289CB6C");

            entity.ToTable("PROD_PACKAGE_RECEIVED");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CoilCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("COIL_CODE");
            entity.Property(e => e.CoilRelative)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("COIL_RELATIVE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_TYPE");
            entity.Property(e => e.PositionInStore)
                .HasMaxLength(255)
                .HasColumnName("POSITION_IN_STORE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductImpType)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_IMP_TYPE");
            entity.Property(e => e.ProductLot)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_LOT");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.Remain)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("REMAIN");
            entity.Property(e => e.Size)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("SIZE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.UnitCoil)
                .HasMaxLength(255)
                .HasColumnName("UNIT_COIL");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProdQcDatasetResult>(entity =>
        {
            entity.ToTable("PROD_QC_DATASET_RESULTS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(255)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(255)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IdQcDetails).HasColumnName("ID_QC_DETAILS");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value).HasColumnName("VALUE");
        });

        modelBuilder.Entity<ProdReceivedAttrValue>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROD_REC__3214EC27B87D270C");

            entity.ToTable("PROD_RECEIVED_ATTR_VALUE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MarkType)
                .HasMaxLength(255)
                .HasColumnName("MARK_TYPE");
            entity.Property(e => e.ProdCode)
                .HasMaxLength(255)
                .HasColumnName("PROD_CODE");
            entity.Property(e => e.TicketImpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_IMP_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.Value)
                .HasMaxLength(255)
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<ProdReceivedDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROD_REC__3214EC27C7F47383");

            entity.ToTable("PROD_RECEIVED_DETAIL");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.AttrCustom)
                .HasMaxLength(255)
                .HasColumnName("ATTR_CUSTOM");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CusCode)
                .HasMaxLength(255)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount).HasColumnName("DISCOUNT");
            entity.Property(e => e.ImpType)
                .HasMaxLength(255)
                .HasColumnName("IMP_TYPE");
            entity.Property(e => e.InsideOriginMap)
                .HasMaxLength(511)
                .HasColumnName("INSIDE_ORIGIN_MAP");
            entity.Property(e => e.InsideOriginNo)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("INSIDE_ORIGIN_NO");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsInside).HasColumnName("IS_INSIDE");
            entity.Property(e => e.IsIntact).HasColumnName("IS_INTACT");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.PackType)
                .HasMaxLength(255)
                .HasColumnName("PACK_TYPE");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProdParent)
                .HasMaxLength(255)
                .HasColumnName("PROD_PARENT");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductLot)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_LOT");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.QuantityImp).HasColumnName("QUANTITY_IMP");
            entity.Property(e => e.QuantityIsSet)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY_IS_SET");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.SalePrice)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("SALE_PRICE");
            entity.Property(e => e.Section)
                .HasMaxLength(255)
                .HasColumnName("SECTION");
            entity.Property(e => e.TaxRate).HasColumnName("TAX_RATE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProdReceivedHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROD_REC__3214EC27210B21C9");

            entity.ToTable("PROD_RECEIVED_HEADER");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.CostTotal)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COST_TOTAL");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(50)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.InsurantTime)
                .HasColumnType("datetime")
                .HasColumnName("INSURANT_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.LogData).HasColumnName("LOG_DATA");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.NextTimePayment)
                .HasColumnType("datetime")
                .HasColumnName("NEXT_TIME_PAYMENT");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PaymentStatus)
                .HasMaxLength(50)
                .HasColumnName("PAYMENT_STATUS");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(255)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionText)
                .HasMaxLength(255)
                .HasColumnName("POSITION_TEXT");
            entity.Property(e => e.Reason)
                .HasMaxLength(500)
                .HasColumnName("REASON");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(100)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.StoreCodeSend)
                .HasMaxLength(100)
                .HasColumnName("STORE_CODE_SEND");
            entity.Property(e => e.TaxTotal)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TAX_TOTAL");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TimeTicketCreate)
                .HasColumnType("datetime")
                .HasColumnName("TIME_TICKET_CREATE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TotalMustPayment)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL_MUST_PAYMENT");
            entity.Property(e => e.TotalPayed)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL_PAYED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserImport)
                .HasMaxLength(50)
                .HasColumnName("USER_IMPORT");
            entity.Property(e => e.UserSend)
                .HasMaxLength(50)
                .HasColumnName("USER_SEND");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<ProductAttrExt>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PRODUCT_ATTR_EXT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProdAttrGroup)
                .HasMaxLength(255)
                .HasColumnName("PROD_ATTR_GROUP");
            entity.Property(e => e.ProdCustomJson)
                .IsUnicode(false)
                .HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductAttrGalaxy>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC27432A73A2");

            entity.ToTable("PRODUCT_ATTR_GALAXY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .HasColumnName("ATTR_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Formula).HasColumnName("FORMULA");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductAttribute>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC27647D1205");

            entity.ToTable("PRODUCT_ATTRIBUTE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AttributeCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATTRIBUTE_CODE");
            entity.Property(e => e.AttributeName)
                .HasMaxLength(255)
                .HasColumnName("ATTRIBUTE_NAME");
            entity.Property(e => e.AttributeValue).HasColumnName("ATTRIBUTE_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FieldType)
                .HasMaxLength(255)
                .HasColumnName("FIELD_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductComponent>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC27B2D951D4");

            entity.ToTable("PRODUCT_COMPONENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductCostDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC272BF11792");

            entity.ToTable("PRODUCT_COST_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Catelogue)
                .HasMaxLength(255)
                .HasColumnName("CATELOGUE");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CustomFee)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CUSTOM_FEE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.HeaderCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("HEADER_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PriceCost)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST");
            entity.Property(e => e.PriceCostAirline)
                .HasComment("Giá đại lý đường bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_AIRLINE");
            entity.Property(e => e.PriceCostCatelogue)
                .HasComment("Giá đại lý catalogue")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_CATELOGUE");
            entity.Property(e => e.PriceCostDefault)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_DEFAULT");
            entity.Property(e => e.PriceCostSea)
                .HasComment("Giá đại lý đường biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_SEA");
            entity.Property(e => e.PriceRetail)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL");
            entity.Property(e => e.PriceRetailBuild)
                .HasComment("Giá bán lẻ có thi công")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD");
            entity.Property(e => e.PriceRetailBuildAirline)
                .HasComment("Giá bán lẻ có thi công bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailBuildSea)
                .HasComment("Giá bán lẻ có thi công kho,biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_SEA");
            entity.Property(e => e.PriceRetailNoBuild)
                .HasComment("Giá bán lẻ không thi công")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD");
            entity.Property(e => e.PriceRetailNoBuildAirline)
                .HasComment("Giá bán lẻ không thi công bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailNoBuildSea)
                .HasComment("Giá bán lẻ không thi công kho, biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_SEA");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductCostHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC27FE526C88");

            entity.ToTable("PRODUCT_COST_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EffectiveDate).HasColumnName("EFFECTIVE_DATE");
            entity.Property(e => e.ExpiryDate).HasColumnName("EXPIRY_DATE");
            entity.Property(e => e.HeaderCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("HEADER_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.ResponsibleUser)
                .HasMaxLength(255)
                .HasColumnName("RESPONSIBLE_USER");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductEntityMapping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC0776309613");

            entity.ToTable("PRODUCT_ENTITY_MAPPING");

            entity.Property(e => e.AttrCustom)
                .HasMaxLength(255)
                .HasColumnName("ATTR_CUSTOM");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.MappingCode)
                .HasMaxLength(1000)
                .HasColumnName("MAPPING_CODE");
            entity.Property(e => e.MappingLog).HasColumnName("MAPPING_LOG");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.TicketImpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_IMP_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<ProductEntityMappingLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC07D340750F");

            entity.ToTable("PRODUCT_ENTITY_MAPPING_LOG");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<ProductExpParent>(entity =>
        {
            entity.ToTable("PRODUCT_EXP_PARENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.IdExpProduct).HasColumnName("ID_EXP_PRODUCT");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.IdProductParent).HasColumnName("ID_PRODUCT_PARENT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Number).HasColumnName("NUMBER");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");

            entity.HasOne(d => d.IdExpProductNavigation).WithMany(p => p.ProductExpParents)
                .HasForeignKey(d => d.IdExpProduct)
                .HasConstraintName("FK_PRODUCT_EXP_PARENT_PRODUCT_EXPORT_DETAIL1");
        });

        modelBuilder.Entity<ProductExportDetail>(entity =>
        {
            entity.ToTable("PRODUCT_EXPORT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.Discount).HasColumnName("DISCOUNT");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.ExpType)
                .HasMaxLength(255)
                .HasColumnName("EXP_TYPE");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.MapId).HasColumnName("MAP_ID");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.PackLot)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_LOT");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductCoil)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_COIL");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.SalePrice)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("SALE_PRICE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TaxRate).HasColumnName("TAX_RATE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT");
        });

        modelBuilder.Entity<ProductExportHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC27699B6068");

            entity.ToTable("PRODUCT_EXPORT_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActInstCode)
                .HasMaxLength(255)
                .HasColumnName("ACT_INST_CODE");
            entity.Property(e => e.AuditTicketCode)
                .HasMaxLength(50)
                .HasColumnName("AUDIT_TICKET_CODE");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.CostTotal)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COST_TOTAL");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(50)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.GroupType)
                .HasMaxLength(100)
                .HasColumnName("GROUP_TYPE");
            entity.Property(e => e.InsurantTime)
                .HasColumnType("datetime")
                .HasColumnName("INSURANT_TIME");
            entity.Property(e => e.IsBom).HasColumnName("IS_BOM");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.LogData).HasColumnName("LOG_DATA");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.NextTimePayment)
                .HasColumnType("datetime")
                .HasColumnName("NEXT_TIME_PAYMENT");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PaymentStatus)
                .HasMaxLength(50)
                .HasColumnName("PAYMENT_STATUS");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(255)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionText)
                .HasMaxLength(255)
                .HasColumnName("POSITION_TEXT");
            entity.Property(e => e.Reason)
                .HasMaxLength(500)
                .HasColumnName("REASON");
            entity.Property(e => e.SrcData)
                .HasMaxLength(500)
                .HasColumnName("SRC_DATA");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(100)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.StoreCodeReceipt)
                .HasMaxLength(100)
                .HasColumnName("STORE_CODE_RECEIPT");
            entity.Property(e => e.SupCode)
                .HasMaxLength(100)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.TaxTotal)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TAX_TOTAL");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TicketStatus)
                .HasMaxLength(255)
                .HasColumnName("TICKET_STATUS");
            entity.Property(e => e.TimeTicketCreate)
                .HasColumnType("datetime")
                .HasColumnName("TIME_TICKET_CREATE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TotalMustPayment)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL_MUST_PAYMENT");
            entity.Property(e => e.TotalPayed)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL_PAYED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserExport)
                .HasMaxLength(50)
                .HasColumnName("USER_EXPORT");
            entity.Property(e => e.UserReceipt)
                .HasMaxLength(50)
                .HasColumnName("USER_RECEIPT");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<ProductGattrExt>(entity =>
        {
            entity.ToTable("PRODUCT_GATTR_EXT");

            entity.HasIndex(e => new { e.GattrCode, e.DeletionToken }, "UNQ_ID_PRODUCT_GATTR_EXT").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.GattrFlatCode)
                .HasMaxLength(1000)
                .HasColumnName("GATTR_FLAT_CODE");
            entity.Property(e => e.GattrJson).HasColumnName("GATTR_JSON");
            entity.Property(e => e.IdSource).HasColumnName("ID_SOURCE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductImpGattr>(entity =>
        {
            entity.ToTable("PRODUCT_IMP_GATTR");

            entity.HasIndex(e => new { e.IdImpProduct, e.GattrCode, e.DeletionToken }, "UNQ_ID_IMP_PRODUCT_GATTR_CODE").IsUnique();

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");

            entity.HasOne(d => d.IdImpProductNavigation).WithMany(p => p.ProductImpGattrs)
                .HasForeignKey(d => d.IdImpProduct)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_PRODUCT_IMP_GATTR_PRODUCT_IMPORT_DETAIL");
        });

        modelBuilder.Entity<ProductImpParent>(entity =>
        {
            entity.ToTable("PRODUCT_IMP_PARENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.IdProductParent).HasColumnName("ID_PRODUCT_PARENT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Number).HasColumnName("NUMBER");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");

            entity.HasOne(d => d.IdImpProductNavigation).WithMany(p => p.ProductImpParents)
                .HasForeignKey(d => d.IdImpProduct)
                .HasConstraintName("FK_PRODUCT_IMP_PARENT_PRODUCT_IMPORT_DETAIL");
        });

        modelBuilder.Entity<ProductImportDetail>(entity =>
        {
            entity.ToTable("PRODUCT_IMPORT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CusCode)
                .HasMaxLength(255)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.Discount).HasColumnName("DISCOUNT");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.ImpType)
                .HasMaxLength(255)
                .HasColumnName("IMP_TYPE");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsIntact).HasColumnName("IS_INTACT");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.PackLot)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_LOT");
            entity.Property(e => e.PackType)
                .HasMaxLength(255)
                .HasColumnName("PACK_TYPE");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductLot)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_LOT");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.QuantityImp).HasColumnName("QUANTITY_IMP");
            entity.Property(e => e.QuantityIsSet)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY_IS_SET");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.SalePrice)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("SALE_PRICE");
            entity.Property(e => e.Section)
                .HasMaxLength(255)
                .HasColumnName("SECTION");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TaxRate).HasColumnName("TAX_RATE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT");
        });

        modelBuilder.Entity<ProductImportHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUDCT__3214EC2767A533D6");

            entity.ToTable("PRODUCT_IMPORT_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActInstCode)
                .HasMaxLength(255)
                .HasColumnName("ACT_INST_CODE");
            entity.Property(e => e.AuditTicketCode)
                .HasMaxLength(50)
                .HasColumnName("AUDIT_TICKET_CODE");
            entity.Property(e => e.Commission)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMMISSION");
            entity.Property(e => e.CostTotal)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COST_TOTAL");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.Discount)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.ExpTicketCode)
                .HasMaxLength(255)
                .HasColumnName("EXP_TICKET_CODE");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(50)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.GroupType)
                .HasMaxLength(100)
                .HasColumnName("GROUP_TYPE");
            entity.Property(e => e.InsurantTime)
                .HasColumnType("datetime")
                .HasColumnName("INSURANT_TIME");
            entity.Property(e => e.Io)
                .HasMaxLength(255)
                .HasColumnName("IO");
            entity.Property(e => e.IsBom).HasColumnName("IS_BOM");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.LogData).HasColumnName("LOG_DATA");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.NextTimePayment)
                .HasColumnType("datetime")
                .HasColumnName("NEXT_TIME_PAYMENT");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PaymentStatus)
                .HasMaxLength(50)
                .HasColumnName("PAYMENT_STATUS");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(255)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionText)
                .HasMaxLength(255)
                .HasColumnName("POSITION_TEXT");
            entity.Property(e => e.Reason)
                .HasMaxLength(500)
                .HasColumnName("REASON");
            entity.Property(e => e.SrcData)
                .HasMaxLength(500)
                .HasColumnName("SRC_DATA");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(100)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.StoreCodeSend)
                .HasMaxLength(100)
                .HasColumnName("STORE_CODE_SEND");
            entity.Property(e => e.SupCode)
                .HasMaxLength(100)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.TaxTotal)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TAX_TOTAL");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TimeTicketCreate)
                .HasColumnType("datetime")
                .HasColumnName("TIME_TICKET_CREATE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TotalMustPayment)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL_MUST_PAYMENT");
            entity.Property(e => e.TotalPayed)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL_PAYED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserImport)
                .HasMaxLength(50)
                .HasColumnName("USER_IMPORT");
            entity.Property(e => e.UserSend)
                .HasMaxLength(50)
                .HasColumnName("USER_SEND");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<ProductInPallet>(entity =>
        {
            entity.ToTable("PRODUCT_IN_PALLET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.IdLoadingTicket).HasColumnName("ID_LOADING_TICKET");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Measure)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("MEASURE");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(255)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductInStock>(entity =>
        {
            entity.ToTable("PRODUCT_IN_STOCK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductNoTemp).HasColumnName("PRODUCT_NO_TEMP");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.QuantityTemp)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY_TEMP");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(255)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT");
            entity.Property(e => e.WeightTemp)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT_TEMP");

            entity.HasOne(d => d.IdImpProductNavigation).WithMany(p => p.ProductInStockIdImpProductNavigations)
                .HasForeignKey(d => d.IdImpProduct)
                .HasConstraintName("FK_PRODUCT_IN_STOCK_PRODUCT_IMPORT_DETAIL");

            entity.HasOne(d => d.Parent).WithMany(p => p.ProductInStockParents)
                .HasForeignKey(d => d.ParentId)
                .HasConstraintName("FK_PRODUCT_IN_STOCK_PRODUCT_IMPORT_DETAIL1");
        });

        modelBuilder.Entity<ProductInStockBackup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PRODUCT_IN_STOCK_BACKUP");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(255)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductInStockNew>(entity =>
        {
            entity.ToTable("PRODUCT_IN_STOCK_NEW");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LotProductCode)
                .HasMaxLength(255)
                .HasColumnName("LOT_PRODUCT_CODE");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(255)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductLocatedMapping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_PRODUCT_MAPPING_LOCATED");

            entity.ToTable("PRODUCT_LOCATED_MAPPING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.IsCustomized).HasColumnName("IS_CUSTOMIZED");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.MappingCode)
                .HasMaxLength(511)
                .HasColumnName("MAPPING_CODE");
            entity.Property(e => e.MappingLog).HasColumnName("MAPPING_LOG");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.ProdCustomJson).HasColumnName("PROD_CUSTOM_JSON");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductNoTemp).HasColumnName("PRODUCT_NO_TEMP");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.QuantityTemp)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY_TEMP");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TicketImpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_IMP_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Weight)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT");
            entity.Property(e => e.WeightTemp)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("WEIGHT_TEMP");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        modelBuilder.Entity<ProductLocatedMappingLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC2799027F23");

            entity.ToTable("PRODUCT_LOCATED_MAPPING_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IdImpProduct).HasColumnName("ID_IMP_PRODUCT");
            entity.Property(e => e.IdLocMapOld).HasColumnName("ID_LOC_MAP_OLD");
            entity.Property(e => e.IdLocatedMapping).HasColumnName("ID_LOCATED_MAPPING");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MappingCode)
                .HasMaxLength(511)
                .HasColumnName("MAPPING_CODE");
            entity.Property(e => e.MappingCodeOld)
                .HasMaxLength(511)
                .HasColumnName("MAPPING_CODE_OLD");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductNo).HasColumnName("PRODUCT_NO");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(255)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(511)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductLotFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC27F0906E4A");

            entity.ToTable("PRODUCT_LOT_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
        });

        modelBuilder.Entity<ProductPackMapping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC07A032E0AE");

            entity.ToTable("PRODUCT_PACK_MAPPING");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.Position)
                .HasMaxLength(255)
                .HasColumnName("POSITION");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.TicketImpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_IMP_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductQrCode>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PRODUCT___3214EC276B62D2AF");

            entity.ToTable("PRODUCT_QR_CODE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Count).HasColumnName("COUNT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Enable).HasColumnName("ENABLE");
            entity.Property(e => e.ImpCode)
                .HasMaxLength(255)
                .HasColumnName("IMP_CODE");
            entity.Property(e => e.JsonLog).HasColumnName("JSON_LOG");
            entity.Property(e => e.LotCode)
                .HasMaxLength(255)
                .HasColumnName("LOT_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.QrCode)
                .HasMaxLength(500)
                .IsUnicode(false)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasComment("SP hay SP trong kho(lô, phiếu nhập)")
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductQrDeepLink>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PRODUCT_QR_DEEP_LINK");

            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(1000)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProductQualityInspectionAttr>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PRODUCT_QUALITY_INSPECTION_ATTR");

            entity.Property(e => e.AttrCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(255)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProductQualityInspectionId).HasColumnName("PRODUCT_QUALITY_INSPECTION_ID");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value)
                .HasMaxLength(1000)
                .HasColumnName("VALUE");

            entity.HasOne(d => d.ProductQualityInspection).WithMany()
                .HasForeignKey(d => d.ProductQualityInspectionId)
                .HasConstraintName("FK_PRODUCT_QUALITY_INSPECTION_ATTR_PRODUCT_QUALITY_INSPECTION_IMP_DETAILS");
        });

        modelBuilder.Entity<ProductQualityInspectionImp>(entity =>
        {
            entity.ToTable("PRODUCT_QUALITY_INSPECTION_IMP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Checker)
                .HasMaxLength(255)
                .HasColumnName("CHECKER");
            entity.Property(e => e.Excuter)
                .HasMaxLength(255)
                .HasColumnName("EXCUTER");
            entity.Property(e => e.Noted)
                .HasMaxLength(255)
                .HasColumnName("NOTED");
            entity.Property(e => e.QcTicketCode)
                .HasMaxLength(255)
                .HasColumnName("QC_TICKET_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TicketCreateTime).HasColumnName("TICKET_CREATE_TIME");
            entity.Property(e => e.TicketCreator)
                .HasMaxLength(255)
                .HasColumnName("TICKET_CREATOR");
            entity.Property(e => e.TicketTitle)
                .HasMaxLength(255)
                .HasColumnName("TICKET_TITLE");
        });

        modelBuilder.Entity<ProductQualityInspectionImpDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK_PRODUCT_QUANLITY_INSPECTION_IMP_DETAILS");

            entity.ToTable("PRODUCT_QUALITY_INSPECTION_IMP_DETAILS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CheckingDate).HasColumnName("CHECKING_DATE");
            entity.Property(e => e.Content).HasColumnName("CONTENT");
            entity.Property(e => e.DeliveryNo)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_NO");
            entity.Property(e => e.FacilitySpect)
                .HasMaxLength(255)
                .HasColumnName("FACILITY_SPECT");
            entity.Property(e => e.ProdCodeLst).HasColumnName("PROD_CODE_LST");
            entity.Property(e => e.QcTicketCode)
                .HasMaxLength(255)
                .HasColumnName("QC_TICKET_CODE");
            entity.Property(e => e.Quantity)
                .HasMaxLength(255)
                .HasColumnName("QUANTITY");
            entity.Property(e => e.ReceivedDate).HasColumnName("RECEIVED_DATE");
            entity.Property(e => e.Results)
                .HasMaxLength(255)
                .HasColumnName("RESULTS");
            entity.Property(e => e.SupplierCode)
                .HasMaxLength(255)
                .HasColumnName("SUPPLIER_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
        });

        modelBuilder.Entity<ProductSettingWarning>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PRODUCT_SETTING_WARNING");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CurrentQuantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("CURRENT_QUANTITY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MaxTime).HasColumnName("MAX_TIME");
            entity.Property(e => e.MaxValue)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("MAX_VALUE");
            entity.Property(e => e.MinTime).HasColumnName("MIN_TIME");
            entity.Property(e => e.MinValue)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("MIN_VALUE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WarningType)
                .HasMaxLength(100)
                .HasColumnName("WARNING_TYPE");
        });

        modelBuilder.Entity<ProgressTracking>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROGRESS__3214EC27402F2F1C");

            entity.ToTable("PROGRESS_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.Progress)
                .HasColumnType("decimal(14, 0)")
                .HasColumnName("PROGRESS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<Project>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT__3214EC278E0FD498");

            entity.ToTable("PROJECT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(500)
                .HasComment("Address")
                .HasColumnName("ADDRESS");
            entity.Property(e => e.Budget).HasColumnName("BUDGET");
            entity.Property(e => e.CaseWorker)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CASE_WORKER");
            entity.Property(e => e.Completed)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMPLETED");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CustomerCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CUSTOMER_CODE");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.FlagDeleted).HasColumnName("FLAG_DELETED");
            entity.Property(e => e.GoogleMap)
                .HasMaxLength(500)
                .HasColumnName("GOOGLE_MAP");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.Language)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("LANGUAGE");
            entity.Property(e => e.ListUserView).HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.PrjMode)
                .HasMaxLength(100)
                .HasColumnName("PRJ_MODE");
            entity.Property(e => e.PrjSkillKeyword)
                .HasMaxLength(50)
                .HasColumnName("PRJ_SKILL_KEYWORD");
            entity.Property(e => e.PrjStatus)
                .HasMaxLength(50)
                .HasColumnName("PRJ_STATUS");
            entity.Property(e => e.PrjType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRJ_TYPE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.ProjectTitle)
                .HasMaxLength(255)
                .HasColumnName("PROJECT_TITLE");
            entity.Property(e => e.SetPriority).HasColumnName("SET_PRIORITY");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusObject)
                .HasMaxLength(255)
                .HasColumnName("STATUS_OBJECT");
            entity.Property(e => e.StatusObjectLog).HasColumnName("STATUS_OBJECT_LOG");
            entity.Property(e => e.SupplierCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SUPPLIER_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Version).HasColumnName("VERSION");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<ProjectAppointment>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PROJECT_APPOINTMENT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .HasColumnName("LOCATION");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.ProjectVersion).HasColumnName("PROJECT_VERSION");
            entity.Property(e => e.RepeatType)
                .HasMaxLength(255)
                .HasColumnName("REPEAT_TYPE");
            entity.Property(e => e.Tags)
                .HasMaxLength(50)
                .HasColumnName("TAGS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectAttribute>(entity =>
        {
            entity.HasKey(e => e.AttrCode).HasName("PK__PROJECT___486BFE69858EF298");

            entity.ToTable("PROJECT_ATTRIBUTE");

            entity.Property(e => e.AttrCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.AttrValue)
                .HasMaxLength(255)
                .HasColumnName("ATTR_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectCommentList>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PROJECT_COMMENT_LIST");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Dislike).HasColumnName("DISLIKE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonCanvas).HasColumnName("JSON_CANVAS");
            entity.Property(e => e.Like).HasColumnName("LIKE");
            entity.Property(e => e.LikeLog).HasColumnName("LIKE_LOG");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.RefContent).HasColumnName("REF_CONTENT");
            entity.Property(e => e.RefParent).HasColumnName("REF_PARENT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserCreateRef)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_CREATE_REF");
        });

        modelBuilder.Entity<ProjectCusSup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC274DF9900E");

            entity.ToTable("PROJECT_CUS_SUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsMain).HasColumnName("IS_MAIN");
            entity.Property(e => e.ObjCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("OBJ_CODE");
            entity.Property(e => e.ObjType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJ_TYPE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(255)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.Role)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ROLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC27F24D7493");

            entity.ToTable("PROJECT_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .HasColumnName("PROJECT_CODE");
        });

        modelBuilder.Entity<ProjectItemPlan>(entity =>
        {
            entity.ToTable("PROJECT_ITEM_PLAN");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Completed)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COMPLETED");
            entity.Property(e => e.Cost)
                .HasMaxLength(255)
                .HasColumnName("COST");
            entity.Property(e => e.CostUnit)
                .HasMaxLength(255)
                .HasColumnName("COST_UNIT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DurationTime)
                .HasMaxLength(255)
                .HasColumnName("DURATION_TIME");
            entity.Property(e => e.DurationUnit)
                .HasMaxLength(255)
                .HasColumnName("DURATION_UNIT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemLevel)
                .HasMaxLength(255)
                .HasColumnName("ITEM_LEVEL");
            entity.Property(e => e.ItemName)
                .HasMaxLength(1000)
                .HasColumnName("ITEM_NAME");
            entity.Property(e => e.ItemParent)
                .HasMaxLength(255)
                .HasColumnName("ITEM_PARENT");
            entity.Property(e => e.ItemWeight)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("ITEM_WEIGHT");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(255)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectMember>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC2769519517");

            entity.ToTable("PROJECT_MEMBER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FlagDeleted).HasColumnName("FLAG_DELETED");
            entity.Property(e => e.MemberCode)
                .HasMaxLength(100)
                .HasColumnName("MEMBER_CODE");
            entity.Property(e => e.Position)
                .HasMaxLength(50)
                .HasColumnName("POSITION");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectNote>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC27850A0CD4");

            entity.ToTable("PROJECT_NOTE");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.ProjectVersion).HasColumnName("PROJECT_VERSION");
            entity.Property(e => e.Tags)
                .HasMaxLength(50)
                .HasColumnName("TAGS");
            entity.Property(e => e.Title)
                .HasMaxLength(100)
                .HasColumnName("TITLE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC27CE14AE9F_copy1");

            entity.ToTable("PROJECT_PRODUCT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CustomFee)
                .HasComment("CHIẾT KHẤU")
                .HasColumnName("CUSTOM_FEE");
            entity.Property(e => e.Discount)
                .HasComment("GIẢM GIÁ")
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PortType)
                .HasMaxLength(255)
                .HasColumnName("PORT_TYPE");
            entity.Property(e => e.PriceType)
                .HasMaxLength(255)
                .HasColumnName("PRICE_TYPE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.QuantityNeedExport)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY_NEED_EXPORT");
            entity.Property(e => e.StatusObjectLog).HasColumnName("STATUS_OBJECT_LOG");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
        });

        modelBuilder.Entity<ProjectProductDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PROJECT_PRODUCT_DETAIL");

            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.SupplierCode)
                .HasMaxLength(255)
                .HasColumnName("SUPPLIER_CODE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectProductHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PROJECT_PRODUCT_HEADER");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PortType)
                .HasMaxLength(255)
                .HasColumnName("PORT_TYPE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(255)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.Receiver)
                .HasMaxLength(255)
                .HasColumnName("RECEIVER");
            entity.Property(e => e.Sender)
                .HasMaxLength(255)
                .HasColumnName("SENDER");
            entity.Property(e => e.StatusObjectLog).HasColumnName("STATUS_OBJECT_LOG");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(255)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.Supplier)
                .HasMaxLength(255)
                .HasColumnName("SUPPLIER");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TicketCount).HasColumnName("TICKET_COUNT");
            entity.Property(e => e.TicketTime).HasColumnName("TICKET_TIME");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectService>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC27CE14AE9F");

            entity.ToTable("PROJECT_SERVICE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DurationTime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DURATION_TIME");
            entity.Property(e => e.Level)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LEVEL");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
        });

        modelBuilder.Entity<ProjectServiceDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PROJECT_SERVICE_DETAIL");

            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DurationTime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DURATION_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectServiceHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("PROJECT_SERVICE_HEADER");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PortType)
                .HasMaxLength(255)
                .HasColumnName("PORT_TYPE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(255)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.Receiver)
                .HasMaxLength(255)
                .HasColumnName("RECEIVER");
            entity.Property(e => e.Sender)
                .HasMaxLength(255)
                .HasColumnName("SENDER");
            entity.Property(e => e.StatusObjectLog).HasColumnName("STATUS_OBJECT_LOG");
            entity.Property(e => e.Supplier)
                .HasMaxLength(255)
                .HasColumnName("SUPPLIER");
            entity.Property(e => e.TicketCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TICKET_CODE");
            entity.Property(e => e.TicketCount).HasColumnName("TICKET_COUNT");
            entity.Property(e => e.TicketTime).HasColumnName("TICKET_TIME");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectSupplier>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC2757E61940");

            entity.ToTable("PROJECT_SUPPLIER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FlagDeleted).HasColumnName("FLAG_DELETED");
            entity.Property(e => e.Level).HasColumnName("LEVEL");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.SupplierCode)
                .HasMaxLength(100)
                .HasColumnName("SUPPLIER_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ProjectTeam>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC2723E1075A");

            entity.ToTable("PROJECT_TEAM");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.TeamCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TEAM_CODE");
        });

        modelBuilder.Entity<ProjectTeamUser>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__PROJECT___3214EC2796AE7779");

            entity.ToTable("PROJECT_TEAM_USER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Table)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TABLE");
            entity.Property(e => e.TeamCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TEAM_CODE");
            entity.Property(e => e.UserId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_ID");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<QuizPool>(entity =>
        {
            entity.ToTable("QUIZ_POOL");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.Category).HasColumnName("CATEGORY");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .HasColumnName("CODE");
            entity.Property(e => e.Content).HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Duration).HasColumnName("DURATION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsTutor888).HasColumnName("IS_TUTOR888");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.JsonRef).HasColumnName("JSON_REF");
            entity.Property(e => e.LatexInQuiz).HasColumnName("LATEX_IN_QUIZ");
            entity.Property(e => e.LectureCode)
                .HasMaxLength(255)
                .HasColumnName("LECTURE_CODE");
            entity.Property(e => e.LectureRelative).HasColumnName("LECTURE_RELATIVE");
            entity.Property(e => e.Level)
                .HasMaxLength(255)
                .HasColumnName("LEVEL");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PRICE");
            entity.Property(e => e.QuestionMedia).HasColumnName("QUESTION_MEDIA");
            entity.Property(e => e.Rating)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("RATING");
            entity.Property(e => e.RatingLog).HasColumnName("RATING_LOG");
            entity.Property(e => e.Share).HasColumnName("SHARE");
            entity.Property(e => e.Solve).HasColumnName("SOLVE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RecordDeliveryDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORD_D__3214EC27EEB5F34B");

            entity.ToTable("RECORD_DELIVERY_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DeliveryCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_CODE");
            entity.Property(e => e.RecordCode)
                .HasMaxLength(255)
                .HasColumnName("RECORD_CODE");
        });

        modelBuilder.Entity<RecordDeliveryHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORD_D__3214EC274FD02F1C");

            entity.ToTable("RECORD_DELIVERY_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliverCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVER_CODE");
            entity.Property(e => e.DeliveryCode)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_CODE");
            entity.Property(e => e.DeliveryType)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_TYPE");
            entity.Property(e => e.ExpertedReturnDate).HasColumnName("EXPERTED_RETURN_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.RealReturnDate).HasColumnName("REAL_RETURN_DATE");
            entity.Property(e => e.ReceiverName)
                .HasMaxLength(255)
                .HasColumnName("RECEIVER_NAME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RecordsPack>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORDS___3214EC2771BA6B66");

            entity.ToTable("RECORDS_PACK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.PackGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_GROUP");
            entity.Property(e => e.PackHierarchyPath)
                .HasMaxLength(255)
                .HasColumnName("PACK_HIERARCHY_PATH");
            entity.Property(e => e.PackLabel)
                .HasMaxLength(255)
                .HasColumnName("PACK_LABEL");
            entity.Property(e => e.PackLevel)
                .HasMaxLength(255)
                .HasColumnName("PACK_LEVEL");
            entity.Property(e => e.PackName)
                .HasMaxLength(255)
                .HasColumnName("PACK_NAME");
            entity.Property(e => e.PackParent)
                .HasMaxLength(255)
                .HasColumnName("PACK_PARENT");
            entity.Property(e => e.PackQuantity).HasColumnName("PACK_QUANTITY");
            entity.Property(e => e.PackStatus)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_STATUS");
            entity.Property(e => e.PackType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_TYPE");
            entity.Property(e => e.PackZoneLocation)
                .HasMaxLength(255)
                .HasColumnName("PACK_ZONE_LOCATION");
            entity.Property(e => e.QrCode)
                .HasMaxLength(1000)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RecordsPackArrangeLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORDS___3214EC27763DFDFD");

            entity.ToTable("RECORDS_PACK_ARRANGE_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(255)
                .HasColumnName("ACTION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Message)
                .HasMaxLength(255)
                .HasColumnName("MESSAGE");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
        });

        modelBuilder.Entity<RecordsPackAttr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORDS___3214EC27E37571CC");

            entity.ToTable("RECORDS_PACK_ATTR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackAttrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_CODE");
            entity.Property(e => e.PackAttrDataType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_DATA_TYPE");
            entity.Property(e => e.PackAttrGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_GROUP");
            entity.Property(e => e.PackAttrName)
                .HasMaxLength(255)
                .HasColumnName("PACK_ATTR_NAME");
            entity.Property(e => e.PackAttrSize)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_SIZE");
            entity.Property(e => e.PackAttrType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_TYPE");
            entity.Property(e => e.PackAttrUnit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_UNIT");
            entity.Property(e => e.PackAttrValue)
                .HasMaxLength(255)
                .HasColumnName("PACK_ATTR_VALUE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Zone)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZONE");
        });

        modelBuilder.Entity<RecordsPackFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECORDS___3214EC274BD7D0B5");

            entity.ToTable("RECORDS_PACK_FILES");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RecruitmentScheduler>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RECRUITM__3214EC272912B27A");

            entity.ToTable("RECRUITMENT_SCHEDULER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Content)
                .HasMaxLength(255)
                .HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndDate).HasColumnName("END_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListUser).HasColumnName("LIST_USER");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .HasColumnName("LOCATION");
            entity.Property(e => e.Result)
                .HasMaxLength(255)
                .HasColumnName("RESULT");
            entity.Property(e => e.StartDate).HasColumnName("START_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ReminderAttr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__REMINDER__3214EC2748CBB671");

            entity.ToTable("REMINDER_ATTR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ReminderCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("REMINDER_CODE");
            entity.Property(e => e.ReminderTitle)
                .HasMaxLength(255)
                .HasColumnName("REMINDER_TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RequestImpProductDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__REQUEST___3214EC278F6C2946");

            entity.ToTable("REQUEST_IMP_PRODUCT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ExpectedDate).HasColumnName("EXPECTED_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.PoCount)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_COUNT");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.RateConversion)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("RATE_CONVERSION");
            entity.Property(e => e.RateLoss)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("RATE_LOSS");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.SupCode)
                .HasMaxLength(255)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RequestImpProductHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__REQUEST___3214EC27B511DB27");

            entity.ToTable("REQUEST_IMP_PRODUCT_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApprovedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("APPROVED_BY");
            entity.Property(e => e.ApprovedTime).HasColumnName("APPROVED_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CusCode)
                .HasMaxLength(255)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.LogData).HasColumnName("LOG_DATA");
            entity.Property(e => e.LogProductDetail).HasColumnName("LOG_PRODUCT_DETAIL");
            entity.Property(e => e.PoCode)
                .HasMaxLength(255)
                .HasColumnName("PO_CODE");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(255)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusObject)
                .HasMaxLength(255)
                .HasColumnName("STATUS_OBJECT");
            entity.Property(e => e.StatusObjectLog).HasColumnName("STATUS_OBJECT_LOG");
            entity.Property(e => e.TimeTicketCreate).HasColumnName("TIME_TICKET_CREATE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserRequest)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_REQUEST");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<RequestPoSup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__REQUEST___3214EC2797E3E4F5");

            entity.ToTable("REQUEST_PO_SUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RequestPriceDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__REQUEST___3214EC27E5CCD53E");

            entity.ToTable("REQUEST_PRICE_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliveryTime).HasColumnName("DELIVERY_TIME");
            entity.Property(e => e.DesiredPrice)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DESIRED_PRICE");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.ExpectedDate).HasColumnName("EXPECTED_DATE");
            entity.Property(e => e.GattrCode)
                .HasMaxLength(255)
                .HasColumnName("GATTR_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.QuantitySupplies)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY_SUPPLIES");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.SupCode)
                .HasMaxLength(255)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("TOTAL");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RequestPriceHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__REQUEST___3214EC2788442BEC");

            entity.ToTable("REQUEST_PRICE_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliveryTime).HasColumnName("DELIVERY_TIME");
            entity.Property(e => e.ExpectedDate).HasColumnName("EXPECTED_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.LogStatus).HasColumnName("LOG_STATUS");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TimeTicketCreate).HasColumnName("TIME_TICKET_CREATE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserRequest)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_REQUEST");
        });

        modelBuilder.Entity<RequestPriceServiceDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__REQUEST___3214EC27F2922561");

            entity.ToTable("REQUEST_PRICE_SERVICE_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Commission).HasColumnName("COMMISSION");
            entity.Property(e => e.ContractVersion).HasColumnName("CONTRACT_VERSION");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CustomFee).HasColumnName("CUSTOM_FEE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Discount).HasColumnName("DISCOUNT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(100)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.ServiceName)
                .HasMaxLength(255)
                .HasColumnName("SERVICE_NAME");
            entity.Property(e => e.Tax).HasColumnName("TAX");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ResultFindOcr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RESULT_F__3214EC27EE0F598E");

            entity.ToTable("RESULT_FIND_OCR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KeyWord)
                .HasMaxLength(255)
                .HasColumnName("KEY_WORD");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("USER_ID");
            entity.Property(e => e.Value).HasColumnName("VALUE");
        });

        modelBuilder.Entity<RmCancelTracking>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_CANCEL_TRACKING");

            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateDate)
                .HasColumnType("datetime")
                .HasColumnName("CREATE_DATE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(100)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.Note)
                .HasMaxLength(300)
                .HasColumnName("NOTE");
            entity.Property(e => e.ParkingCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PARKING_CODE");
            entity.Property(e => e.ReasonCancel)
                .HasMaxLength(100)
                .HasColumnName("REASON_CANCEL");
            entity.Property(e => e.TripCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TRIP_CODE");
        });

        modelBuilder.Entity<RmCommandOrderTruck>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_COMMAND_ORDER_TRUCK");

            entity.Property(e => e.Active)
                .HasMaxLength(255)
                .HasColumnName("ACTIVE");
            entity.Property(e => e.CauDuong)
                .HasMaxLength(255)
                .HasColumnName("CAU_DUONG");
            entity.Property(e => e.ChiKhac)
                .HasMaxLength(255)
                .HasColumnName("CHI_KHAC");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.ConfirmTime).HasColumnName("CONFIRM_TIME");
            entity.Property(e => e.ConfirmType)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("CONFIRM_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DiaChi)
                .HasMaxLength(255)
                .HasColumnName("DIA_CHI");
            entity.Property(e => e.GhiChu)
                .HasMaxLength(255)
                .HasColumnName("GHI_CHU");
            entity.Property(e => e.HaCont)
                .HasMaxLength(255)
                .HasColumnName("HA_CONT");
            entity.Property(e => e.Hang)
                .HasMaxLength(255)
                .HasColumnName("HANG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KhachHang)
                .HasMaxLength(255)
                .HasColumnName("KHACH_HANG");
            entity.Property(e => e.KiemHoa)
                .HasMaxLength(255)
                .HasColumnName("KIEM_HOA");
            entity.Property(e => e.KyXacNhan)
                .HasMaxLength(255)
                .HasColumnName("KY_XAC_NHAN");
            entity.Property(e => e.LuuBai)
                .HasMaxLength(255)
                .HasColumnName("LUU_BAI");
            entity.Property(e => e.LuuRong)
                .HasMaxLength(255)
                .HasColumnName("LUU_RONG");
            entity.Property(e => e.MaTheoDoi)
                .HasMaxLength(255)
                .HasColumnName("MA_THEO_DOI");
            entity.Property(e => e.MucDoUuTien).HasColumnName("MUC_DO_UU_TIEN");
            entity.Property(e => e.NangCont)
                .HasMaxLength(255)
                .HasColumnName("NANG_CONT");
            entity.Property(e => e.NeoMooc)
                .HasMaxLength(255)
                .HasColumnName("NEO_MOOC");
            entity.Property(e => e.NgayDieuXe)
                .HasMaxLength(255)
                .HasColumnName("NGAY_DIEU_XE");
            entity.Property(e => e.NgayGioDen)
                .HasMaxLength(100)
                .HasColumnName("NGAY_GIO_DEN");
            entity.Property(e => e.NgayGioDi)
                .HasMaxLength(100)
                .HasColumnName("NGAY_GIO_DI");
            entity.Property(e => e.NoiHa)
                .HasMaxLength(255)
                .HasColumnName("NOI_HA");
            entity.Property(e => e.NoiLay)
                .HasMaxLength(255)
                .HasColumnName("NOI_LAY");
            entity.Property(e => e.NoiXuatPhat)
                .HasMaxLength(500)
                .HasColumnName("NOI_XUAT_PHAT");
            entity.Property(e => e.Payment)
                .HasMaxLength(255)
                .HasColumnName("PAYMENT");
            entity.Property(e => e.PhiNgoai)
                .HasMaxLength(255)
                .HasColumnName("PHI_NGOAI");
            entity.Property(e => e.PhuongAn)
                .HasMaxLength(255)
                .HasColumnName("PHUONG_AN");
            entity.Property(e => e.PtGiaoCont)
                .HasMaxLength(255)
                .HasColumnName("PT_GIAO_CONT");
            entity.Property(e => e.SoCont)
                .HasMaxLength(255)
                .HasColumnName("SO_CONT");
            entity.Property(e => e.SoLenh)
                .HasMaxLength(255)
                .HasColumnName("SO_LENH");
            entity.Property(e => e.SoMooc)
                .HasMaxLength(255)
                .HasColumnName("SO_MOOC");
            entity.Property(e => e.SoXe)
                .HasMaxLength(255)
                .HasColumnName("SO_XE");
            entity.Property(e => e.TenTaiXe)
                .HasMaxLength(255)
                .HasColumnName("TEN_TAI_XE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TongCong)
                .HasMaxLength(255)
                .HasColumnName("TONG_CONG");
            entity.Property(e => e.TripCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TRIP_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.VeCong)
                .HasMaxLength(255)
                .HasColumnName("VE_CONG");
            entity.Property(e => e.VeSinh)
                .HasMaxLength(255)
                .HasColumnName("VE_SINH");
        });

        modelBuilder.Entity<RmCommonSetting>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_COMMON_SETTING");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(50)
                .HasColumnName("GROUP");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value)
                .HasMaxLength(255)
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<RmDriverActivityLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_DRIVER_ACTIVITY_LOG");

            entity.Property(e => e.CdataJson).HasColumnName("CDATA_JSON");
            entity.Property(e => e.Chanel)
                .HasMaxLength(100)
                .HasColumnName("CHANEL");
            entity.Property(e => e.DriverId).HasColumnName("DRIVER_ID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.NodeGis).HasColumnName("NODE_GIS");
            entity.Property(e => e.SysDate).HasColumnName("SYS_DATE");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(100)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<RmECompany>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_E_COMPANY");

            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.CompanyContact)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_CONTACT");
            entity.Property(e => e.CompanyImage)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_IMAGE");
            entity.Property(e => e.CompanyName)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_NAME");
            entity.Property(e => e.CompanyOwner)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_OWNER");
            entity.Property(e => e.CompanyPhone)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_PHONE");
            entity.Property(e => e.CompanyType)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_TYPE");
            entity.Property(e => e.CompanyWebsite)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_WEBSITE");
            entity.Property(e => e.CreateBy).HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateDate).HasColumnName("CREATE_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UpdateBy).HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateDate).HasColumnName("UPDATE_DATE");
        });

        modelBuilder.Entity<RmGisTable>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_GIS_TABLE");

            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .HasColumnName("NAME");
            entity.Property(e => e.NodeGis).HasColumnName("NODE_GIS");
            entity.Property(e => e.Parent)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PARENT");
            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TYPE");
        });

        modelBuilder.Entity<RmHrEmployee>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_HR_EMPLOYEE");

            entity.Property(e => e.Accountholder)
                .HasMaxLength(50)
                .HasComment("Chủ tài khoản - AccountHolder")
                .HasColumnName("ACCOUNTHOLDER");
            entity.Property(e => e.Accountnumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Số tài khoản - AccountNumber")
                .HasColumnName("ACCOUNTNUMBER");
            entity.Property(e => e.Accountopenplace)
                .HasMaxLength(100)
                .HasComment("Nơi mở tài khoản - AccountOpenPlace")
                .HasColumnName("ACCOUNTOPENPLACE");
            entity.Property(e => e.Bank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("Ngân hàng - Bank")
                .HasColumnName("BANK");
            entity.Property(e => e.Birthday)
                .HasComment("Ngày sinh - Birthday")
                .HasColumnName("BIRTHDAY");
            entity.Property(e => e.Birthofplace)
                .HasMaxLength(200)
                .HasComment("Nguyên quán - BirthOfPlace")
                .HasColumnName("BIRTHOFPLACE");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.Computerskill)
                .HasMaxLength(250)
                .HasComment("Trình độ tin học - ComputerSkill")
                .HasColumnName("COMPUTERSKILL");
            entity.Property(e => e.CreateBy).HasColumnName("CREATE_BY");
            entity.Property(e => e.Createtime)
                .HasColumnType("datetime")
                .HasColumnName("CREATETIME");
            entity.Property(e => e.Disciplines)
                .HasMaxLength(50)
                .HasComment("Ngành học - Disciplines")
                .HasColumnName("DISCIPLINES");
            entity.Property(e => e.Educationallevel)
                .HasMaxLength(50)
                .HasComment("Trình độ văn hóa - EducationalLevel")
                .HasColumnName("EDUCATIONALLEVEL");
            entity.Property(e => e.Emailpassword)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("EmailPassword")
                .HasColumnName("EMAILPASSWORD");
            entity.Property(e => e.Emailuser)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasComment("EmailUser")
                .HasColumnName("EMAILUSER");
            entity.Property(e => e.Employeegroup)
                .HasComment("1: Nhân viên\r\n2: Giáo viên\r\n3: Gia sư\r\n4: Thực tập - EmployeeGroup")
                .HasColumnName("EMPLOYEEGROUP");
            entity.Property(e => e.Employeekind)
                .HasComment("Loại hình nhân viên - EmployeeKind")
                .HasColumnName("EMPLOYEEKIND");
            entity.Property(e => e.Employeetype)
                .HasComment("Kiểu nhân viên - EmployeeType")
                .HasColumnName("EMPLOYEETYPE");
            entity.Property(e => e.Factiondate)
                .HasComment("Ngày vào đảng - FactionDate")
                .HasColumnType("datetime")
                .HasColumnName("FACTIONDATE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Fullname)
                .HasMaxLength(50)
                .HasComment("Họ vs tên - FullName")
                .HasColumnName("FULLNAME");
            entity.Property(e => e.Gender)
                .HasComment("Giới tính - Gender")
                .HasColumnName("GENDER");
            entity.Property(e => e.Health)
                .HasMaxLength(50)
                .HasComment("Sức khẻo - Health")
                .HasColumnName("HEALTH");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasComment("id - Id")
                .HasColumnName("ID");
            entity.Property(e => e.IdDriver).HasColumnName("ID_DRIVER");
            entity.Property(e => e.Identification)
                .HasMaxLength(100)
                .HasComment("Nhận dạng - Identification")
                .HasColumnName("IDENTIFICATION");
            entity.Property(e => e.Identitycard)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasComment("Chứng minh nhân dân - IdentityCard")
                .HasColumnName("IDENTITYCARD");
            entity.Property(e => e.Identitycarddate)
                .HasComment("Ngày cấp chứng minh thư - IdentityCardDate")
                .HasColumnName("IDENTITYCARDDATE");
            entity.Property(e => e.Identitycardplace)
                .HasMaxLength(20)
                .HasComment("Nới cấp chứng minh thư - IdentityCardPlace")
                .HasColumnName("IDENTITYCARDPLACE");
            entity.Property(e => e.Language)
                .HasMaxLength(10)
                .HasColumnName("LANGUAGE");
            entity.Property(e => e.Languagelevel)
                .HasMaxLength(50)
                .HasComment("Trình độ ngoại ngử - LanguageLevel")
                .HasColumnName("LANGUAGELEVEL");
            entity.Property(e => e.Maritalstatus)
                .HasComment("Tình trạng hôn nhân - MaritalStatus")
                .HasColumnName("MARITALSTATUS");
            entity.Property(e => e.Nation)
                .HasMaxLength(50)
                .HasComment("Dân tộc - Nation")
                .HasColumnName("NATION");
            entity.Property(e => e.Nationlaty)
                .HasMaxLength(100)
                .HasComment("Quốc tịch - Nationlaty")
                .HasColumnName("NATIONLATY");
            entity.Property(e => e.Nickname)
                .HasMaxLength(50)
                .HasComment("Tên thường dùng - NickName")
                .HasColumnName("NICKNAME");
            entity.Property(e => e.Permanentresidence)
                .HasMaxLength(200)
                .HasComment("Hộ khẩu thường trú - PermanentResidence")
                .HasColumnName("PERMANENTRESIDENCE");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .HasComment("Số điện thoại - Phone")
                .HasColumnName("PHONE");
            entity.Property(e => e.Picture)
                .HasMaxLength(255)
                .HasComment("Id Hình ảnh - Picture")
                .HasColumnName("PICTURE");
            entity.Property(e => e.Position)
                .HasMaxLength(255)
                .HasComment("Chức vụ - Position")
                .HasColumnName("POSITION");
            entity.Property(e => e.Religion)
                .HasMaxLength(50)
                .HasComment("Tôn giáo - Religion")
                .HasColumnName("RELIGION");
            entity.Property(e => e.Salaryfactor)
                .HasComment("Hệ số lương - SalaryFactor")
                .HasColumnName("SALARYFACTOR");
            entity.Property(e => e.Salarygroup)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasComment("Nhóm lương - SalaryGroup")
                .HasColumnName("SALARYGROUP");
            entity.Property(e => e.Salarytype)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Loại lương - SalaryType")
                .HasColumnName("SALARYTYPE");
            entity.Property(e => e.Socialinsurance)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasComment("Số bảo hiểm xã hội - SocialInsurance")
                .HasColumnName("SOCIALINSURANCE");
            entity.Property(e => e.Socialinsurancedate)
                .HasComment("Ngày cấp bảo hiểm xa hội - SocialInsuranceDate")
                .HasColumnName("SOCIALINSURANCEDATE");
            entity.Property(e => e.Socialinsuranceplace)
                .HasMaxLength(20)
                .HasComment("Nơi cấp bảo hiểm xã hội - SocialInsurancePlace")
                .HasColumnName("SOCIALINSURANCEPLACE");
            entity.Property(e => e.Specialized)
                .HasMaxLength(50)
                .HasComment("Chuyên ngành - Specialized")
                .HasColumnName("SPECIALIZED");
            entity.Property(e => e.Status)
                .HasComment("Trạng thái - Status")
                .HasColumnName("STATUS");
            entity.Property(e => e.Taxcode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasComment("Mã số thuế - TaxCode")
                .HasColumnName("TAXCODE");
            entity.Property(e => e.Trainingschool)
                .HasMaxLength(50)
                .HasComment("Trường đào tạo - TrainingSchool")
                .HasColumnName("TRAININGSCHOOL");
            entity.Property(e => e.Trainingtime)
                .HasMaxLength(200)
                .HasComment("Thời gian đào tạo - TrainingTime")
                .HasColumnName("TRAININGTIME");
            entity.Property(e => e.Trainingtype)
                .HasMaxLength(50)
                .HasComment(" TrainingType")
                .HasColumnName("TRAININGTYPE");
            entity.Property(e => e.Unit)
                .HasComment("Đơn vị - Unit")
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.Updatetime)
                .HasColumnType("datetime")
                .HasColumnName("UPDATETIME");
            entity.Property(e => e.Wage)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasComment("Bậc lương - Wage")
                .HasColumnName("WAGE");
        });

        modelBuilder.Entity<RmJnanaApiGoogleService>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_JNANA_API_GOOGLE_SERVICES");

            entity.Property(e => e.Description)
                .HasMaxLength(250)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Key)
                .HasMaxLength(250)
                .HasColumnName("KEY");
            entity.Property(e => e.Limit).HasColumnName("LIMIT");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(50)
                .HasColumnName("SERVICE_TYPE");
        });

        modelBuilder.Entity<RmJnanaCountRequestGoogle>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RM_JNANA__3214EC0747506C57");

            entity.ToTable("RM_JNANA_COUNT_REQUEST_GOOGLE");

            entity.Property(e => e.CreateTime).HasColumnName("Create_time");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("device");
            entity.Property(e => e.IsLimit).HasColumnName("Is_limit");
            entity.Property(e => e.NumRequest).HasColumnName("Num_request");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(50)
                .HasColumnName("Service_type");
            entity.Property(e => e.UpdateTime).HasColumnName("Update_time");
        });

        modelBuilder.Entity<RmJnanaFcm>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RM_JNANA__3214EC072244E88D");

            entity.ToTable("RM_JNANA_FCM");

            entity.Property(e => e.Token).HasMaxLength(250);
            entity.Property(e => e.UserId).HasColumnName("User_id");
        });

        modelBuilder.Entity<RmJnanaFcmMessage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RM_JNANA__3214EC07F2CD7D5D");

            entity.ToTable("RM_JNANA_FCM_MESSAGE");

            entity.Property(e => e.CreateTime).HasColumnName("Create_time");
            entity.Property(e => e.Message).HasMaxLength(1000);
            entity.Property(e => e.Title).HasMaxLength(500);
            entity.Property(e => e.UserId).HasColumnName("User_Id");
        });

        modelBuilder.Entity<RmJnanaFile>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_JNANA_FILE");

            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileCatCode)
                .HasMaxLength(250)
                .HasColumnName("FILE_CAT_CODE");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileExt)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("FILE_EXT");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FileNote)
                .HasMaxLength(255)
                .HasColumnName("FILE_NOTE");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileSize).HasColumnName("FILE_SIZE");
            entity.Property(e => e.FileStatus).HasColumnName("FILE_STATUS");
            entity.Property(e => e.FileTitle)
                .HasMaxLength(255)
                .HasColumnName("FILE_TITLE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RmJnanaNewsArticle>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_JNANA_NEWS_ARTICLE");

            entity.Property(e => e.ArticleAvarta)
                .HasMaxLength(1000)
                .HasColumnName("ARTICLE_AVARTA");
            entity.Property(e => e.ArticleCode)
                .HasMaxLength(250)
                .HasColumnName("ARTICLE_CODE");
            entity.Property(e => e.ArticleContent)
                .HasMaxLength(1000)
                .HasColumnName("ARTICLE_CONTENT");
            entity.Property(e => e.ArticleStatus).HasColumnName("ARTICLE_STATUS");
            entity.Property(e => e.ArticleTitle)
                .HasMaxLength(1000)
                .HasColumnName("ARTICLE_TITLE");
            entity.Property(e => e.ArtileOrder).HasColumnName("ARTILE_ORDER");
            entity.Property(e => e.CatCode)
                .HasMaxLength(250)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UpdateBy).HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<RmJnanaNewsArticleFile>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_JNANA_NEWS_ARTICLE_FILE");

            entity.Property(e => e.ArticleCode)
                .HasMaxLength(250)
                .HasColumnName("ARTICLE_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(250)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<RmJnanaNewsCat>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_JNANA_NEWS_CAT");

            entity.Property(e => e.CatAvarta)
                .HasMaxLength(1000)
                .HasColumnName("CAT_AVARTA");
            entity.Property(e => e.CatCode)
                .HasMaxLength(250)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CatDescription)
                .HasMaxLength(1000)
                .HasColumnName("CAT_DESCRIPTION");
            entity.Property(e => e.CatParentCode).HasColumnName("CAT_PARENT_CODE");
            entity.Property(e => e.CatStatus).HasColumnName("CAT_STATUS");
            entity.Property(e => e.CatTitle)
                .HasMaxLength(1000)
                .HasColumnName("CAT_TITLE");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UpdateBy).HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<RmRomoocCurrentPosition>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_ROMOOC_CURRENT_POSITION");

            entity.Property(e => e.DriverId).HasColumnName("DRIVER_ID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(255)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionParking)
                .HasMaxLength(255)
                .HasColumnName("POSITION_PARKING");
            entity.Property(e => e.PositionText).HasColumnName("POSITION_TEXT");
            entity.Property(e => e.PositionTime).HasColumnName("POSITION_TIME");
            entity.Property(e => e.RemoocCode)
                .HasMaxLength(255)
                .HasColumnName("REMOOC_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TractorCode)
                .HasMaxLength(255)
                .HasColumnName("TRACTOR_CODE");
            entity.Property(e => e.TripCode)
                .HasMaxLength(255)
                .HasColumnName("TRIP_CODE");
        });

        modelBuilder.Entity<RmRomoocDriver>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_ROMOOC_DRIVER");

            entity.Property(e => e.Active).HasColumnName("ACTIVE");
            entity.Property(e => e.BalanceCredit).HasColumnName("BALANCE_CREDIT");
            entity.Property(e => e.Brand)
                .HasMaxLength(255)
                .HasColumnName("BRAND");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.CurrentChannel)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CURRENT_CHANNEL");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("EMAIL");
            entity.Property(e => e.Emei)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EMEI");
            entity.Property(e => e.EndName)
                .HasMaxLength(255)
                .HasColumnName("END_NAME");
            entity.Property(e => e.EndNameGps)
                .HasMaxLength(255)
                .HasColumnName("END_NAME_GPS");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IdFb)
                .HasMaxLength(50)
                .HasColumnName("ID_FB");
            entity.Property(e => e.Identification)
                .HasMaxLength(255)
                .HasColumnName("IDENTIFICATION");
            entity.Property(e => e.ImageCar)
                .HasMaxLength(255)
                .HasColumnName("IMAGE_CAR");
            entity.Property(e => e.IsBusy).HasColumnName("IS_BUSY");
            entity.Property(e => e.IsOnline).HasColumnName("IS_ONLINE");
            entity.Property(e => e.LicenseCarImage)
                .HasMaxLength(255)
                .HasColumnName("LICENSE_CAR_IMAGE");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(50)
                .HasColumnName("LICENSE_PLATE");
            entity.Property(e => e.Name)
                .HasMaxLength(150)
                .HasColumnName("NAME");
            entity.Property(e => e.Password)
                .HasMaxLength(50)
                .HasColumnName("PASSWORD");
            entity.Property(e => e.Phone)
                .HasMaxLength(15)
                .HasColumnName("PHONE");
            entity.Property(e => e.Polyline)
                .HasMaxLength(2000)
                .HasColumnName("POLYLINE");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(1000)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionText)
                .HasMaxLength(500)
                .HasColumnName("POSITION_TEXT");
            entity.Property(e => e.PositionTime).HasColumnName("POSITION_TIME");
            entity.Property(e => e.ProfilePicture)
                .HasMaxLength(255)
                .HasColumnName("PROFILE_PICTURE");
            entity.Property(e => e.RemoocCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("REMOOC_CODE");
            entity.Property(e => e.StartName)
                .HasMaxLength(255)
                .HasColumnName("START_NAME");
            entity.Property(e => e.StartNameGps)
                .HasMaxLength(255)
                .HasColumnName("START_NAME_GPS");
            entity.Property(e => e.TaxyType)
                .HasMaxLength(255)
                .HasColumnName("TAXY_TYPE");
            entity.Property(e => e.TractorCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TRACTOR_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasColumnName("TYPE");
            entity.Property(e => e.TypeCarYear)
                .HasMaxLength(50)
                .HasColumnName("TYPE_CAR_YEAR");
            entity.Property(e => e.TypeDriver).HasColumnName("TYPE_DRIVER");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
            entity.Property(e => e.Username)
                .HasMaxLength(50)
                .HasColumnName("USERNAME");
            entity.Property(e => e.VirualIntiary)
                .HasMaxLength(4000)
                .HasColumnName("VIRUAL_INTIARY");
        });

        modelBuilder.Entity<RmRomoocExtrafield>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_ROMOOC_EXTRAFIELD");

            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.CreateTime).HasColumnName("CREATE_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.FieldCode)
                .HasMaxLength(255)
                .HasColumnName("FIELD_CODE");
            entity.Property(e => e.FieldType)
                .HasMaxLength(255)
                .HasColumnName("FIELD_TYPE");
            entity.Property(e => e.FieldValue)
                .HasMaxLength(255)
                .HasColumnName("FIELD_VALUE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<RmRomoocFcm>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_ROMOOC_FCM");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Token)
                .HasMaxLength(250)
                .HasColumnName("TOKEN");
            entity.Property(e => e.UserId).HasColumnName("USER_ID");
        });

        modelBuilder.Entity<RmRomoocFcmMessage>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_ROMOOC_FCM_MESSAGE");

            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Message)
                .HasMaxLength(1000)
                .HasColumnName("MESSAGE");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type).HasColumnName("TYPE");
            entity.Property(e => e.UserId).HasColumnName("USER_ID");
        });

        modelBuilder.Entity<RmRomoocPacking>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_ROMOOC_PACKING");

            entity.Property(e => e.Address)
                .HasMaxLength(500)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.CreateBy).HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateDate).HasColumnName("CREATE_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.GisData)
                .HasMaxLength(2000)
                .HasColumnName("GIS_DATA");
            entity.Property(e => e.Icon)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ICON");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.Owner)
                .HasMaxLength(255)
                .HasColumnName("OWNER");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdateBy).HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateDate).HasColumnName("UPDATE_DATE");
        });

        modelBuilder.Entity<RmRomoocRemooc>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_ROMOOC_REMOOC");

            entity.Property(e => e.Barcode)
                .HasMaxLength(255)
                .HasColumnName("BARCODE");
            entity.Property(e => e.Brand)
                .HasMaxLength(255)
                .HasColumnName("BRAND");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.Container)
                .HasMaxLength(255)
                .HasColumnName("CONTAINER");
            entity.Property(e => e.CreateBy).HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateDate).HasColumnName("CREATE_DATE");
            entity.Property(e => e.CurentSize)
                .HasMaxLength(255)
                .HasColumnName("CURENT_SIZE");
            entity.Property(e => e.DateOfEntry).HasColumnName("DATE_OF_ENTRY");
            entity.Property(e => e.DateOfUse).HasColumnName("DATE_OF_USE");
            entity.Property(e => e.DayRegistry).HasColumnName("DAY_REGISTRY");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.DesignWeight)
                .HasMaxLength(255)
                .HasColumnName("DESIGN_WEIGHT");
            entity.Property(e => e.Extrafield).HasColumnName("EXTRAFIELD");
            entity.Property(e => e.FlagDelete).HasColumnName("FLAG_DELETE");
            entity.Property(e => e.Generic)
                .HasMaxLength(255)
                .HasColumnName("GENERIC");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.InternalCode)
                .HasMaxLength(255)
                .HasColumnName("INTERNAL_CODE");
            entity.Property(e => e.LisencePlate)
                .HasMaxLength(255)
                .HasColumnName("LISENCE_PLATE");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.Number)
                .HasMaxLength(255)
                .HasColumnName("NUMBER");
            entity.Property(e => e.NumberTruck).HasColumnName("NUMBER_TRUCK");
            entity.Property(e => e.Origin)
                .HasMaxLength(255)
                .HasColumnName("ORIGIN");
            entity.Property(e => e.OwerCode)
                .HasMaxLength(255)
                .HasColumnName("OWER_CODE");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(1000)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionText)
                .HasMaxLength(500)
                .HasColumnName("POSITION_TEXT");
            entity.Property(e => e.SelfWeight)
                .HasMaxLength(255)
                .HasColumnName("SELF_WEIGHT");
            entity.Property(e => e.Size)
                .HasMaxLength(255)
                .HasColumnName("SIZE");
            entity.Property(e => e.SumDistance).HasColumnName("SUM_DISTANCE");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.TotalWeight)
                .HasMaxLength(255)
                .HasColumnName("TOTAL_WEIGHT");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdateBy).HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateDate).HasColumnName("UPDATE_DATE");
        });

        modelBuilder.Entity<RmRomoocTracking>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_ROMOOC_TRACKING");

            entity.Property(e => e.Band)
                .HasMaxLength(255)
                .HasColumnName("BAND");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.ContainerCode)
                .HasMaxLength(255)
                .HasColumnName("CONTAINER_CODE");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(255)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateTime).HasColumnName("CREATE_TIME");
            entity.Property(e => e.CurrentPositionGps)
                .HasMaxLength(50)
                .HasColumnName("CURRENT_POSITION_GPS");
            entity.Property(e => e.CurrentPositionText)
                .HasMaxLength(255)
                .HasColumnName("CURRENT_POSITION_TEXT");
            entity.Property(e => e.DriverId).HasColumnName("DRIVER_ID");
            entity.Property(e => e.EndPositionCode)
                .HasMaxLength(255)
                .HasColumnName("END_POSITION_CODE");
            entity.Property(e => e.EndPositionGps)
                .HasMaxLength(1000)
                .HasColumnName("END_POSITION_GPS");
            entity.Property(e => e.EndPositionText)
                .HasMaxLength(255)
                .HasColumnName("END_POSITION_TEXT");
            entity.Property(e => e.EndPositionTime).HasColumnName("END_POSITION_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Imgcontain1)
                .HasMaxLength(255)
                .HasColumnName("IMGCONTAIN1");
            entity.Property(e => e.Imgcontain2)
                .HasMaxLength(255)
                .HasColumnName("IMGCONTAIN2");
            entity.Property(e => e.InitPositionCode)
                .HasMaxLength(255)
                .HasColumnName("INIT_POSITION_CODE");
            entity.Property(e => e.InitPositionGps)
                .HasMaxLength(1000)
                .HasColumnName("INIT_POSITION_GPS");
            entity.Property(e => e.InitPositionText)
                .HasMaxLength(255)
                .HasColumnName("INIT_POSITION_TEXT");
            entity.Property(e => e.InitPositionTime).HasColumnName("INIT_POSITION_TIME");
            entity.Property(e => e.MaTheoDoi)
                .HasMaxLength(255)
                .HasColumnName("MA_THEO_DOI");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.RemoocCode)
                .HasMaxLength(255)
                .HasColumnName("REMOOC_CODE");
            entity.Property(e => e.StartPositionCode)
                .HasMaxLength(255)
                .HasColumnName("START_POSITION_CODE");
            entity.Property(e => e.StartPositionGps)
                .HasMaxLength(1000)
                .HasColumnName("START_POSITION_GPS");
            entity.Property(e => e.StartPositionText)
                .HasMaxLength(255)
                .HasColumnName("START_POSITION_TEXT");
            entity.Property(e => e.StartPositionTime).HasColumnName("START_POSITION_TIME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TractorCode)
                .HasMaxLength(255)
                .HasColumnName("TRACTOR_CODE");
            entity.Property(e => e.TripCode)
                .HasMaxLength(255)
                .HasColumnName("TRIP_CODE");
            entity.Property(e => e.TypeTrip)
                .HasMaxLength(255)
                .HasColumnName("TYPE_TRIP");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<RmRomoocTractor>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_ROMOOC_TRACTOR");

            entity.Property(e => e.Category)
                .HasMaxLength(250)
                .HasColumnName("CATEGORY");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateDate).HasColumnName("CREATE_DATE");
            entity.Property(e => e.DesignPayload).HasColumnName("DESIGN_PAYLOAD");
            entity.Property(e => e.DriverId).HasColumnName("DRIVER_ID");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Generic)
                .HasMaxLength(255)
                .HasColumnName("GENERIC");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.InsurranceDuration).HasColumnName("INSURRANCE_DURATION");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(50)
                .HasColumnName("LICENSE_PLATE");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(1255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Number).HasColumnName("NUMBER");
            entity.Property(e => e.Origin)
                .HasMaxLength(255)
                .HasColumnName("ORIGIN");
            entity.Property(e => e.OwnerCode)
                .HasMaxLength(255)
                .HasColumnName("OWNER_CODE");
            entity.Property(e => e.PayloadPulled).HasColumnName("PAYLOAD_PULLED");
            entity.Property(e => e.PayloadTotal).HasColumnName("PAYLOAD_TOTAL");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(1000)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionText)
                .HasMaxLength(500)
                .HasColumnName("POSITION_TEXT");
            entity.Property(e => e.RegistryDuration).HasColumnName("REGISTRY_DURATION");
            entity.Property(e => e.RomoocCode)
                .HasMaxLength(500)
                .HasColumnName("ROMOOC_CODE");
            entity.Property(e => e.SizeRegistry)
                .HasMaxLength(100)
                .HasColumnName("SIZE_REGISTRY");
            entity.Property(e => e.SizeUse)
                .HasMaxLength(100)
                .HasColumnName("SIZE_USE");
            entity.Property(e => e.SumDistance).HasColumnName("SUM_DISTANCE");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateDate).HasColumnName("UPDATE_DATE");
            entity.Property(e => e.WeightItself).HasColumnName("WEIGHT_ITSELF");
            entity.Property(e => e.YearManufacture).HasColumnName("YEAR_MANUFACTURE");
        });

        modelBuilder.Entity<RmSosInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RM_SOS_I__3214EC2720BA45B4");

            entity.ToTable("RM_SOS_INFO");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Data)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("DATA");
            entity.Property(e => e.ImageCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IMAGE_CODE");
            entity.Property(e => e.Note)
                .HasMaxLength(100)
                .HasColumnName("NOTE");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.Title)
                .HasMaxLength(100)
                .HasColumnName("TITLE");
        });

        modelBuilder.Entity<RmSosMedium>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__RM_SOS_M__3214EC27B8788A65");

            entity.ToTable("RM_SOS_MEDIA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.Extension)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EXTENSION");
            entity.Property(e => e.ImageBinary)
                .HasColumnType("image")
                .HasColumnName("IMAGE_BINARY");
            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NAME");
            entity.Property(e => e.Path)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PATH");
            entity.Property(e => e.Size).HasColumnName("SIZE");
            entity.Property(e => e.SosCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SOS_CODE");
        });

        modelBuilder.Entity<RmVayxeActivityRequestStatusDelivery>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_VAYXE_ACTIVITY_REQUEST_STATUS_DELIVERY");

            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsDisable).HasColumnName("IS_DISABLE");
            entity.Property(e => e.RequestCode)
                .HasMaxLength(255)
                .HasColumnName("REQUEST_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
        });

        modelBuilder.Entity<RmVayxeBookChecking>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_VAYXE_BOOK_CHECKING");

            entity.Property(e => e.ApproverId).HasColumnName("APPROVER_ID");
            entity.Property(e => e.BlockId).HasColumnName("BLOCK_ID");
            entity.Property(e => e.BookChkCode)
                .HasMaxLength(250)
                .HasColumnName("BOOK_CHK_CODE");
            entity.Property(e => e.ClientId).HasColumnName("CLIENT_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(250)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(250)
                .HasColumnName("LICENSE_PLATE");
            entity.Property(e => e.NextChkTime).HasColumnName("NEXT_CHK_TIME");
            entity.Property(e => e.Note)
                .HasMaxLength(250)
                .HasColumnName("NOTE");
            entity.Property(e => e.NumChk).HasColumnName("NUM_CHK");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TitleChk)
                .HasMaxLength(250)
                .HasColumnName("TITLE_CHK");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(250)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.VendorCode)
                .HasMaxLength(250)
                .HasColumnName("VENDOR_CODE");
        });

        modelBuilder.Entity<RmVayxeBookMaterialDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_VAYXE_BOOK_MATERIAL_DETAILS");

            entity.Property(e => e.Amount).HasColumnName("AMOUNT");
            entity.Property(e => e.BookChkId).HasColumnName("BOOK_CHK_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.MaterialId).HasColumnName("MATERIAL_ID");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Price).HasColumnName("PRICE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RmVayxeBookServiceDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_VAYXE_BOOK_SERVICE_DETAILS");

            entity.Property(e => e.BookChkId).HasColumnName("BOOK_CHK_ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ServiceId).HasColumnName("SERVICE_ID");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RmVayxeCatSevice>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_VAYXE_CAT_SEVICES");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IllustratorImg)
                .HasMaxLength(255)
                .HasColumnName("ILLUSTRATOR_IMG");
            entity.Property(e => e.Note)
                .HasMaxLength(1500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.ServiceGroupId)
                .HasMaxLength(50)
                .HasColumnName("SERVICE_GROUP_ID");
            entity.Property(e => e.ServiceName)
                .HasMaxLength(255)
                .HasColumnName("SERVICE_NAME");
            entity.Property(e => e.ServiceTypeId)
                .HasMaxLength(50)
                .HasColumnName("SERVICE_TYPE_ID");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RmVayxeMaterialGood>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_VAYXE_MATERIAL_GOODS");

            entity.Property(e => e.Accessory).HasColumnName("ACCESSORY");
            entity.Property(e => e.Barcode)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("BARCODE");
            entity.Property(e => e.CodeId)
                .HasMaxLength(100)
                .HasColumnName("CODE_ID");
            entity.Property(e => e.CreatedTime)
                .HasColumnType("datetime")
                .HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.GroupId)
                .HasMaxLength(50)
                .HasColumnName("GROUP_ID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image).HasColumnName("IMAGE");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(250)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TypeId)
                .HasMaxLength(50)
                .HasColumnName("TYPE_ID");
            entity.Property(e => e.UpdatedTime)
                .HasColumnType("datetime")
                .HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RmVayxeTableCostDetail>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_VAYXE_TABLE_COST_DETAILS");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TableId).HasColumnName("TABLE_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RmVayxeTableCostHeader>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_VAYXE_TABLE_COST_HEADER");

            entity.Property(e => e.AppoverId)
                .HasMaxLength(255)
                .HasColumnName("APPOVER_ID");
            entity.Property(e => e.BeginTimeApply).HasColumnName("BEGIN_TIME_APPLY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CreaterId).HasColumnName("CREATER_ID");
            entity.Property(e => e.EndTimeApply).HasColumnName("END_TIME_APPLY");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.TableCode)
                .HasMaxLength(255)
                .HasColumnName("TABLE_CODE");
            entity.Property(e => e.TableName)
                .HasMaxLength(255)
                .HasColumnName("TABLE_NAME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<RmVayxeVendor>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("RM_VAYXE_VENDOR");

            entity.Property(e => e.CreateBy).HasColumnName("CREATE_BY");
            entity.Property(e => e.CreateTime).HasColumnName("CREATE_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.GeoCode)
                .HasMaxLength(255)
                .HasColumnName("GEO_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDelete).HasColumnName("IS_DELETE");
            entity.Property(e => e.UpdateBy).HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
            entity.Property(e => e.VendorAddress).HasColumnName("VENDOR_ADDRESS");
            entity.Property(e => e.VendorCode)
                .HasMaxLength(250)
                .HasColumnName("VENDOR_CODE");
            entity.Property(e => e.VendorContact)
                .HasMaxLength(250)
                .HasColumnName("VENDOR_CONTACT");
            entity.Property(e => e.VendorDesc)
                .HasMaxLength(2000)
                .HasColumnName("VENDOR_DESC");
            entity.Property(e => e.VendorFb)
                .HasMaxLength(250)
                .HasColumnName("VENDOR_FB");
            entity.Property(e => e.VendorLogo)
                .HasMaxLength(250)
                .HasColumnName("VENDOR_LOGO");
            entity.Property(e => e.VendorName)
                .HasMaxLength(250)
                .HasColumnName("VENDOR_NAME");
            entity.Property(e => e.VendorPhone)
                .HasMaxLength(250)
                .HasColumnName("VENDOR_PHONE");
            entity.Property(e => e.VendorType).HasColumnName("VENDOR_TYPE");
            entity.Property(e => e.VendorWebsite)
                .HasMaxLength(250)
                .HasColumnName("VENDOR_WEBSITE");
        });

        modelBuilder.Entity<RoadInfo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ROAD_INFO");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Desc)
                .HasMaxLength(255)
                .HasColumnName("DESC");
            entity.Property(e => e.Distance)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("DISTANCE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.NodeList).HasColumnName("NODE_LIST");
            entity.Property(e => e.RoadCode)
                .HasMaxLength(255)
                .HasColumnName("ROAD_CODE");
            entity.Property(e => e.RoadName)
                .HasMaxLength(255)
                .HasColumnName("ROAD_NAME");
            entity.Property(e => e.RoadType)
                .HasMaxLength(255)
                .HasColumnName("ROAD_TYPE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<SalaryEmployeeMonth>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SALARY_E__3214EC27CB89047B");

            entity.ToTable("SALARY_EMPLOYEE_MONTH");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.At)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("AT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.D).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.DepartmentName)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_NAME");
            entity.Property(e => e.E).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.EmployeeId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EMPLOYEE_ID");
            entity.Property(e => e.F).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.G).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.H).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.I).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.J).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.K).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.L).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.M).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.N).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.O).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.P).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Q).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.R).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.S).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.SalaryLevel)
                .HasMaxLength(255)
                .HasColumnName("SALARY_LEVEL");
            entity.Property(e => e.SalaryRatio)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SALARY_RATIO");
            entity.Property(e => e.T).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.TotalDay)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TOTAL_DAY");
            entity.Property(e => e.U).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.V).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Vr)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("VR");
            entity.Property(e => e.X).HasColumnType("decimal(18, 2)");
            entity.Property(e => e.Y).HasColumnType("decimal(18, 2)");
        });

        modelBuilder.Entity<SalaryTableAllowance>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SALARY_T__3214EC2717D91982");

            entity.ToTable("SALARY_TABLE_ALLOWANCE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AllowanceCode)
                .HasMaxLength(255)
                .HasColumnName("ALLOWANCE_CODE");
            entity.Property(e => e.CodeTblSalary)
                .HasMaxLength(255)
                .HasColumnName("CODE_TBL_SALARY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(255)
                .HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value)
                .HasColumnType("decimal(14, 0)")
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<SalesOrdersBackup>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SALES_ORDERS_BACKUP");

            entity.Property(e => e.AreaId)
                .HasMaxLength(50)
                .HasColumnName("AREA_ID");
            entity.Property(e => e.BagMachine)
                .HasMaxLength(50)
                .HasColumnName("BAG_MACHINE");
            entity.Property(e => e.BagType)
                .HasMaxLength(50)
                .HasColumnName("BAG_TYPE");
            entity.Property(e => e.BccStatus)
                .HasMaxLength(50)
                .HasColumnName("BCC_STATUS");
            entity.Property(e => e.BlanketId)
                .HasMaxLength(50)
                .HasColumnName("BLANKET_ID");
            entity.Property(e => e.BlanketNumber)
                .HasMaxLength(50)
                .HasColumnName("BLANKET_NUMBER");
            entity.Property(e => e.BookDate)
                .HasMaxLength(50)
                .HasColumnName("BOOK_DATE");
            entity.Property(e => e.BookQuantity)
                .HasMaxLength(50)
                .HasColumnName("BOOK_QUANTITY");
            entity.Property(e => e.BranchId)
                .HasMaxLength(50)
                .HasColumnName("BRANCH_ID");
            entity.Property(e => e.BsdId)
                .HasMaxLength(50)
                .HasColumnName("BSD_ID");
            entity.Property(e => e.CancelDeliveryCode)
                .HasMaxLength(50)
                .HasColumnName("CANCEL_DELIVERY_CODE");
            entity.Property(e => e.CheckFlag)
                .HasMaxLength(50)
                .HasColumnName("CHECK_FLAG");
            entity.Property(e => e.CheckpointId)
                .HasMaxLength(50)
                .HasColumnName("CHECKPOINT_ID");
            entity.Property(e => e.ConversionDate)
                .HasMaxLength(50)
                .HasColumnName("CONVERSION_DATE");
            entity.Property(e => e.ConversionRate)
                .HasMaxLength(50)
                .HasColumnName("CONVERSION_RATE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreationDate)
                .HasMaxLength(50)
                .HasColumnName("CREATION_DATE");
            entity.Property(e => e.CurrencyCode)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY_CODE");
            entity.Property(e => e.CustomerId)
                .HasMaxLength(50)
                .HasColumnName("CUSTOMER_ID");
            entity.Property(e => e.DataSource)
                .HasMaxLength(50)
                .HasColumnName("DATA_SOURCE");
            entity.Property(e => e.DeliveryCode)
                .HasMaxLength(50)
                .HasColumnName("DELIVERY_CODE");
            entity.Property(e => e.DeliveryDate)
                .HasMaxLength(50)
                .HasColumnName("DELIVERY_DATE");
            entity.Property(e => e.Description)
                .HasMaxLength(200)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Discount)
                .HasMaxLength(50)
                .HasColumnName("DISCOUNT");
            entity.Property(e => e.DiscountAvailable)
                .HasMaxLength(50)
                .HasColumnName("DISCOUNT_AVAILABLE");
            entity.Property(e => e.DiscountOld)
                .HasMaxLength(50)
                .HasColumnName("DISCOUNT_OLD");
            entity.Property(e => e.DocNum)
                .HasMaxLength(50)
                .HasColumnName("DOC_NUM");
            entity.Property(e => e.DocSeries)
                .HasMaxLength(50)
                .HasColumnName("DOC_SERIES");
            entity.Property(e => e.DocTemplate)
                .HasMaxLength(50)
                .HasColumnName("DOC_TEMPLATE");
            entity.Property(e => e.DriverInfo)
                .HasMaxLength(50)
                .HasColumnName("DRIVER_INFO");
            entity.Property(e => e.DriverName)
                .HasMaxLength(50)
                .HasColumnName("DRIVER_NAME");
            entity.Property(e => e.ExCustomerId)
                .HasMaxLength(50)
                .HasColumnName("EX_CUSTOMER_ID");
            entity.Property(e => e.ExUnitPrice)
                .HasMaxLength(50)
                .HasColumnName("EX_UNIT_PRICE");
            entity.Property(e => e.FreightAmount)
                .HasMaxLength(50)
                .HasColumnName("FREIGHT_AMOUNT");
            entity.Property(e => e.InterorgHeaderId)
                .HasMaxLength(50)
                .HasColumnName("INTERORG_HEADER_ID");
            entity.Property(e => e.InventoryItemId)
                .HasMaxLength(50)
                .HasColumnName("INVENTORY_ITEM_ID");
            entity.Property(e => e.InvoiceFlag)
                .HasMaxLength(50)
                .HasColumnName("INVOICE_FLAG");
            entity.Property(e => e.InvoiceNum)
                .HasMaxLength(50)
                .HasColumnName("INVOICE_NUM");
            entity.Property(e => e.InvoiceStatus)
                .HasMaxLength(50)
                .HasColumnName("INVOICE_STATUS");
            entity.Property(e => e.InvoiceToOrgId)
                .HasMaxLength(50)
                .HasColumnName("INVOICE_TO_ORG_ID");
            entity.Property(e => e.IpFlag)
                .HasMaxLength(50)
                .HasColumnName("IP_FLAG");
            entity.Property(e => e.LastUpdateDate)
                .HasColumnType("datetime")
                .HasColumnName("LAST_UPDATE_DATE");
            entity.Property(e => e.LastUpdateLogin)
                .HasMaxLength(50)
                .HasColumnName("LAST_UPDATE_LOGIN");
            entity.Property(e => e.LastUpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("LAST_UPDATED_BY");
            entity.Property(e => e.LocationCode)
                .HasMaxLength(50)
                .HasColumnName("LOCATION_CODE");
            entity.Property(e => e.LotNumber)
                .HasMaxLength(50)
                .HasColumnName("LOT_NUMBER");
            entity.Property(e => e.MoocCode)
                .HasMaxLength(50)
                .HasColumnName("MOOC_CODE");
            entity.Property(e => e.Msgh)
                .HasMaxLength(50)
                .HasColumnName("MSGH");
            entity.Property(e => e.NonWeightDeliveryId)
                .HasMaxLength(50)
                .HasColumnName("NON_WEIGHT_DELIVERY_ID");
            entity.Property(e => e.OrderAdjustType)
                .HasMaxLength(50)
                .HasColumnName("ORDER_ADJUST_TYPE");
            entity.Property(e => e.OrderAmount)
                .HasMaxLength(50)
                .HasColumnName("ORDER_AMOUNT");
            entity.Property(e => e.OrderAmountOld)
                .HasMaxLength(50)
                .HasColumnName("ORDER_AMOUNT_OLD");
            entity.Property(e => e.OrderDate)
                .HasMaxLength(50)
                .HasColumnName("ORDER_DATE");
            entity.Property(e => e.OrderId)
                .HasMaxLength(50)
                .HasColumnName("ORDER_ID");
            entity.Property(e => e.OrderLog)
                .HasMaxLength(50)
                .HasColumnName("ORDER_LOG");
            entity.Property(e => e.OrderNumber)
                .HasMaxLength(50)
                .HasColumnName("ORDER_NUMBER");
            entity.Property(e => e.OrderQuantity)
                .HasMaxLength(50)
                .HasColumnName("ORDER_QUANTITY");
            entity.Property(e => e.OrderQuantityOld)
                .HasMaxLength(50)
                .HasColumnName("ORDER_QUANTITY_OLD");
            entity.Property(e => e.OrderShift)
                .HasMaxLength(50)
                .HasColumnName("ORDER_SHIFT");
            entity.Property(e => e.OrderType)
                .HasMaxLength(50)
                .HasColumnName("ORDER_TYPE");
            entity.Property(e => e.OrderedItem)
                .HasMaxLength(50)
                .HasColumnName("ORDERED_ITEM");
            entity.Property(e => e.PackType)
                .HasMaxLength(50)
                .HasColumnName("PACK_TYPE");
            entity.Property(e => e.ParentDeliveryCode)
                .HasMaxLength(50)
                .HasColumnName("PARENT_DELIVERY_CODE");
            entity.Property(e => e.PriceListId)
                .HasMaxLength(50)
                .HasColumnName("PRICE_LIST_ID");
            entity.Property(e => e.PrintDate)
                .HasMaxLength(50)
                .HasColumnName("PRINT_DATE");
            entity.Property(e => e.PrintStatus)
                .HasMaxLength(50)
                .HasColumnName("PRINT_STATUS");
            entity.Property(e => e.ProductionLine)
                .HasMaxLength(50)
                .HasColumnName("PRODUCTION_LINE");
            entity.Property(e => e.PromoFlag)
                .HasMaxLength(50)
                .HasColumnName("PROMO_FLAG");
            entity.Property(e => e.PromotionConfirm)
                .HasMaxLength(50)
                .HasColumnName("PROMOTION_CONFIRM");
            entity.Property(e => e.QuantityAvailable)
                .HasMaxLength(50)
                .HasColumnName("QUANTITY_AVAILABLE");
            entity.Property(e => e.ReceiveMethod)
                .HasMaxLength(50)
                .HasColumnName("RECEIVE_METHOD");
            entity.Property(e => e.Receiver)
                .HasMaxLength(50)
                .HasColumnName("RECEIVER");
            entity.Property(e => e.ReceiverId)
                .HasMaxLength(50)
                .HasColumnName("RECEIVER_ID");
            entity.Property(e => e.RemainingQuantity)
                .HasMaxLength(50)
                .HasColumnName("REMAINING_QUANTITY");
            entity.Property(e => e.ShipFromOrgId)
                .HasMaxLength(50)
                .HasColumnName("SHIP_FROM_ORG_ID");
            entity.Property(e => e.ShipToOrgId)
                .HasMaxLength(50)
                .HasColumnName("SHIP_TO_ORG_ID");
            entity.Property(e => e.ShippointId)
                .HasMaxLength(50)
                .HasColumnName("SHIPPOINT_ID");
            entity.Property(e => e.SoFlag)
                .HasMaxLength(50)
                .HasColumnName("SO_FLAG");
            entity.Property(e => e.SourceDocumentLineId)
                .HasMaxLength(50)
                .HasColumnName("SOURCE_DOCUMENT_LINE_ID");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.StatusDescription)
                .HasMaxLength(200)
                .HasColumnName("STATUS_DESCRIPTION");
            entity.Property(e => e.SyncFlag)
                .HasMaxLength(50)
                .HasColumnName("SYNC_FLAG");
            entity.Property(e => e.TaxAmount)
                .HasMaxLength(50)
                .HasColumnName("TAX_AMOUNT");
            entity.Property(e => e.TaxRate)
                .HasMaxLength(50)
                .HasColumnName("TAX_RATE");
            entity.Property(e => e.TnnmSo)
                .HasMaxLength(50)
                .HasColumnName("TNNM_SO");
            entity.Property(e => e.TransactionTypeId)
                .HasMaxLength(50)
                .HasColumnName("TRANSACTION_TYPE_ID");
            entity.Property(e => e.TransportMethodId)
                .HasMaxLength(50)
                .HasColumnName("TRANSPORT_METHOD_ID");
            entity.Property(e => e.UnitPrice)
                .HasMaxLength(50)
                .HasColumnName("UNIT_PRICE");
            entity.Property(e => e.UomCode)
                .HasMaxLength(50)
                .HasColumnName("UOM_CODE");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
            entity.Property(e => e.VehicleCode)
                .HasMaxLength(50)
                .HasColumnName("VEHICLE_CODE");
            entity.Property(e => e.VehicleWeightId)
                .HasMaxLength(50)
                .HasColumnName("VEHICLE_WEIGHT_ID");
        });

        modelBuilder.Entity<ServiceCat>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SERVICE_CAT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ServiceCatId)
                .ValueGeneratedOnAdd()
                .HasComment("Customer Id")
                .HasColumnName("SERVICE_CAT_ID");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.ServiceGroup)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_GROUP");
            entity.Property(e => e.ServiceName)
                .HasMaxLength(255)
                .HasColumnName("SERVICE_NAME");
            entity.Property(e => e.ServiceParent)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_PARENT");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Visibility).HasColumnName("VISIBILITY");
        });

        modelBuilder.Entity<ServiceCatAttribute>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SERVICE___3214EC27B8EFB10D");

            entity.ToTable("SERVICE_CAT_ATTRIBUTE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AttributeCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATTRIBUTE_CODE");
            entity.Property(e => e.AttributeName)
                .HasMaxLength(255)
                .HasColumnName("ATTRIBUTE_NAME");
            entity.Property(e => e.AttributeValue).HasColumnName("ATTRIBUTE_VALUE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FieldType)
                .HasMaxLength(255)
                .HasColumnName("FIELD_TYPE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ServiceCatCostCondition>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SERVICE___3214EC2763C4410A");

            entity.ToTable("SERVICE_CAT_COST_CONDITION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.HeaderCode)
                .HasMaxLength(255)
                .HasColumnName("HEADER_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjFromValue)
                .HasMaxLength(255)
                .HasColumnName("OBJ_FROM_VALUE");
            entity.Property(e => e.ObjToValue)
                .HasMaxLength(255)
                .HasColumnName("OBJ_TO_VALUE");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.Price)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE");
            entity.Property(e => e.Rate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("RATE");
            entity.Property(e => e.ServiceCatCode)
                .HasMaxLength(255)
                .HasColumnName("SERVICE_CAT_CODE");
            entity.Property(e => e.ServiceUnit)
                .HasMaxLength(100)
                .HasColumnName("SERVICE_UNIT");
            entity.Property(e => e.Unit)
                .HasMaxLength(100)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ServiceCatCostHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SERVICE___3214EC278929C386");

            entity.ToTable("SERVICE_CAT_COST_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EffectiveDate).HasColumnName("EFFECTIVE_DATE");
            entity.Property(e => e.ExpiryDate).HasColumnName("EXPIRY_DATE");
            entity.Property(e => e.HeaderCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("HEADER_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.ResponsibleUser)
                .HasMaxLength(255)
                .HasColumnName("RESPONSIBLE_USER");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ServiceCatGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SERVICE___3214EC2793ACD749");

            entity.ToTable("SERVICE_CAT_GROUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Level).HasColumnName("LEVEL");
            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .HasColumnName("NAME");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ServiceCatType>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SERVICE___3214EC27E304DE73");

            entity.ToTable("SERVICE_CAT_TYPE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Name)
                .HasMaxLength(500)
                .HasColumnName("NAME");
            entity.Property(e => e.ParentId).HasColumnName("PARENT_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ServiceRegist>(entity =>
        {
            entity.ToTable("SERVICE_REGIST");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LogAction).HasColumnName("LOG_ACTION");
            entity.Property(e => e.LogPay).HasColumnName("LOG_PAY");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(50)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(50)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.PaymentStatus)
                .HasMaxLength(50)
                .HasColumnName("PAYMENT_STATUS");
            entity.Property(e => e.ServiceCode)
                .HasMaxLength(50)
                .HasColumnName("SERVICE_CODE");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(50)
                .HasColumnName("SERVICE_TYPE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<SessionItemChkItem>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SESSION___3214EC2716744961");

            entity.ToTable("SESSION_ITEM_CHK_ITEM");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Item)
                .HasMaxLength(255)
                .HasColumnName("ITEM");
            entity.Property(e => e.ItemType)
                .HasMaxLength(255)
                .HasColumnName("ITEM_TYPE");
            entity.Property(e => e.Session)
                .HasMaxLength(255)
                .HasColumnName("SESSION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<SessionWork>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SESSION___3214EC2792324EAA");

            entity.ToTable("SESSION_WORK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Desc).HasColumnName("DESC");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Item)
                .HasMaxLength(255)
                .HasColumnName("ITEM");
            entity.Property(e => e.ItemType)
                .HasMaxLength(255)
                .HasColumnName("ITEM_TYPE");
            entity.Property(e => e.Session)
                .HasMaxLength(255)
                .HasColumnName("SESSION");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<SessionWorkObjectProcessing>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SESSION___3214EC275FC451D3");

            entity.ToTable("SESSION_WORK_OBJECT_PROCESSING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Beshare).HasColumnName("BESHARE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsLeader).HasColumnName("IS_LEADER");
            entity.Property(e => e.ObjEntry).HasColumnName("OBJ_ENTRY");
            entity.Property(e => e.ObjectInst)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_INST");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_INST_CODE");
            entity.Property(e => e.WorkSession)
                .HasMaxLength(255)
                .HasColumnName("WORK_SESSION");
        });

        modelBuilder.Entity<SessionWorkResult>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_ITE__3214EC2708DE195E");

            entity.ToTable("SESSION_WORK_RESULT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(1000)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.ApproveTime).HasColumnName("APPROVE_TIME");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.ChkListCode)
                .HasMaxLength(255)
                .HasColumnName("CHK_LIST_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.GoogleMap)
                .HasMaxLength(1000)
                .HasColumnName("GOOGLE_MAP");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemWorkList)
                .HasMaxLength(255)
                .HasColumnName("ITEM_WORK_LIST");
            entity.Property(e => e.ListSubItem).HasColumnName("LIST_SUB_ITEM");
            entity.Property(e => e.LogApprove).HasColumnName("LOG_APPROVE");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.NoteFromLeader).HasColumnName("NOTE_FROM_LEADER");
            entity.Property(e => e.ProgressFromLeader)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PROGRESS_FROM_LEADER");
            entity.Property(e => e.ProgressFromStaff)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PROGRESS_FROM_STAFF");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserAssessor)
                .HasMaxLength(255)
                .HasColumnName("USER_ASSESSOR");
            entity.Property(e => e.WorkSession)
                .HasMaxLength(255)
                .HasColumnName("WORK_SESSION");
        });

        modelBuilder.Entity<SetCompanyMenu>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SET_COMP__3214EC27997330BC");

            entity.ToTable("SET_COMPANY_MENU");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(255)
                .HasColumnName("ACTION");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MenuCaption)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MENU_CAPTION");
            entity.Property(e => e.MenuParent)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MENU_PARENT");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Pin)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("PIN");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<SetIcon2Object>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SET_ICON__3214EC073949C7BE");

            entity.ToTable("SET_ICON_2_OBJECT");

            entity.Property(e => e.ExpFilterSql)
                .HasMaxLength(255)
                .HasColumnName("EXP_FILTER_SQL");
            entity.Property(e => e.IconCode)
                .HasMaxLength(255)
                .HasColumnName("ICON_CODE");
            entity.Property(e => e.IconPath)
                .HasMaxLength(255)
                .HasColumnName("ICON_PATH");
            entity.Property(e => e.IconTitle)
                .HasMaxLength(255)
                .HasColumnName("ICON_TITLE");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
        });

        modelBuilder.Entity<SettingUserguide>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SETTING_USERGUIDE");

            entity.Property(e => e.ArticleId)
                .HasMaxLength(255)
                .HasColumnName("ARTICLE_ID");
            entity.Property(e => e.BookMark)
                .HasMaxLength(255)
                .HasColumnName("BOOK_MARK");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.HelpId)
                .HasMaxLength(255)
                .HasColumnName("HELP_ID");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<ShiftLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SHIFT_LO__3214EC27EC64EC1D");

            entity.ToTable("SHIFT_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BussinessLocation)
                .HasMaxLength(255)
                .HasColumnName("BUSSINESS_LOCATION");
            entity.Property(e => e.ChkinLocationGps)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CHKIN_LOCATION_GPS");
            entity.Property(e => e.ChkinLocationTxt).HasColumnName("CHKIN_LOCATION_TXT");
            entity.Property(e => e.ChkinPicRealtime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHKIN_PIC_REALTIME");
            entity.Property(e => e.ChkinTime).HasColumnName("CHKIN_TIME");
            entity.Property(e => e.ChkoutLocationGps)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CHKOUT_LOCATION_GPS");
            entity.Property(e => e.ChkoutLocationTxt)
                .HasMaxLength(255)
                .HasColumnName("CHKOUT_LOCATION_TXT");
            entity.Property(e => e.ChkoutPicRealtime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHKOUT_PIC_REALTIME");
            entity.Property(e => e.ChkoutTime).HasColumnName("CHKOUT_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("FLAG");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.Imei)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IMEI");
            entity.Property(e => e.Ip)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IP");
            entity.Property(e => e.IsBussiness).HasColumnName("IS_BUSSINESS");
            entity.Property(e => e.IsChkinRealTime).HasColumnName("IS_CHKIN_REAL_TIME");
            entity.Property(e => e.IsChkoutRealTime).HasColumnName("IS_CHKOUT_REAL_TIME");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkingShiftCode)
                .HasMaxLength(255)
                .HasColumnName("WORKING_SHIFT_CODE");
        });

        modelBuilder.Entity<ShiftLogCamera>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SHIFT_LO__3214EC27E62D1A68");

            entity.ToTable("SHIFT_LOG_CAMERA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ChkinLocationGps)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CHKIN_LOCATION_GPS");
            entity.Property(e => e.ChkinLocationTxt).HasColumnName("CHKIN_LOCATION_TXT");
            entity.Property(e => e.ChkinPicRealtime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHKIN_PIC_REALTIME");
            entity.Property(e => e.ChkinTime).HasColumnName("CHKIN_TIME");
            entity.Property(e => e.ChkoutLocationGps)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CHKOUT_LOCATION_GPS");
            entity.Property(e => e.ChkoutLocationTxt)
                .HasMaxLength(255)
                .HasColumnName("CHKOUT_LOCATION_TXT");
            entity.Property(e => e.ChkoutPicRealtime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHKOUT_PIC_REALTIME");
            entity.Property(e => e.ChkoutTime).HasColumnName("CHKOUT_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("FLAG");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.Imei)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IMEI");
            entity.Property(e => e.Ip)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IP");
            entity.Property(e => e.IsChkinRealTime).HasColumnName("IS_CHKIN_REAL_TIME");
            entity.Property(e => e.IsChkoutRealTime).HasColumnName("IS_CHKOUT_REAL_TIME");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkingShiftCode)
                .HasMaxLength(255)
                .HasColumnName("WORKING_SHIFT_CODE");
        });

        modelBuilder.Entity<ShiftLogCard>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SHIFT_LO__3214EC270FF4A291");

            entity.ToTable("SHIFT_LOG_CARD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ChkinLocationGps)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CHKIN_LOCATION_GPS");
            entity.Property(e => e.ChkinLocationTxt).HasColumnName("CHKIN_LOCATION_TXT");
            entity.Property(e => e.ChkinPicRealtime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHKIN_PIC_REALTIME");
            entity.Property(e => e.ChkinTime).HasColumnName("CHKIN_TIME");
            entity.Property(e => e.ChkoutLocationGps)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CHKOUT_LOCATION_GPS");
            entity.Property(e => e.ChkoutLocationTxt)
                .HasMaxLength(255)
                .HasColumnName("CHKOUT_LOCATION_TXT");
            entity.Property(e => e.ChkoutPicRealtime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHKOUT_PIC_REALTIME");
            entity.Property(e => e.ChkoutTime).HasColumnName("CHKOUT_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("FLAG");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.Imei)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IMEI");
            entity.Property(e => e.Ip)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IP");
            entity.Property(e => e.IsChkinRealTime).HasColumnName("IS_CHKIN_REAL_TIME");
            entity.Property(e => e.IsChkoutRealTime).HasColumnName("IS_CHKOUT_REAL_TIME");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkingShiftCode)
                .HasMaxLength(255)
                .HasColumnName("WORKING_SHIFT_CODE");
        });

        modelBuilder.Entity<StaffScheduleWork>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__STAFF_SC__3214EC2733AA9790");

            entity.ToTable("STAFF_SCHEDULE_WORK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DatetimeEvent).HasColumnName("DATETIME_EVENT");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EventTitle)
                .HasMaxLength(255)
                .HasColumnName("EVENT_TITLE");
            entity.Property(e => e.FlagDelete).HasColumnName("FLAG_DELETE");
            entity.Property(e => e.FormatSetting)
                .HasMaxLength(255)
                .HasColumnName("FORMAT_SETTING");
            entity.Property(e => e.FrameTime)
                .HasMaxLength(255)
                .HasColumnName("FRAME_TIME");
            entity.Property(e => e.Log).HasColumnName("LOG");
            entity.Property(e => e.MemberId)
                .HasMaxLength(50)
                .HasColumnName("MEMBER_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<StaffTimeKeeping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__STAFF_TI__3214EC27DDE1E4E4");

            entity.ToTable("STAFF_TIME_KEEPING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeletionToken)
                .HasMaxLength(50)
                .HasColumnName("DELETION_TOKEN");
            entity.Property(e => e.DepartmentCode)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT_CODE");
            entity.Property(e => e.EmployeeId)
                .HasMaxLength(50)
                .HasColumnName("EMPLOYEE_ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonMonth).HasColumnName("JSON_MONTH");
            entity.Property(e => e.Month)
                .HasMaxLength(255)
                .HasColumnName("MONTH");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.TotalDay)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TOTAL_DAY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<StatusGroup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__STATUS_G__3214EC2738ACDE87");

            entity.ToTable("STATUS_GROUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("GROUP_NAME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.StatusCode).HasColumnName("STATUS_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<StatusSetDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__STATUS_S__3214EC27A5575935");

            entity.ToTable("STATUS_SET_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.StatusCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS_CODE");
            entity.Property(e => e.StatusGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS_GROUP");
            entity.Property(e => e.StatusName)
                .HasMaxLength(255)
                .HasColumnName("STATUS_NAME");
            entity.Property(e => e.StatusType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<StatusSetHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__STATUS_S__3214EC2758583D41");

            entity.ToTable("STATUS_SET_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.GroupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP_CODE");
            entity.Property(e => e.GroupDesc)
                .HasMaxLength(255)
                .HasColumnName("GROUP_DESC");
            entity.Property(e => e.GroupName)
                .HasMaxLength(255)
                .HasColumnName("GROUP_NAME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<StockArrangePopEntry>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("STOCK_ARRANGE_POP_ENTRY");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.MapId).HasColumnName("MAP_ID");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.ProdCode)
                .HasMaxLength(255)
                .HasColumnName("PROD_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.UnitExp)
                .HasMaxLength(18)
                .HasColumnName("UNIT_EXP");
        });

        modelBuilder.Entity<StockArrangePutEntry>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("STOCK_ARRANGE_PUT_ENTRY");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.MapId).HasColumnName("MAP_ID");
            entity.Property(e => e.MarkWholeProduct).HasColumnName("MARK_WHOLE_PRODUCT");
            entity.Property(e => e.ProdCode)
                .HasMaxLength(255)
                .HasColumnName("PROD_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.UnitExp)
                .HasMaxLength(255)
                .HasColumnName("UNIT_EXP");
        });

        modelBuilder.Entity<StopContractDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__STOP_CON__3214EC27DAC23731");

            entity.ToTable("STOP_CONTRACT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionNum)
                .HasMaxLength(255)
                .HasColumnName("DECISION_NUM");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(255)
                .HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.FilePath)
                .HasMaxLength(500)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Reason)
                .HasMaxLength(500)
                .HasColumnName("REASON");
            entity.Property(e => e.SessionDate).HasColumnName("SESSION_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<StopContractHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__STOP_CON__3214EC276B59913B");

            entity.ToTable("STOP_CONTRACT_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApprovedBy)
                .HasMaxLength(255)
                .HasColumnName("APPROVED_BY");
            entity.Property(e => e.ApprovedTime).HasColumnName("APPROVED_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DecisionBy)
                .HasMaxLength(255)
                .HasColumnName("DECISION_BY");
            entity.Property(e => e.DecisionDate).HasColumnName("DECISION_DATE");
            entity.Property(e => e.DecisionNum)
                .HasMaxLength(255)
                .HasColumnName("DECISION_NUM");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonData).HasColumnName("JSON_DATA");
            entity.Property(e => e.Noted)
                .HasMaxLength(500)
                .HasColumnName("NOTED");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusLog).HasColumnName("STATUS_LOG");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCat)
                .HasMaxLength(255)
                .HasColumnName("WORKFLOW_CAT");
        });

        modelBuilder.Entity<SubProduct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SUB_PROD__3214EC279BEEC8AC");

            entity.ToTable("SUB_PRODUCT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AttributeCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ATTRIBUTE_CODE");
            entity.Property(e => e.AttributeName)
                .HasMaxLength(255)
                .HasColumnName("ATTRIBUTE_NAME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ForecastInStock)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("FORECAST_IN_STOCK");
            entity.Property(e => e.ForecastTime).HasColumnName("FORECAST_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMAGE");
            entity.Property(e => e.ImpType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMP_TYPE");
            entity.Property(e => e.InStock)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("IN_STOCK");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.PriceCostAirline)
                .HasComment("Giá đại lý đường bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_AIRLINE");
            entity.Property(e => e.PriceCostCatelogue)
                .HasComment("Giá đại lý catalogue")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_CATELOGUE");
            entity.Property(e => e.PriceCostSea)
                .HasComment("Giá đại lý đường biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_SEA");
            entity.Property(e => e.PricePerM)
                .HasComment("Giá /m...")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_PER_M");
            entity.Property(e => e.PricePerM2)
                .HasComment("Giá / m2")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_PER_M2");
            entity.Property(e => e.PriceRetailBuild)
                .HasComment("Giá bán lẻ có thi công")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD");
            entity.Property(e => e.PriceRetailBuildAirline)
                .HasComment("Giá bán lẻ có thi công bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailBuildSea)
                .HasComment("Giá bán lẻ có thi công kho,biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_SEA");
            entity.Property(e => e.PriceRetailNoBuild)
                .HasComment("Giá bán lẻ không thi công")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD");
            entity.Property(e => e.PriceRetailNoBuildAirline)
                .HasComment("Giá bán lẻ không thi công bay")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailNoBuildSea)
                .HasComment("Giá bán lẻ không thi công kho, biển")
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_SEA");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(500)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value).HasColumnName("VALUE");
        });

        modelBuilder.Entity<SubWorkflowInstance>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SUB_WORK__3214EC27F471939E");

            entity.ToTable("SUB_WORKFLOW_INSTANCE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActInstInitial)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACT_INST_INITIAL");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsMain).HasColumnName("IS_MAIN");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_INST_CODE");
        });

        modelBuilder.Entity<Supplier>(entity =>
        {
            entity.HasKey(e => e.SupId).HasName("PK__SUPPLIER__F7818086F6AD0905");

            entity.ToTable("SUPPLIER");

            entity.Property(e => e.SupId)
                .HasComment("Supplier Id")
                .HasColumnName("SUP_ID");
            entity.Property(e => e.AccountBank)
                .HasMaxLength(255)
                .HasColumnName("ACCOUNT_BANK");
            entity.Property(e => e.AccountBankList)
                .HasMaxLength(1000)
                .HasColumnName("ACCOUNT_BANK_LIST");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasComment("Address")
                .HasColumnName("ADDRESS");
            entity.Property(e => e.AddressBank)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS_BANK");
            entity.Property(e => e.Area)
                .HasMaxLength(255)
                .HasColumnName("AREA");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CusType)
                .HasMaxLength(255)
                .HasColumnName("CUS_TYPE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasComment("Note")
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Email)
                .HasMaxLength(100)
                .HasComment("Email")
                .HasColumnName("EMAIL");
            entity.Property(e => e.Fax)
                .HasMaxLength(100)
                .HasComment("Fax")
                .HasColumnName("FAX");
            entity.Property(e => e.FinanceInfo).HasColumnName("FINANCE_INFO");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.GoogleMap)
                .HasMaxLength(500)
                .HasColumnName("GOOGLE_MAP");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IconLevel)
                .HasMaxLength(255)
                .HasColumnName("ICON_LEVEL");
            entity.Property(e => e.Identification)
                .HasMaxLength(50)
                .HasColumnName("IDENTIFICATION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.ListUserView).HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.LotName)
                .HasMaxLength(50)
                .HasComment("Supplier Type")
                .HasColumnName("LOT_NAME");
            entity.Property(e => e.Mobile)
                .HasMaxLength(100)
                .HasComment("Mobile")
                .HasColumnName("MOBILE");
            entity.Property(e => e.Role)
                .HasMaxLength(255)
                .HasColumnName("ROLE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasComment("Status")
                .HasColumnName("STATUS");
            entity.Property(e => e.SupCode)
                .HasMaxLength(100)
                .HasComment("Supplier Code")
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.SupGroup)
                .HasMaxLength(50)
                .HasComment("Supplier Group")
                .HasColumnName("SUP_GROUP");
            entity.Property(e => e.SupName)
                .HasMaxLength(255)
                .HasComment("Supplier Name")
                .HasColumnName("SUP_NAME");
            entity.Property(e => e.TaxCode)
                .HasMaxLength(50)
                .HasComment("Tax Code")
                .HasColumnName("TAX_CODE");
            entity.Property(e => e.Telephone)
                .HasMaxLength(100)
                .HasComment("Telephone")
                .HasColumnName("TELEPHONE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasComment("UserId")
                .HasColumnName("USER_ID");
            entity.Property(e => e.Website)
                .HasMaxLength(100)
                .HasComment("Website")
                .HasColumnName("WEBSITE");
        });

        modelBuilder.Entity<SupplierAppointment>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SUPPLIER_APPOINTMENT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .HasColumnName("LOCATION");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.RepeatType)
                .HasMaxLength(255)
                .HasColumnName("REPEAT_TYPE");
            entity.Property(e => e.SupplierCode)
                .HasMaxLength(100)
                .HasColumnName("SUPPLIER_CODE");
            entity.Property(e => e.Tags)
                .HasMaxLength(50)
                .HasColumnName("TAGS");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<SupplierExtend>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SUPPLIER__3213E83FBFAD5718");

            entity.ToTable("SUPPLIER_EXTEND");

            entity.Property(e => e.Id).HasColumnName("id");
            entity.Property(e => e.CreatedTime).HasColumnName("created_time");
            entity.Property(e => e.ExtCode)
                .HasMaxLength(100)
                .HasColumnName("ext_code");
            entity.Property(e => e.ExtGroup)
                .HasMaxLength(255)
                .HasColumnName("ext_group");
            entity.Property(e => e.ExtValue)
                .HasMaxLength(500)
                .HasColumnName("ext_value");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.Isdeleted).HasColumnName("isdeleted");
            entity.Property(e => e.SupplierCode).HasColumnName("supplier_code");
            entity.Property(e => e.UpdatedTime).HasColumnName("updated_time");
        });

        modelBuilder.Entity<SupplierFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SUPPLIER__3214EC2706FF767A");

            entity.ToTable("SUPPLIER_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.FileCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.SupplierId).HasColumnName("SUPPLIER_ID");
        });

        modelBuilder.Entity<SwCompanyInfo>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("SW_COMPANY_INFO");

            entity.Property(e => e.Background)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND");
            entity.Property(e => e.CompanyName)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_NAME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Logo)
                .HasMaxLength(255)
                .HasColumnName("LOGO");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<SwCustomerReq>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__SW_CUSTO__3214EC2790D8559E");

            entity.ToTable("SW_CUSTOMER_REQ");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Background)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND");
            entity.Property(e => e.CompanyName)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_NAME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DatabaseServer)
                .HasMaxLength(255)
                .HasColumnName("DATABASE_SERVER");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Domain)
                .HasMaxLength(255)
                .HasColumnName("DOMAIN");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .HasColumnName("EMAIL");
            entity.Property(e => e.FileUrl)
                .HasMaxLength(500)
                .HasColumnName("FILE_URL");
            entity.Property(e => e.HostingServer)
                .HasMaxLength(255)
                .HasColumnName("HOSTING_SERVER");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Logo)
                .HasMaxLength(255)
                .HasColumnName("LOGO");
            entity.Property(e => e.MonthTried)
                .HasMaxLength(255)
                .HasColumnName("MONTH_TRIED");
            entity.Property(e => e.Noted)
                .HasMaxLength(255)
                .HasColumnName("NOTED");
            entity.Property(e => e.PartnerKey)
                .HasMaxLength(255)
                .HasColumnName("PARTNER_KEY");
            entity.Property(e => e.PurchaseOption)
                .HasMaxLength(255)
                .HasColumnName("PURCHASE_OPTION");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.RequestTitle)
                .HasMaxLength(500)
                .HasColumnName("REQUEST_TITLE");
            entity.Property(e => e.Slogan)
                .HasMaxLength(255)
                .HasColumnName("SLOGAN");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Tel)
                .HasMaxLength(255)
                .HasColumnName("TEL");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<SwModuleResource>(entity =>
        {
            entity.ToTable("SW_MODULE_RESOURCE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.Level).HasColumnName("LEVEL");
            entity.Property(e => e.ModuleCode)
                .HasMaxLength(255)
                .HasColumnName("MODULE_CODE");
            entity.Property(e => e.ModuleTitle)
                .HasMaxLength(255)
                .HasColumnName("MODULE_TITLE");
            entity.Property(e => e.ParentModule)
                .HasMaxLength(255)
                .HasColumnName("PARENT_MODULE");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<TablesToUpdate>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("Tables_to_Update");

            entity.Property(e => e.ColumnName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Column_name");
            entity.Property(e => e.RecordsToUpdate).HasColumnName("recordsToUpdate");
            entity.Property(e => e.TableName)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("Table_name");
        });

        modelBuilder.Entity<Team>(entity =>
        {
            entity.HasKey(e => e.TeamCode).HasName("PK__TEAM__6C619E6ECFE52018");

            entity.ToTable("TEAM");

            entity.Property(e => e.TeamCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TEAM_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Leader)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LEADER");
            entity.Property(e => e.Members)
                .HasMaxLength(4000)
                .HasColumnName("MEMBERS");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.TeamName)
                .HasMaxLength(255)
                .HasColumnName("TEAM_NAME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<TempKeyWordSearch>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TEMP_KEY__3214EC27D08F53C0");

            entity.ToTable("TEMP_KEY_WORD_SEARCH");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DATA_TYPE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DocumentId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DOCUMENT_ID");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KeySearch)
                .HasMaxLength(255)
                .HasColumnName("KEY_SEARCH");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(10)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value).HasColumnName("VALUE");
        });

        modelBuilder.Entity<TemplateKeySearchFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TEMPLATE__3214EC27B19EC3CB");

            entity.ToTable("TEMPLATE_KEY_SEARCH_FILE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value)
                .HasMaxLength(255)
                .HasColumnName("VALUE");
        });

        modelBuilder.Entity<TokenManager>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__APIGOOGL__3214EC270994BE24");

            entity.ToTable("TOKEN_MANAGER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountCode)
                .HasMaxLength(255)
                .HasColumnName("ACCOUNT_CODE");
            entity.Property(e => e.AccountName)
                .HasMaxLength(255)
                .HasColumnName("ACCOUNT_NAME");
            entity.Property(e => e.AccountNumber)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("ACCOUNT_NUMBER");
            entity.Property(e => e.AccountRole)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ACCOUNT_ROLE");
            entity.Property(e => e.ApiSecret)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("API_SECRET");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CredentialsJson).HasColumnName("CREDENTIALS_JSON");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .HasColumnName("EMAIL");
            entity.Property(e => e.HostClaimCode)
                .HasMaxLength(255)
                .HasColumnName("HOST_CLAIM_CODE");
            entity.Property(e => e.Key)
                .HasMaxLength(255)
                .HasColumnName("KEY");
            entity.Property(e => e.Limit).HasColumnName("LIMIT");
            entity.Property(e => e.RefreshToken).HasColumnName("REFRESH_TOKEN");
            entity.Property(e => e.SdkKey)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SDK_KEY");
            entity.Property(e => e.SdkSecret)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SDK_SECRET");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(50)
                .HasColumnName("SERVICE_TYPE");
            entity.Property(e => e.Token)
                .IsUnicode(false)
                .HasColumnName("TOKEN");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
        });

        modelBuilder.Entity<TokenManagerDeploy>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TOKEN_MANAGER_DEPLOY");

            entity.Property(e => e.AccountCode)
                .HasMaxLength(255)
                .HasColumnName("ACCOUNT_CODE");
            entity.Property(e => e.AccountName)
                .HasMaxLength(255)
                .HasColumnName("ACCOUNT_NAME");
            entity.Property(e => e.AccountNumber)
                .HasMaxLength(250)
                .IsUnicode(false)
                .HasColumnName("ACCOUNT_NUMBER");
            entity.Property(e => e.AccountRole)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ACCOUNT_ROLE");
            entity.Property(e => e.ApiSecret)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("API_SECRET");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CredentialsJson)
                .HasMaxLength(1000)
                .HasColumnName("CREDENTIALS_JSON");
            entity.Property(e => e.Email)
                .HasMaxLength(255)
                .HasColumnName("EMAIL");
            entity.Property(e => e.HostClaimCode)
                .HasMaxLength(255)
                .HasColumnName("HOST_CLAIM_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Key)
                .HasMaxLength(255)
                .HasColumnName("KEY");
            entity.Property(e => e.Limit).HasColumnName("LIMIT");
            entity.Property(e => e.RefreshToken)
                .HasMaxLength(1000)
                .HasColumnName("REFRESH_TOKEN");
            entity.Property(e => e.ReqCode)
                .HasMaxLength(255)
                .HasColumnName("REQ_CODE");
            entity.Property(e => e.SdkKey)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SDK_KEY");
            entity.Property(e => e.SdkSecret)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SDK_SECRET");
            entity.Property(e => e.ServiceType)
                .HasMaxLength(50)
                .HasColumnName("SERVICE_TYPE");
            entity.Property(e => e.Token)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("TOKEN");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
        });

        modelBuilder.Entity<TopcvDataApply>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("TOPCV_DATA_APPLY");

            entity.Property(e => e.ApplyId)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("APPLY_ID");
            entity.Property(e => e.CandidateName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CANDIDATE_NAME");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Infomation)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("INFOMATION");
            entity.Property(e => e.Insights)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("INSIGHTS");
            entity.Property(e => e.IsDownload).HasColumnName("IS_DOWNLOAD");
            entity.Property(e => e.ServeFile)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SERVE_FILE");
            entity.Property(e => e.TopcvUrl)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TOPCV_URL");
            entity.Property(e => e.TypeCv)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE_CV");
        });

        modelBuilder.Entity<TrainingCertificatedPass>(entity =>
        {
            entity.ToTable("TRAINING_CERTIFICATED_PASS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Certificate)
                .HasMaxLength(100)
                .HasComment("Chứng chỉ")
                .HasColumnName("CERTIFICATE");
            entity.Property(e => e.Class)
                .HasMaxLength(50)
                .HasColumnName("CLASS");
            entity.Property(e => e.From)
                .HasMaxLength(20)
                .HasColumnName("FROM");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProfileCode)
                .HasMaxLength(50)
                .HasColumnName("PROFILE_CODE");
            entity.Property(e => e.SchoolName)
                .HasMaxLength(50)
                .HasColumnName("SCHOOL_NAME");
            entity.Property(e => e.To)
                .HasMaxLength(20)
                .HasColumnName("TO");
        });

        modelBuilder.Entity<TransDeliveryNoteDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TRANS_DE__3214EC27DD12A96D");

            entity.ToTable("TRANS_DELIVERY_NOTE_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Bags)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("BAGS");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeliveryOrderNo)
                .HasMaxLength(255)
                .HasColumnName("DELIVERY_ORDER_NO");
            entity.Property(e => e.Description)
                .HasMaxLength(255)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KindOfGoods)
                .HasMaxLength(255)
                .HasColumnName("KIND_OF_GOODS");
            entity.Property(e => e.LotNo)
                .HasMaxLength(255)
                .HasColumnName("LOT_NO");
            entity.Property(e => e.Remark)
                .HasMaxLength(255)
                .HasColumnName("REMARK");
            entity.Property(e => e.Ton)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("TON");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<TransDeliveryNoteHeader>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TRANS_DE__3214EC27283937FE");

            entity.ToTable("TRANS_DELIVERY_NOTE_HEADER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CarrierName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CARRIER_NAME");
            entity.Property(e => e.CarrierSign)
                .HasMaxLength(255)
                .HasColumnName("CARRIER_SIGN");
            entity.Property(e => e.Consignee)
                .HasMaxLength(255)
                .HasColumnName("CONSIGNEE");
            entity.Property(e => e.ConsigneeSign)
                .HasMaxLength(255)
                .HasColumnName("CONSIGNEE_SIGN");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Date).HasColumnName("DATE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DnNo)
                .HasMaxLength(255)
                .HasColumnName("DN_NO");
            entity.Property(e => e.EnterCardNo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ENTER_CARD_NO");
            entity.Property(e => e.Hour).HasColumnName("HOUR");
            entity.Property(e => e.IdNo)
                .HasMaxLength(255)
                .HasColumnName("ID_NO");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LnNo)
                .HasMaxLength(255)
                .HasColumnName("LN_NO");
            entity.Property(e => e.LoadingPlace)
                .HasMaxLength(255)
                .HasColumnName("LOADING_PLACE");
            entity.Property(e => e.Means)
                .HasMaxLength(255)
                .HasColumnName("MEANS");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.PreparedBySign)
                .HasMaxLength(255)
                .HasColumnName("PREPARED_BY_SIGN");
            entity.Property(e => e.Reason)
                .HasMaxLength(255)
                .HasColumnName("REASON");
            entity.Property(e => e.SecuritySign)
                .HasMaxLength(255)
                .HasColumnName("SECURITY_SIGN");
            entity.Property(e => e.TimeIn).HasColumnName("TIME_IN");
            entity.Property(e => e.TimeOut).HasColumnName("TIME_OUT");
            entity.Property(e => e.UnloadingPlace)
                .HasMaxLength(255)
                .HasColumnName("UNLOADING_PLACE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<Transaction2>(entity =>
        {
            entity.ToTable("TRANSACTION2");

            entity.HasIndex(e => e.IsDeleted, "IX_TRANSACTION2_IS_DELETED");

            entity.HasIndex(e => e.TransactionDate, "IX_TRANSACTION2_TRANSACTION_DATE");

            entity.HasIndex(e => e.UserId, "IX_TRANSACTION2_USER_ID");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Location)
                .HasMaxLength(50)
                .HasColumnName("LOCATION");
            entity.Property(e => e.Note)
                .HasMaxLength(50)
                .HasColumnName("NOTE");
            entity.Property(e => e.Price)
                .HasMaxLength(50)
                .HasColumnName("PRICE");
            entity.Property(e => e.TransactionCode)
                .HasMaxLength(50)
                .HasColumnName("TRANSACTION_CODE");
            entity.Property(e => e.TransactionDate)
                .HasMaxLength(50)
                .HasColumnName("TRANSACTION_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<Transition>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__TRANSITI__3214EC2771662C7B");

            entity.ToTable("TRANSITION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.TrsAttrGraph).HasColumnName("TRS_ATTR_GRAPH");
            entity.Property(e => e.TrsCode)
                .HasMaxLength(255)
                .HasColumnName("TRS_CODE");
            entity.Property(e => e.TrsNoted)
                .HasMaxLength(255)
                .HasColumnName("TRS_NOTED");
            entity.Property(e => e.TrsParent)
                .HasMaxLength(255)
                .HasColumnName("TRS_PARENT");
            entity.Property(e => e.TrsTitle)
                .HasMaxLength(255)
                .HasColumnName("TRS_TITLE");
            entity.Property(e => e.TrsType)
                .HasMaxLength(255)
                .HasColumnName("TRS_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<UrencoRoute>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("URENCO_ROUTE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Images)
                .HasMaxLength(255)
                .HasColumnName("IMAGES");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Manager).HasColumnName("MANAGER");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.NumLength).HasColumnName("NUM_LENGTH");
            entity.Property(e => e.NumLine).HasColumnName("NUM_LINE");
            entity.Property(e => e.QrCode)
                .HasMaxLength(255)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.RouteCode)
                .HasMaxLength(255)
                .HasColumnName("ROUTE_CODE");
            entity.Property(e => e.RouteDataGps).HasColumnName("ROUTE_DATA_GPS");
            entity.Property(e => e.RouteLevel).HasColumnName("ROUTE_LEVEL");
            entity.Property(e => e.RouteName)
                .HasMaxLength(255)
                .HasColumnName("ROUTE_NAME");
            entity.Property(e => e.RoutePriority).HasColumnName("ROUTE_PRIORITY");
            entity.Property(e => e.RouteType).HasColumnName("ROUTE_TYPE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TimeActive)
                .HasMaxLength(255)
                .HasColumnName("TIME_ACTIVE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<UserAccessDataKeyword>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__USER_ACC__3214EC27A568AAE3");

            entity.ToTable("USER_ACCESS_DATA_KEYWORD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.KeyWordList).HasColumnName("KEY_WORD_LIST");
            entity.Property(e => e.User)
                .HasMaxLength(255)
                .HasColumnName("USER");
        });

        modelBuilder.Entity<UserDeclareBusyOrFree>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__USER_DEC__3214EC2788935EA0");

            entity.ToTable("USER_DECLARE_BUSY_OR_FREE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsFree)
                .HasMaxLength(100)
                .HasColumnName("IS_FREE");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<UserDoExerciseResult>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("USER_DO_EXERCISE_RESULT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.QuizCode)
                .HasMaxLength(255)
                .HasColumnName("QUIZ_CODE");
            entity.Property(e => e.Result).HasColumnName("RESULT");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.TypeTraining)
                .HasMaxLength(255)
                .HasColumnName("TYPE_TRAINING");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserChoose)
                .HasMaxLength(255)
                .HasColumnName("USER_CHOOSE");
        });

        modelBuilder.Entity<UserExaminationResultDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__USER_EXE__3214EC278CB97067");

            entity.ToTable("USER_EXAMINATION_RESULT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Answer)
                .HasMaxLength(255)
                .HasColumnName("ANSWER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Guide)
                .HasMaxLength(255)
                .HasColumnName("GUIDE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsPass).HasColumnName("IS_PASS");
            entity.Property(e => e.QuestionCode)
                .HasMaxLength(255)
                .HasColumnName("QUESTION_CODE");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<UserExaminationResultSession>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__USER_EXE__3214EC279A0C77C9");

            entity.ToTable("USER_EXAMINATION_RESULT_SESSION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Result)
                .HasMaxLength(255)
                .HasColumnName("RESULT");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<UserExerciseResultDetail>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__USER_EXE__3214EC27A1D93EE9");

            entity.ToTable("USER_EXERCISE_RESULT_DETAIL");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Answer)
                .HasMaxLength(255)
                .HasColumnName("ANSWER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Guide)
                .HasMaxLength(255)
                .HasColumnName("GUIDE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsPass).HasColumnName("IS_PASS");
            entity.Property(e => e.QuestionCode)
                .HasMaxLength(255)
                .HasColumnName("QUESTION_CODE");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<UserExerciseResultSession>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__USER_EXE__3214EC27EC76328C");

            entity.ToTable("USER_EXERCISE_RESULT_SESSION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Result)
                .HasMaxLength(255)
                .HasColumnName("RESULT");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<UserLearnSubject>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("USER_LEARN_SUBJECT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.LectureCode)
                .HasMaxLength(255)
                .HasColumnName("LECTURE_CODE");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.StopTime).HasColumnName("STOP_TIME");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<UserTrackingGp>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__USER_TRA__3214EC27E831BDC9");

            entity.ToTable("USER_TRACKING_GPS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.DataGps)
                .IsUnicode(false)
                .HasColumnName("DATA_GPS");
            entity.Property(e => e.TrackingDate).HasColumnName("TRACKING_DATE");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<UserWishListSubject>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("USER_WISH_LIST_SUBJECT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.SubjectList).HasColumnName("SUBJECT_LIST");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<UsrKeyWordSetup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__USR_KEY___3214EC275C4ACB7B");

            entity.ToTable("USR_KEY_WORD_SETUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.KeyWord)
                .HasMaxLength(255)
                .HasColumnName("KEY_WORD");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(100)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<VActionCard>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_ACTION_CARD");

            entity.Property(e => e.CardCode)
                .HasMaxLength(100)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CardName)
                .HasMaxLength(255)
                .HasColumnName("CARD_NAME");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(256)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<VAllObject>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_ALL_OBJECT");

            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .HasColumnName("CODE");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Name)
                .HasMaxLength(1004)
                .HasColumnName("NAME");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
        });

        modelBuilder.Entity<VAllTable>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_ALL_TABLE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.TableName)
                .HasMaxLength(128)
                .HasColumnName("TABLE_NAME");
        });

        modelBuilder.Entity<VAmchartAsset>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_ASSET");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .HasColumnName("STATUS");
            entity.Property(e => e.StatusCount).HasColumnName("STATUS_COUNT");
        });

        modelBuilder.Entity<VAmchartBuy>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_BUY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.StatusCount).HasColumnName("STATUS_COUNT");
        });

        modelBuilder.Entity<VAmchartCardWork>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_CARD_WORK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusCount).HasColumnName("STATUS_COUNT");
        });

        modelBuilder.Entity<VAmchartCountBuy>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_COUNT_BUY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Income).HasColumnName("INCOME");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("TOTAL");
        });

        modelBuilder.Entity<VAmchartCountCustomer>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_COUNT_CUSTOMER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Income).HasColumnName("INCOME");
            entity.Property(e => e.Month).HasColumnName("MONTH");
        });

        modelBuilder.Entity<VAmchartCountEmployee>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_COUNT_EMPLOYEE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Income).HasColumnName("INCOME");
            entity.Property(e => e.Month).HasColumnName("MONTH");
        });

        modelBuilder.Entity<VAmchartCountProject>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_COUNT_PROJECT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Income).HasColumnName("INCOME");
            entity.Property(e => e.Month).HasColumnName("MONTH");
        });

        modelBuilder.Entity<VAmchartCountSale>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_COUNT_SALE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Income).HasColumnName("INCOME");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("TOTAL");
        });

        modelBuilder.Entity<VAmchartCountSupplier>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_COUNT_SUPPLIER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Income).HasColumnName("INCOME");
            entity.Property(e => e.Month).HasColumnName("MONTH");
        });

        modelBuilder.Entity<VAmchartCrawlingLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_CRAWLING_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstDay).HasColumnName("LST_DAY");
            entity.Property(e => e.SumFile).HasColumnName("SUM_FILE");
            entity.Property(e => e.SumPasscap).HasColumnName("SUM_PASSCAP");
            entity.Property(e => e.SumTimeScan).HasColumnName("SUM_TIME_SCAN");
            entity.Property(e => e.SumUrl).HasColumnName("SUM_URL");
        });

        modelBuilder.Entity<VAmchartCustomer>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_CUSTOMER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .HasColumnName("STATUS");
            entity.Property(e => e.StatusCount).HasColumnName("STATUS_COUNT");
        });

        modelBuilder.Entity<VAmchartDoExercise>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_DO_EXERCISE");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.MonthData).HasColumnName("MONTH_DATA");
            entity.Property(e => e.Result).HasColumnName("RESULT");
            entity.Property(e => e.TypeCount).HasColumnName("TYPE_COUNT");
            entity.Property(e => e.TypeTraining)
                .HasMaxLength(255)
                .HasColumnName("TYPE_TRAINING");
        });

        modelBuilder.Entity<VAmchartLearnSubject>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_LEARN_SUBJECT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.MonthData).HasColumnName("MONTH_DATA");
            entity.Property(e => e.UserCount).HasColumnName("USER_COUNT");
        });

        modelBuilder.Entity<VAmchartPieBuy>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_PIE_BUY");

            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .HasColumnName("COUNTRY");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Litres).HasColumnName("LITRES");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<VAmchartPieCustomer>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_PIE_CUSTOMER");

            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .HasColumnName("COUNTRY");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Litres).HasColumnName("LITRES");
            entity.Property(e => e.Status)
                .HasMaxLength(100)
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<VAmchartPieProject>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_PIE_PROJECT");

            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .HasColumnName("COUNTRY");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Litres).HasColumnName("LITRES");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<VAmchartPieSale>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_PIE_SALE");

            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .HasColumnName("COUNTRY");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Litres).HasColumnName("LITRES");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<VAmchartPieSupplier>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_PIE_SUPPLIER");

            entity.Property(e => e.Country)
                .HasMaxLength(255)
                .HasColumnName("COUNTRY");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Litres).HasColumnName("LITRES");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
        });

        modelBuilder.Entity<VAmchartProject>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_PROJECT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.StatusCount).HasColumnName("STATUS_COUNT");
        });

        modelBuilder.Entity<VAmchartSale>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_SALE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.StatusCount).HasColumnName("STATUS_COUNT");
        });

        modelBuilder.Entity<VAmchartSupplier>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_SUPPLIER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.StatusCount).HasColumnName("STATUS_COUNT");
        });

        modelBuilder.Entity<VAmchartWorkflow>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_AMCHART_WORKFLOW");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.LstMonth).HasColumnName("LST_MONTH");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusCount).HasColumnName("STATUS_COUNT");
        });

        modelBuilder.Entity<VAssetStatus>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_ASSET_STATUS");

            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.Type)
                .HasMaxLength(20)
                .HasColumnName("TYPE");
            entity.Property(e => e.Year).HasColumnName("YEAR");
        });

        modelBuilder.Entity<VCardProcess>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_CARD_PROCESS");

            entity.Property(e => e.BoardCode)
                .HasMaxLength(100)
                .HasColumnName("BOARD_CODE");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.ObjId)
                .HasMaxLength(255)
                .HasColumnName("OBJ_ID");
            entity.Property(e => e.Progress)
                .HasColumnType("decimal(14, 0)")
                .HasColumnName("PROGRESS");
            entity.Property(e => e.WeightNum)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT_NUM");
            entity.Property(e => e.Year).HasColumnName("YEAR");
        });

        modelBuilder.Entity<VCommonSetting>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_COMMON_SETTING");

            entity.Property(e => e.AssetCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CodeSet)
                .HasMaxLength(255)
                .HasColumnName("CODE_SET");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.GroupNote)
                .HasMaxLength(255)
                .HasColumnName("GROUP_NOTE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Logo)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOGO");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.SettingId)
                .ValueGeneratedOnAdd()
                .HasColumnName("SETTING_ID");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ValueSet)
                .HasMaxLength(255)
                .HasColumnName("VALUE_SET");
        });

        modelBuilder.Entity<VHighchartFund>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_HIGHCHART_FUND");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.Name)
                .HasMaxLength(3)
                .IsUnicode(false)
                .HasColumnName("NAME");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(38, 0)")
                .HasColumnName("TOTAL");
        });

        modelBuilder.Entity<VHighchartProd>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_HIGHCHART_PROD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.Name)
                .HasMaxLength(4)
                .HasColumnName("NAME");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("TOTAL");
        });

        modelBuilder.Entity<VHisExpProduct>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_HIS_EXP_PRODUCT");

            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CurrencyName)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY_NAME");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.CusName)
                .HasMaxLength(255)
                .HasColumnName("CUS_NAME");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PoCusCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_CUS_CODE");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.SupCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.SupName)
                .HasMaxLength(255)
                .HasColumnName("SUP_NAME");
            entity.Property(e => e.TicketExpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_EXP_CODE");
            entity.Property(e => e.TicketImpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_IMP_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitName)
                .HasMaxLength(255)
                .HasColumnName("UNIT_NAME");
            entity.Property(e => e.UnitPrice)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("UNIT_PRICE");
        });

        modelBuilder.Entity<VHisImpProduct>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_HIS_IMP_PRODUCT");

            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.CurrencyName)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY_NAME");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.CusName)
                .HasMaxLength(255)
                .HasColumnName("CUS_NAME");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PoCusCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_CUS_CODE");
            entity.Property(e => e.PoSupCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_SUP_CODE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.QuantityExp)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY_EXP");
            entity.Property(e => e.QuantityImp)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY_IMP");
            entity.Property(e => e.SupCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.SupName)
                .HasMaxLength(255)
                .HasColumnName("SUP_NAME");
            entity.Property(e => e.SupPrice)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("SUP_PRICE");
            entity.Property(e => e.TicketExpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_EXP_CODE");
            entity.Property(e => e.TicketImpCode)
                .HasMaxLength(255)
                .HasColumnName("TICKET_IMP_CODE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitName)
                .HasMaxLength(255)
                .HasColumnName("UNIT_NAME");
        });

        modelBuilder.Entity<VHisProduct>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_HIS_PRODUCT");

            entity.Property(e => e.Category)
                .HasMaxLength(30)
                .HasColumnName("CATEGORY");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("CATEGORY_NAME");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CusCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.CusName)
                .HasMaxLength(255)
                .HasColumnName("CUS_NAME");
            entity.Property(e => e.HeaderCode)
                .HasMaxLength(255)
                .HasColumnName("HEADER_CODE");
            entity.Property(e => e.HeaderName)
                .HasMaxLength(255)
                .HasColumnName("HEADER_NAME");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PoCode)
                .HasMaxLength(255)
                .HasColumnName("PO_CODE");
            entity.Property(e => e.PoName)
                .HasMaxLength(1000)
                .HasColumnName("PO_NAME");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(30)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.QuantityNeedImpExp).HasColumnName("QUANTITY_NEED_IMP_EXP");
            entity.Property(e => e.SupCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.SupName)
                .HasMaxLength(255)
                .HasColumnName("SUP_NAME");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(29, 0)")
                .HasColumnName("TOTAL");
            entity.Property(e => e.Type)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitName)
                .HasMaxLength(255)
                .HasColumnName("UNIT_NAME");
        });

        modelBuilder.Entity<VHrContract>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_HR_CONTRACT");

            entity.Property(e => e.EmployeeCode).HasColumnName("EMPLOYEE_CODE");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
        });

        modelBuilder.Entity<VHrEmployee>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_HR_EMPLOYEE");

            entity.Property(e => e.Accountholder)
                .HasMaxLength(50)
                .HasColumnName("accountholder");
            entity.Property(e => e.Accountnumber)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("accountnumber");
            entity.Property(e => e.Accountopenplace)
                .HasMaxLength(100)
                .HasColumnName("accountopenplace");
            entity.Property(e => e.Bank)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("bank");
            entity.Property(e => e.Birthday).HasColumnName("birthday");
            entity.Property(e => e.Birthofplace)
                .HasMaxLength(200)
                .HasColumnName("birthofplace");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(255)
                .HasColumnName("company_Code");
            entity.Property(e => e.Computerskill)
                .HasMaxLength(250)
                .HasColumnName("computerskill");
            entity.Property(e => e.CreateBy)
                .HasMaxLength(50)
                .HasColumnName("create_by");
            entity.Property(e => e.Createtime)
                .HasColumnType("datetime")
                .HasColumnName("createtime");
            entity.Property(e => e.Disciplines)
                .HasMaxLength(50)
                .HasColumnName("disciplines");
            entity.Property(e => e.Educationallevel)
                .HasMaxLength(50)
                .HasColumnName("educationallevel");
            entity.Property(e => e.Emailpassword)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("emailpassword");
            entity.Property(e => e.Emailuser)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("emailuser");
            entity.Property(e => e.EmployeeCode)
                .HasMaxLength(25)
                .HasColumnName("employee_code");
            entity.Property(e => e.Employeegroup)
                .HasMaxLength(50)
                .HasColumnName("employeegroup");
            entity.Property(e => e.Employeekind)
                .HasMaxLength(50)
                .HasColumnName("employeekind");
            entity.Property(e => e.Employeetype)
                .HasMaxLength(50)
                .HasColumnName("employeetype");
            entity.Property(e => e.Factiondate)
                .HasColumnType("datetime")
                .HasColumnName("factiondate");
            entity.Property(e => e.Flag).HasColumnName("flag");
            entity.Property(e => e.Fullname)
                .HasMaxLength(50)
                .HasColumnName("fullname");
            entity.Property(e => e.Gender).HasColumnName("gender");
            entity.Property(e => e.Health)
                .HasMaxLength(50)
                .HasColumnName("health");
            entity.Property(e => e.Id).ValueGeneratedOnAdd();
            entity.Property(e => e.IdDriver).HasColumnName("id_driver");
            entity.Property(e => e.Identification)
                .HasMaxLength(100)
                .HasColumnName("identification");
            entity.Property(e => e.Identitycard)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("identitycard");
            entity.Property(e => e.Identitycarddate).HasColumnName("identitycarddate");
            entity.Property(e => e.Identitycardplace)
                .HasMaxLength(100)
                .HasColumnName("identitycardplace");
            entity.Property(e => e.InsuranceBookNumber)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("insurance_book_number");
            entity.Property(e => e.Language)
                .HasMaxLength(10)
                .HasColumnName("language");
            entity.Property(e => e.Languagelevel)
                .HasMaxLength(50)
                .HasColumnName("languagelevel");
            entity.Property(e => e.LogDepartment).HasColumnName("log_Department");
            entity.Property(e => e.LogEndContract).HasColumnName("log_End_Contract");
            entity.Property(e => e.LogMovement).HasColumnName("log_Movement");
            entity.Property(e => e.LogPayRange).HasColumnName("log_Pay_Range");
            entity.Property(e => e.LogPayScale).HasColumnName("log_Pay_Scale");
            entity.Property(e => e.LogPosition).HasColumnName("log_Position");
            entity.Property(e => e.LogStatus).HasColumnName("log_Status");
            entity.Property(e => e.Maritalstatus).HasColumnName("maritalstatus");
            entity.Property(e => e.Nation)
                .HasMaxLength(50)
                .HasColumnName("nation");
            entity.Property(e => e.Nationlaty)
                .HasMaxLength(100)
                .HasColumnName("nationlaty");
            entity.Property(e => e.Nickname)
                .HasMaxLength(50)
                .HasColumnName("nickname");
            entity.Property(e => e.PayCareer)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_career");
            entity.Property(e => e.PayCertificate)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_certificate");
            entity.Property(e => e.PayCoef)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_coef");
            entity.Property(e => e.PayMajor)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_major");
            entity.Property(e => e.PayRange)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_range");
            entity.Property(e => e.PayScale)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_scale");
            entity.Property(e => e.PayTitle)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("pay_title");
            entity.Property(e => e.Permanentresidence)
                .HasMaxLength(200)
                .HasColumnName("permanentresidence");
            entity.Property(e => e.Phone)
                .HasMaxLength(50)
                .HasColumnName("phone");
            entity.Property(e => e.Picture)
                .HasMaxLength(255)
                .HasColumnName("picture");
            entity.Property(e => e.Position)
                .HasMaxLength(255)
                .HasColumnName("position");
            entity.Property(e => e.Religion)
                .HasMaxLength(50)
                .HasColumnName("religion");
            entity.Property(e => e.Salary)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("salary");
            entity.Property(e => e.SalaryBookNumber)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("salary_book_number");
            entity.Property(e => e.Salaryfactor).HasColumnName("salaryfactor");
            entity.Property(e => e.Salarygroup)
                .HasMaxLength(12)
                .IsUnicode(false)
                .HasColumnName("salarygroup");
            entity.Property(e => e.Salarytype)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("salarytype");
            entity.Property(e => e.ShiftList)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_LIST");
            entity.Property(e => e.Socialinsurance)
                .HasMaxLength(50)
                .HasColumnName("socialinsurance");
            entity.Property(e => e.Socialinsurancedate).HasColumnName("socialinsurancedate");
            entity.Property(e => e.Socialinsuranceplace)
                .HasMaxLength(20)
                .HasColumnName("socialinsuranceplace");
            entity.Property(e => e.Specialized)
                .HasMaxLength(50)
                .HasColumnName("specialized");
            entity.Property(e => e.Status).HasColumnName("status");
            entity.Property(e => e.Taxcode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("taxcode");
            entity.Property(e => e.Trainingschool)
                .HasMaxLength(50)
                .HasColumnName("trainingschool");
            entity.Property(e => e.Trainingtime)
                .HasMaxLength(200)
                .HasColumnName("trainingtime");
            entity.Property(e => e.Trainingtype)
                .HasMaxLength(50)
                .HasColumnName("trainingtype");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("unit");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("updated_by");
            entity.Property(e => e.Updatetime)
                .HasColumnType("datetime")
                .HasColumnName("updatetime");
            entity.Property(e => e.Wage)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("wage");
            entity.Property(e => e.WorkFrom).HasColumnName("work_from");
            entity.Property(e => e.WorkTo).HasColumnName("work_to");
            entity.Property(e => e.WorkType)
                .HasMaxLength(50)
                .HasColumnName("work_type");
            entity.Property(e => e.YearsOfExp)
                .HasColumnType("decimal(10, 0)")
                .HasColumnName("years_of_exp");
        });

        modelBuilder.Entity<VImpExpProduct>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_IMP_EXP_PRODUCT");

            entity.Property(e => e.Category)
                .HasMaxLength(30)
                .HasColumnName("CATEGORY");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("CATEGORY_NAME");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedTime)
                .HasColumnType("datetime")
                .HasColumnName("CREATED_TIME");
            entity.Property(e => e.CusCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.CusName)
                .HasMaxLength(255)
                .HasColumnName("CUS_NAME");
            entity.Property(e => e.HeaderCode)
                .HasMaxLength(255)
                .HasColumnName("HEADER_CODE");
            entity.Property(e => e.HeaderName)
                .HasMaxLength(255)
                .HasColumnName("HEADER_NAME");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PoCode)
                .HasMaxLength(255)
                .HasColumnName("PO_CODE");
            entity.Property(e => e.PoName)
                .HasMaxLength(1000)
                .HasColumnName("PO_NAME");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(30)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.QuantityInStore).HasColumnName("QUANTITY_IN_STORE");
            entity.Property(e => e.QuantityNeedImpExp).HasColumnName("QUANTITY_NEED_IMP_EXP");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(255)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.StoreName)
                .HasMaxLength(255)
                .HasColumnName("STORE_NAME");
            entity.Property(e => e.SupCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.SupName)
                .HasMaxLength(255)
                .HasColumnName("SUP_NAME");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(29, 0)")
                .HasColumnName("TOTAL");
            entity.Property(e => e.TotalQuantityByStore).HasColumnName("TOTAL_QUANTITY_BY_STORE");
            entity.Property(e => e.TotalQuantityInStore).HasColumnName("TOTAL_QUANTITY_IN_STORE");
            entity.Property(e => e.Type)
                .HasMaxLength(8)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitName)
                .HasMaxLength(1000)
                .HasColumnName("UNIT_NAME");
        });

        modelBuilder.Entity<VListBoard>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_LIST_BOARD");

            entity.Property(e => e.BoardCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BOARD_CODE");
            entity.Property(e => e.BoardName)
                .HasMaxLength(255)
                .HasColumnName("BOARD_NAME");
            entity.Property(e => e.Id).HasColumnName("ID");
        });

        modelBuilder.Entity<VListWeight>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_LIST_WEIGHT");

            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.Month).HasColumnName("MONTH");
            entity.Property(e => e.Progress)
                .HasColumnType("decimal(14, 0)")
                .HasColumnName("PROGRESS");
            entity.Property(e => e.WeightNum)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT_NUM");
        });

        modelBuilder.Entity<VProductAllTable>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_PRODUCT_ALL_TABLE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PriceCostAirline)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_AIRLINE");
            entity.Property(e => e.PriceCostCatelogue)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_CATELOGUE");
            entity.Property(e => e.PriceCostSea)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_COST_SEA");
            entity.Property(e => e.PriceRetailBuild)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD");
            entity.Property(e => e.PriceRetailBuildAirline)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailBuildSea)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_BUILD_SEA");
            entity.Property(e => e.PriceRetailNoBuild)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD");
            entity.Property(e => e.PriceRetailNoBuildAirline)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_AIRLINE");
            entity.Property(e => e.PriceRetailNoBuildSea)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("PRICE_RETAIL_NO_BUILD_SEA");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(500)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.ProductType)
                .HasMaxLength(16)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.ProductTypeName)
                .HasMaxLength(500)
                .HasColumnName("PRODUCT_TYPE_NAME");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitName)
                .HasMaxLength(255)
                .HasColumnName("UNIT_NAME");
        });

        modelBuilder.Entity<VProjectProductRemain>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_PROJECT_PRODUCT_REMAIN");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.ProjectCode)
                .HasMaxLength(100)
                .HasColumnName("PROJECT_CODE");
            entity.Property(e => e.ProjectTitle)
                .HasMaxLength(255)
                .HasColumnName("PROJECT_TITLE");
            entity.Property(e => e.TotalRemain)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("TOTAL_REMAIN");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitName)
                .HasMaxLength(255)
                .HasColumnName("UNIT_NAME");
        });

        modelBuilder.Entity<VQuantityInStockByStore>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_QUANTITY_IN_STOCK_BY_STORE");

            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.StoreCode)
                .HasMaxLength(255)
                .HasColumnName("STORE_CODE");
            entity.Property(e => e.TotalQuantityByStore)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("TOTAL_QUANTITY_BY_STORE");
            entity.Property(e => e.TotalQuantityInStore)
                .HasColumnType("decimal(38, 2)")
                .HasColumnName("TOTAL_QUANTITY_IN_STORE");
        });

        modelBuilder.Entity<VReportStaticsPoCu>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_REPORT_STATICS_PO_CUS");

            entity.Property(e => e.ContractCode)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_CODE");
            entity.Property(e => e.ContractNo)
                .HasMaxLength(100)
                .HasColumnName("CONTRACT_NO");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.CusName)
                .HasMaxLength(255)
                .HasColumnName("CUS_NAME");
            entity.Property(e => e.EffectiveDate).HasColumnName("EFFECTIVE_DATE");
            entity.Property(e => e.ExchangeRate)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("EXCHANGE_RATE");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.RevenueAfterTaxVnd).HasColumnName("REVENUE_AFTER_TAX_VND");
            entity.Property(e => e.Title)
                .HasMaxLength(1000)
                .HasColumnName("TITLE");
        });

        modelBuilder.Entity<VReportStaticsPoSup>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_REPORT_STATICS_PO_SUP");

            entity.Property(e => e.Category)
                .HasMaxLength(30)
                .HasColumnName("CATEGORY");
            entity.Property(e => e.CategoryName)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("CATEGORY_NAME");
            entity.Property(e => e.Cost)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CusCode)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.CusName)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("CUS_NAME");
            entity.Property(e => e.HeaderCode)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("HEADER_CODE");
            entity.Property(e => e.HeaderName)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("HEADER_NAME");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.PoCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_CODE");
            entity.Property(e => e.PoName)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PO_NAME");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductName)
                .HasMaxLength(30)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.ProductType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_TYPE");
            entity.Property(e => e.Quantity).HasColumnName("QUANTITY");
            entity.Property(e => e.QuantityNeedImpExp).HasColumnName("QUANTITY_NEED_IMP_EXP");
            entity.Property(e => e.SupCode)
                .HasMaxLength(100)
                .HasColumnName("SUP_CODE");
            entity.Property(e => e.SupName)
                .HasMaxLength(255)
                .HasColumnName("SUP_NAME");
            entity.Property(e => e.Total)
                .HasColumnType("decimal(29, 2)")
                .HasColumnName("TOTAL");
            entity.Property(e => e.Type)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UnitName)
                .HasMaxLength(1000)
                .HasColumnName("UNIT_NAME");
        });

        modelBuilder.Entity<VShiftLog>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_SHIFT_LOG");

            entity.Property(e => e.ChkinLocationGps)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CHKIN_LOCATION_GPS");
            entity.Property(e => e.ChkinLocationTxt).HasColumnName("CHKIN_LOCATION_TXT");
            entity.Property(e => e.ChkinPicRealtime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHKIN_PIC_REALTIME");
            entity.Property(e => e.ChkinTime).HasColumnName("CHKIN_TIME");
            entity.Property(e => e.ChkoutLocationGps)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CHKOUT_LOCATION_GPS");
            entity.Property(e => e.ChkoutLocationTxt)
                .HasMaxLength(255)
                .HasColumnName("CHKOUT_LOCATION_TXT");
            entity.Property(e => e.ChkoutPicRealtime)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CHKOUT_PIC_REALTIME");
            entity.Property(e => e.ChkoutTime).HasColumnName("CHKOUT_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("FLAG");
            entity.Property(e => e.FromDevice)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("FROM_DEVICE");
            entity.Property(e => e.Id)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ID");
            entity.Property(e => e.Imei)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IMEI");
            entity.Property(e => e.Ip)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IP");
            entity.Property(e => e.IsBussiness).HasColumnName("IS_BUSSINESS");
            entity.Property(e => e.IsChkinRealTime).HasColumnName("IS_CHKIN_REAL_TIME");
            entity.Property(e => e.IsChkoutRealTime).HasColumnName("IS_CHKOUT_REAL_TIME");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(6)
                .IsUnicode(false)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkingShiftCode)
                .HasMaxLength(255)
                .HasColumnName("WORKING_SHIFT_CODE");
        });

        modelBuilder.Entity<VSubjectHierachy>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("V_SUBJECT_HIERACHY");

            entity.Property(e => e.Author)
                .HasMaxLength(1000)
                .HasColumnName("AUTHOR");
            entity.Property(e => e.Duration).HasColumnName("DURATION");
            entity.Property(e => e.EdmsCatCode)
                .HasMaxLength(255)
                .HasColumnName("EDMS_CAT_CODE");
            entity.Property(e => e.FileBase).HasColumnName("FILE_BASE");
            entity.Property(e => e.HierachyCode).HasColumnName("HIERACHY_CODE");
            entity.Property(e => e.HierachyDesc).HasColumnName("HIERACHY_DESC");
            entity.Property(e => e.HierachyLevel).HasColumnName("HIERACHY_LEVEL");
            entity.Property(e => e.IconFa)
                .HasMaxLength(255)
                .HasColumnName("ICON_FA");
            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Id888).HasColumnName("ID888");
            entity.Property(e => e.ImageCover)
                .HasMaxLength(255)
                .HasColumnName("IMAGE_COVER");
            entity.Property(e => e.IsTutor888).HasColumnName("IS_TUTOR888");
            entity.Property(e => e.Parent).HasColumnName("PARENT");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.SubjectCode)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_CODE");
            entity.Property(e => e.SubjectDescription).HasColumnName("SUBJECT_DESCRIPTION");
            entity.Property(e => e.SubjectName)
                .HasMaxLength(255)
                .HasColumnName("SUBJECT_NAME");
            entity.Property(e => e.Teacher).HasColumnName("TEACHER");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.VideoPresent)
                .HasMaxLength(255)
                .HasColumnName("VIDEO_PRESENT");
        });

        modelBuilder.Entity<VcAppAccessLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_APP_A__3214EC27607D4316");

            entity.ToTable("VC_APP_ACCESS_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Imei).HasColumnName("IMEI");
            entity.Property(e => e.Password)
                .HasMaxLength(255)
                .HasColumnName("PASSWORD");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.Token).HasColumnName("TOKEN");
            entity.Property(e => e.UserName)
                .HasMaxLength(255)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<VcCustomerCare>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_CUSTO__3214EC272047AA33");

            entity.ToTable("VC_CUSTOMER_CARE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BrandCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BRAND_CODE");
            entity.Property(e => e.BuyCost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("BUY_COST");
            entity.Property(e => e.CareCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CARE_CODE");
            entity.Property(e => e.ConsumpMonthly)
                .HasColumnType("decimal(18, 1)")
                .HasColumnName("CONSUMP_MONTHLY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IdWorkCheck).HasColumnName("ID_WORK_CHECK");
            entity.Property(e => e.Instock)
                .HasColumnType("decimal(18, 1)")
                .HasColumnName("INSTOCK");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.RouteCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ROUTE_CODE");
            entity.Property(e => e.SaleCost)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("SALE_COST");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<VcCustomerCareLastMonth>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_CUSTO__3214EC2750759135");

            entity.ToTable("VC_CUSTOMER_CARE_LAST_MONTH");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BrandCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BRAND_CODE");
            entity.Property(e => e.ConsumpMonthly)
                .HasColumnType("decimal(18, 1)")
                .HasColumnName("CONSUMP_MONTHLY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CusCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CUS_CODE");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Instock)
                .HasColumnType("decimal(18, 1)")
                .HasColumnName("INSTOCK");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Username)
                .HasMaxLength(50)
                .HasColumnName("USERNAME");
            entity.Property(e => e.YearMonth)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("YEAR_MONTH");
        });

        modelBuilder.Entity<VcCustomerDeclareHeaderInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_CUSTO__3214EC272CC8CCBB");

            entity.ToTable("VC_CUSTOMER_DECLARE_HEADER_INFO");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.Proportion)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PROPORTION");
            entity.Property(e => e.TotalCanImp)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("TOTAL_CAN_IMP");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<VcCustomerDeclareInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_CUSTO__3214EC27C19709C3");

            entity.ToTable("VC_CUSTOMER_DECLARE_INFO");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BrandCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BRAND_CODE");
            entity.Property(e => e.BuyCost)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("BUY_COST");
            entity.Property(e => e.ConsumpMonthly)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("CONSUMP_MONTHLY");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Instock)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("INSTOCK");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.Proportion)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PROPORTION");
            entity.Property(e => e.SaleCost)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("SALE_COST");
            entity.Property(e => e.TotalCanImp)
                .HasColumnType("decimal(18, 3)")
                .HasColumnName("TOTAL_CAN_IMP");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<VcDriver>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_DRIVER");

            entity.Property(e => e.Active).HasColumnName("ACTIVE");
            entity.Property(e => e.Area)
                .HasMaxLength(4000)
                .HasColumnName("AREA");
            entity.Property(e => e.BalanceCredit).HasColumnName("BALANCE_CREDIT");
            entity.Property(e => e.Brand)
                .HasMaxLength(255)
                .HasColumnName("BRAND");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.CurrentChannel)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("CURRENT_CHANNEL");
            entity.Property(e => e.Description)
                .HasMaxLength(500)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Email)
                .HasMaxLength(50)
                .HasColumnName("EMAIL");
            entity.Property(e => e.Emei)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EMEI");
            entity.Property(e => e.EndName)
                .HasMaxLength(255)
                .HasColumnName("END_NAME");
            entity.Property(e => e.EndNameGps)
                .HasMaxLength(255)
                .HasColumnName("END_NAME_GPS");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IdFb)
                .HasMaxLength(50)
                .HasColumnName("ID_FB");
            entity.Property(e => e.Identification)
                .HasMaxLength(255)
                .HasColumnName("IDENTIFICATION");
            entity.Property(e => e.ImageCar)
                .HasMaxLength(255)
                .HasColumnName("IMAGE_CAR");
            entity.Property(e => e.IsBusy).HasColumnName("IS_BUSY");
            entity.Property(e => e.IsOnline).HasColumnName("IS_ONLINE");
            entity.Property(e => e.LicenseCarImage)
                .HasMaxLength(255)
                .HasColumnName("LICENSE_CAR_IMAGE");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(50)
                .HasColumnName("LICENSE_PLATE");
            entity.Property(e => e.Name)
                .HasMaxLength(150)
                .HasColumnName("NAME");
            entity.Property(e => e.Password)
                .HasMaxLength(50)
                .HasColumnName("PASSWORD");
            entity.Property(e => e.Phone)
                .HasMaxLength(15)
                .HasColumnName("PHONE");
            entity.Property(e => e.Polyline)
                .HasMaxLength(2000)
                .HasColumnName("POLYLINE");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(1000)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionText)
                .HasMaxLength(500)
                .HasColumnName("POSITION_TEXT");
            entity.Property(e => e.PositionTime).HasColumnName("POSITION_TIME");
            entity.Property(e => e.ProfilePicture)
                .HasMaxLength(255)
                .HasColumnName("PROFILE_PICTURE");
            entity.Property(e => e.RemoocCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("REMOOC_CODE");
            entity.Property(e => e.Sid)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("SID");
            entity.Property(e => e.StartName)
                .HasMaxLength(255)
                .HasColumnName("START_NAME");
            entity.Property(e => e.StartNameGps)
                .HasMaxLength(255)
                .HasColumnName("START_NAME_GPS");
            entity.Property(e => e.TaxyType)
                .HasMaxLength(255)
                .HasColumnName("TAXY_TYPE");
            entity.Property(e => e.TractorCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TRACTOR_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(1)
                .HasColumnName("TYPE");
            entity.Property(e => e.TypeCarYear)
                .HasMaxLength(50)
                .HasColumnName("TYPE_CAR_YEAR");
            entity.Property(e => e.TypeDriver).HasColumnName("TYPE_DRIVER");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedDate).HasColumnName("UPDATED_DATE");
            entity.Property(e => e.Username)
                .HasMaxLength(50)
                .HasColumnName("USERNAME");
            entity.Property(e => e.VirualIntiary)
                .HasMaxLength(4000)
                .HasColumnName("VIRUAL_INTIARY");
        });

        modelBuilder.Entity<VcFcm>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_FCM");

            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Token)
                .HasMaxLength(250)
                .HasColumnName("TOKEN");
            entity.Property(e => e.UserName)
                .HasMaxLength(50)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<VcFcmMessage>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_FCM_MESSAGE");

            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Message)
                .HasMaxLength(1000)
                .HasColumnName("MESSAGE");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type).HasColumnName("TYPE");
            entity.Property(e => e.UserName)
                .HasMaxLength(50)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<VcGisTable>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_GIS_TABLE");

            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .HasColumnName("NAME");
            entity.Property(e => e.NodeGis).HasColumnName("NODE_GIS");
            entity.Property(e => e.Parent)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("PARENT");
            entity.Property(e => e.Type)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("TYPE");
        });

        modelBuilder.Entity<VcJnanaFcm>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_JNANA__3214EC27C204E6FA");

            entity.ToTable("VC_JNANA_FCM");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Token)
                .HasMaxLength(250)
                .HasColumnName("TOKEN");
            entity.Property(e => e.UserId).HasColumnName("USER_ID");
        });

        modelBuilder.Entity<VcJnanaFcmMessage>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_JNANA_FCM_MESSAGE");

            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Message)
                .HasMaxLength(1000)
                .HasColumnName("MESSAGE");
            entity.Property(e => e.Title)
                .HasMaxLength(500)
                .HasColumnName("TITLE");
            entity.Property(e => e.Type).HasColumnName("TYPE");
            entity.Property(e => e.UserId).HasColumnName("USER_ID");
        });

        modelBuilder.Entity<VcJnanaFile>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_JNANA_FILE");

            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileCatCode)
                .HasMaxLength(250)
                .HasColumnName("FILE_CAT_CODE");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.FileExt)
                .HasMaxLength(10)
                .IsUnicode(false)
                .HasColumnName("FILE_EXT");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.FileNote)
                .HasMaxLength(255)
                .HasColumnName("FILE_NOTE");
            entity.Property(e => e.FilePath)
                .HasMaxLength(255)
                .HasColumnName("FILE_PATH");
            entity.Property(e => e.FileSize).HasColumnName("FILE_SIZE");
            entity.Property(e => e.FileStatus).HasColumnName("FILE_STATUS");
            entity.Property(e => e.FileTitle)
                .HasMaxLength(255)
                .HasColumnName("FILE_TITLE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UpdatedBy).HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<VcJnanaNewsArticle>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_JNANA_NEWS_ARTICLE");

            entity.Property(e => e.ArticleAvarta)
                .HasMaxLength(1000)
                .HasColumnName("ARTICLE_AVARTA");
            entity.Property(e => e.ArticleCode)
                .HasMaxLength(250)
                .HasColumnName("ARTICLE_CODE");
            entity.Property(e => e.ArticleContent)
                .HasMaxLength(1000)
                .HasColumnName("ARTICLE_CONTENT");
            entity.Property(e => e.ArticleStatus).HasColumnName("ARTICLE_STATUS");
            entity.Property(e => e.ArticleTitle)
                .HasMaxLength(1000)
                .HasColumnName("ARTICLE_TITLE");
            entity.Property(e => e.ArtileOrder).HasColumnName("ARTILE_ORDER");
            entity.Property(e => e.CatCode)
                .HasMaxLength(250)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UpdateBy).HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<VcJnanaNewsArticleFile>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_JNANA_NEWS_ARTICLE_FILE");

            entity.Property(e => e.ArticleCode)
                .HasMaxLength(250)
                .HasColumnName("ARTICLE_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(250)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<VcJnanaNewsCat>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_JNANA_NEWS_CAT");

            entity.Property(e => e.CatAvarta)
                .HasMaxLength(1000)
                .HasColumnName("CAT_AVARTA");
            entity.Property(e => e.CatCode)
                .HasMaxLength(250)
                .HasColumnName("CAT_CODE");
            entity.Property(e => e.CatDescription)
                .HasMaxLength(1000)
                .HasColumnName("CAT_DESCRIPTION");
            entity.Property(e => e.CatParentCode).HasColumnName("CAT_PARENT_CODE");
            entity.Property(e => e.CatStatus).HasColumnName("CAT_STATUS");
            entity.Property(e => e.CatTitle)
                .HasMaxLength(1000)
                .HasColumnName("CAT_TITLE");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(255)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.CreatedBy).HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.UpdateBy).HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<VcLeaderApprove>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_LEADE__3214EC270CEFEB29");

            entity.ToTable("VC_LEADER_APPROVE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.Status)
                .HasMaxLength(50)
                .HasColumnName("STATUS");
            entity.Property(e => e.WpCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WP_CODE");
        });

        modelBuilder.Entity<VcProductCat>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_PRODU__3214EC27DAD4E0A1");

            entity.ToTable("VC_PRODUCT_CAT");

            entity.Property(e => e.Id)
                .HasComment("Customer Id")
                .HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileName)
                .HasMaxLength(255)
                .HasColumnName("FILE_NAME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Note)
                .HasMaxLength(500)
                .HasColumnName("NOTE");
            entity.Property(e => e.PathFile)
                .HasMaxLength(500)
                .HasColumnName("PATH_FILE");
            entity.Property(e => e.PathImg)
                .HasMaxLength(500)
                .HasColumnName("PATH_IMG");
            entity.Property(e => e.ProductCode)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_CODE");
            entity.Property(e => e.ProductGroup)
                .HasMaxLength(100)
                .HasColumnName("PRODUCT_GROUP");
            entity.Property(e => e.ProductName)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_NAME");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<VcSettingRoute>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_SETTI__3214EC277BB5B9D3");

            entity.ToTable("VC_SETTING_ROUTE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CurrentStatus)
                .HasMaxLength(50)
                .HasColumnName("CURRENT_STATUS");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Node)
                .HasMaxLength(1000)
                .HasColumnName("NODE");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.Order).HasColumnName("ORDER");
            entity.Property(e => e.Proportion)
                .HasColumnType("decimal(18, 1)")
                .HasColumnName("PROPORTION");
            entity.Property(e => e.RouteCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ROUTE_CODE");
            entity.Property(e => e.TimePlan).HasColumnName("TIME_PLAN");
            entity.Property(e => e.TimeWork).HasColumnName("TIME_WORK");
            entity.Property(e => e.TotalCanImp)
                .HasColumnType("decimal(18, 1)")
                .HasColumnName("TOTAL_CAN_IMP");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WpCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WP_CODE");
        });

        modelBuilder.Entity<VcSosInfo>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_SOS_I__3214EC27ACC4A9E0");

            entity.ToTable("VC_SOS_INFO");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.Code)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Data)
                .HasMaxLength(1000)
                .IsUnicode(false)
                .HasColumnName("DATA");
            entity.Property(e => e.ImageCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("IMAGE_CODE");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.Title)
                .HasMaxLength(100)
                .HasColumnName("TITLE");
        });

        modelBuilder.Entity<VcSosMedium>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_SOS_M__3214EC27169689F2");

            entity.ToTable("VC_SOS_MEDIA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Code)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CODE");
            entity.Property(e => e.Extension)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("EXTENSION");
            entity.Property(e => e.ImageBinary)
                .HasColumnType("image")
                .HasColumnName("IMAGE_BINARY");
            entity.Property(e => e.Name)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("NAME");
            entity.Property(e => e.Path)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PATH");
            entity.Property(e => e.Size).HasColumnName("SIZE");
            entity.Property(e => e.SosCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("SOS_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("TYPE");
        });

        modelBuilder.Entity<VcStoreIdea>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_STORE__3214EC2704487E21");

            entity.ToTable("VC_STORE_IDEA");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Order).HasColumnName("ORDER");
            entity.Property(e => e.Title)
                .HasMaxLength(250)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Urlpicture)
                .HasMaxLength(250)
                .HasColumnName("URLPICTURE");
        });

        modelBuilder.Entity<VcSupplierTradeRelation>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_SUPPL__3214EC270334B277");

            entity.ToTable("VC_SUPPLIER_TRADE_RELATION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Brand)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BRAND");
            entity.Property(e => e.Buyer)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BUYER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Seller)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SELLER");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<VcTransporter>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("VC_TRANSPORTER");

            entity.Property(e => e.ActiveFlag)
                .HasMaxLength(1)
                .IsUnicode(false)
                .HasColumnName("ACTIVE_FLAG");
            entity.Property(e => e.Category)
                .HasMaxLength(250)
                .HasColumnName("CATEGORY");
            entity.Property(e => e.Code)
                .HasMaxLength(255)
                .HasColumnName("CODE");
            entity.Property(e => e.CompanyCode)
                .HasMaxLength(50)
                .HasColumnName("COMPANY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CustomType)
                .HasMaxLength(50)
                .HasColumnName("CUSTOM_TYPE");
            entity.Property(e => e.CustomerId)
                .HasMaxLength(30)
                .IsUnicode(false)
                .HasColumnName("CUSTOMER_ID");
            entity.Property(e => e.DesignPayload).HasColumnName("DESIGN_PAYLOAD");
            entity.Property(e => e.DriverId).HasColumnName("DRIVER_ID");
            entity.Property(e => e.DriverInfo)
                .HasMaxLength(240)
                .HasColumnName("DRIVER_INFO");
            entity.Property(e => e.DriverName)
                .HasMaxLength(240)
                .HasColumnName("DRIVER_NAME");
            entity.Property(e => e.Generic)
                .HasMaxLength(255)
                .HasColumnName("GENERIC");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .HasColumnName("GROUP");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.InsurranceDuration)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("INSURRANCE_DURATION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LicensePlate)
                .HasMaxLength(50)
                .HasColumnName("LICENSE_PLATE");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.Name)
                .HasMaxLength(255)
                .HasColumnName("NAME");
            entity.Property(e => e.Note)
                .HasMaxLength(1255)
                .HasColumnName("NOTE");
            entity.Property(e => e.Number).HasColumnName("NUMBER");
            entity.Property(e => e.OrgId).HasColumnName("ORG_ID");
            entity.Property(e => e.Origin)
                .HasMaxLength(255)
                .HasColumnName("ORIGIN");
            entity.Property(e => e.OwnerCode)
                .HasMaxLength(255)
                .HasColumnName("OWNER_CODE");
            entity.Property(e => e.PayloadPulled).HasColumnName("PAYLOAD_PULLED");
            entity.Property(e => e.PayloadTotal).HasColumnName("PAYLOAD_TOTAL");
            entity.Property(e => e.PositionGps)
                .HasMaxLength(1000)
                .HasColumnName("POSITION_GPS");
            entity.Property(e => e.PositionText)
                .HasMaxLength(500)
                .HasColumnName("POSITION_TEXT");
            entity.Property(e => e.RegistryDuration)
                .HasMaxLength(20)
                .IsUnicode(false)
                .HasColumnName("REGISTRY_DURATION");
            entity.Property(e => e.RomoocCode)
                .HasMaxLength(500)
                .HasColumnName("ROMOOC_CODE");
            entity.Property(e => e.SizeRegistry)
                .HasMaxLength(100)
                .HasColumnName("SIZE_REGISTRY");
            entity.Property(e => e.SizeUse)
                .HasMaxLength(100)
                .HasColumnName("SIZE_USE");
            entity.Property(e => e.SumDistance).HasColumnName("SUM_DISTANCE");
            entity.Property(e => e.TransportMethodId)
                .HasMaxLength(240)
                .IsUnicode(false)
                .HasColumnName("TRANSPORT_METHOD_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserNameDriver)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_NAME_DRIVER");
            entity.Property(e => e.VehicleId).HasColumnName("VEHICLE_ID");
            entity.Property(e => e.WeightItself).HasColumnName("WEIGHT_ITSELF");
            entity.Property(e => e.YearManufacture).HasColumnName("YEAR_MANUFACTURE");
        });

        modelBuilder.Entity<VcWorkCheck>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_WORK___3214EC274057DF53");

            entity.ToTable("VC_WORK_CHECK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Address)
                .HasMaxLength(255)
                .HasColumnName("ADDRESS");
            entity.Property(e => e.CareCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CARE_CODE");
            entity.Property(e => e.Checkin).HasColumnName("CHECKIN");
            entity.Property(e => e.CheckinGps)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CHECKIN_GPS");
            entity.Property(e => e.CheckinTime).HasColumnName("CHECKIN_TIME");
            entity.Property(e => e.Checkout).HasColumnName("CHECKOUT");
            entity.Property(e => e.CheckoutGps)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CHECKOUT_GPS");
            entity.Property(e => e.CheckoutOutDistance).HasColumnName("CHECKOUT_OUT_DISTANCE");
            entity.Property(e => e.CheckoutTime).HasColumnName("CHECKOUT_TIME");
            entity.Property(e => e.Count).HasColumnName("COUNT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.Idea)
                .HasMaxLength(255)
                .HasColumnName("IDEA");
            entity.Property(e => e.ImagePath)
                .HasMaxLength(255)
                .HasColumnName("IMAGE_PATH");
            entity.Property(e => e.Imei)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMEI");
            entity.Property(e => e.Review)
                .HasMaxLength(255)
                .HasColumnName("REVIEW");
            entity.Property(e => e.UserName)
                .HasMaxLength(50)
                .HasColumnName("USER_NAME");
        });

        modelBuilder.Entity<VcWorkPlan>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_WORK___3214EC276A0D5AA8");

            entity.ToTable("VC_WORK_PLAN");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApprovedBy)
                .HasMaxLength(50)
                .HasColumnName("APPROVED_BY");
            entity.Property(e => e.ApprovedTime).HasColumnName("APPROVED_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.CurrentStatus)
                .HasMaxLength(50)
                .HasColumnName("CURRENT_STATUS");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.FromDate).HasColumnName("FROM_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LeaderIdea)
                .HasMaxLength(500)
                .HasColumnName("LEADER_IDEA");
            entity.Property(e => e.ToDate).HasColumnName("TO_DATE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserName)
                .HasMaxLength(50)
                .HasColumnName("USER_NAME");
            entity.Property(e => e.WeekNo).HasColumnName("WEEK_NO");
            entity.Property(e => e.WpCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WP_CODE");
        });

        modelBuilder.Entity<VcWorkPlanLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VC_WORK___3214EC2701C58A02");

            entity.ToTable("VC_WORK_PLAN_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currentstatus)
                .HasMaxLength(50)
                .HasColumnName("CURRENTSTATUS");
            entity.Property(e => e.Currenttime).HasColumnName("CURRENTTIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Percent).HasColumnName("PERCENT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Wpcode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WPCODE");
        });

        modelBuilder.Entity<View1>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("View_1");

            entity.Property(e => e.Currency)
                .HasMaxLength(50)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Price)
                .HasMaxLength(50)
                .HasColumnName("PRICE");
            entity.Property(e => e.TransactionCode)
                .HasMaxLength(50)
                .HasColumnName("TRANSACTION_CODE");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<VocaCertificateCat>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__VOCA_CER__3214EC271AA6125C");

            entity.ToTable("VOCA_CERTIFICATE_CAT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CertCode)
                .HasMaxLength(100)
                .HasColumnName("CERT_CODE");
            entity.Property(e => e.CertLevel)
                .HasMaxLength(255)
                .HasColumnName("CERT_LEVEL");
            entity.Property(e => e.CertName)
                .HasMaxLength(255)
                .HasColumnName("CERT_NAME");
            entity.Property(e => e.CertNote)
                .HasMaxLength(255)
                .HasColumnName("CERT_NOTE");
            entity.Property(e => e.CertParent)
                .HasMaxLength(255)
                .HasColumnName("CERT_PARENT");
            entity.Property(e => e.CertTerm).HasColumnName("CERT_TERM");
            entity.Property(e => e.CertType)
                .HasMaxLength(255)
                .HasColumnName("CERT_TYPE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.TermUnit)
                .HasMaxLength(255)
                .HasColumnName("TERM_UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WalletCoinExchange>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WALLET_COIN_EXCHANGE");

            entity.Property(e => e.Coin)
                .HasMaxLength(255)
                .HasColumnName("COIN");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ExchangeLog).HasColumnName("EXCHANGE_LOG");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Money)
                .HasMaxLength(255)
                .HasColumnName("MONEY");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WalletCoinTransaction>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WALLET_COIN_TRANSACTION");

            entity.Property(e => e.Amount)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("AMOUNT");
            entity.Property(e => e.Buyer)
                .HasMaxLength(255)
                .HasColumnName("BUYER");
            entity.Property(e => e.Coin)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COIN");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemType)
                .HasMaxLength(255)
                .HasColumnName("ITEM_TYPE");
            entity.Property(e => e.Seller)
                .HasMaxLength(255)
                .HasColumnName("SELLER");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TransactionCode)
                .HasMaxLength(255)
                .HasColumnName("TRANSACTION_CODE");
            entity.Property(e => e.TransactionCoinLog).HasColumnName("TRANSACTION_COIN_LOG");
            entity.Property(e => e.TransactionType)
                .HasMaxLength(255)
                .HasColumnName("TRANSACTION_TYPE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WalletDepositTransaction>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WALLET_DEPOSIT_TRANSACTION");

            entity.Property(e => e.Amount)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("AMOUNT");
            entity.Property(e => e.Coin)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COIN");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Currency)
                .HasMaxLength(255)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Ip)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("IP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.TransactionCode)
                .HasMaxLength(255)
                .HasColumnName("TRANSACTION_CODE");
            entity.Property(e => e.TransactionLog).HasColumnName("TRANSACTION_LOG");
            entity.Property(e => e.TransactionType)
                .HasMaxLength(255)
                .HasColumnName("TRANSACTION_TYPE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.UpdateTime).HasColumnName("UPDATE_TIME");
        });

        modelBuilder.Entity<WalletPackage>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WALLET_PACKAGE");

            entity.Property(e => e.ConditionJson).HasColumnName("CONDITION_JSON");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Description)
                .HasMaxLength(1000)
                .HasColumnName("DESCRIPTION");
            entity.Property(e => e.Duration)
                .HasColumnType("decimal(15, 0)")
                .HasColumnName("DURATION");
            entity.Property(e => e.DurationUnit)
                .HasMaxLength(255)
                .HasColumnName("DURATION_UNIT");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackageCode)
                .HasMaxLength(255)
                .HasColumnName("PACKAGE_CODE");
            entity.Property(e => e.PackageName)
                .HasMaxLength(255)
                .HasColumnName("PACKAGE_NAME");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WalletTableCostItem>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WALLET_TABLE_COST_ITEM");

            entity.Property(e => e.Coin)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("COIN");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemCode)
                .HasMaxLength(255)
                .HasColumnName("ITEM_CODE");
            entity.Property(e => e.ItemType)
                .HasMaxLength(255)
                .HasColumnName("ITEM_TYPE");
            entity.Property(e => e.LogCostHistory).HasColumnName("LOG_COST_HISTORY");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WarehouseLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WAREHOUS__3214EC27B3348129");

            entity.ToTable("WAREHOUSE_LOG");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(255)
                .HasColumnName("ACTION");
            entity.Property(e => e.Controller)
                .HasMaxLength(255)
                .HasColumnName("CONTROLLER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Ip)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IP");
            entity.Property(e => e.Path)
                .HasMaxLength(255)
                .HasColumnName("PATH");
            entity.Property(e => e.RequestBody).HasColumnName("REQUEST_BODY");
            entity.Property(e => e.RequestHeader).HasColumnName("REQUEST_HEADER");
            entity.Property(e => e.Table)
                .HasMaxLength(255)
                .HasColumnName("TABLE");
        });

        modelBuilder.Entity<WarehouseRecordsPack>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RE__3214EC2758D5099D");

            entity.ToTable("WAREHOUSE_RECORDS_PACK");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.ImportHeaderCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("IMPORT_HEADER_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.PackGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_GROUP");
            entity.Property(e => e.PackHierarchyPath)
                .HasMaxLength(255)
                .HasColumnName("PACK_HIERARCHY_PATH");
            entity.Property(e => e.PackLabel)
                .HasMaxLength(255)
                .HasColumnName("PACK_LABEL");
            entity.Property(e => e.PackLevel)
                .HasMaxLength(255)
                .HasColumnName("PACK_LEVEL");
            entity.Property(e => e.PackName)
                .HasMaxLength(255)
                .HasColumnName("PACK_NAME");
            entity.Property(e => e.PackParent)
                .HasMaxLength(255)
                .HasColumnName("PACK_PARENT");
            entity.Property(e => e.PackQuantity).HasColumnName("PACK_QUANTITY");
            entity.Property(e => e.PackStatus)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_STATUS");
            entity.Property(e => e.PackType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_TYPE");
            entity.Property(e => e.PackZoneLocation)
                .HasMaxLength(255)
                .HasColumnName("PACK_ZONE_LOCATION");
            entity.Property(e => e.QrCode)
                .HasMaxLength(1000)
                .HasColumnName("QR_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WarehouseRecordsPackAttr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RE__3214EC27720870D6");

            entity.ToTable("WAREHOUSE_RECORDS_PACK_ATTR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackAttrCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_CODE");
            entity.Property(e => e.PackAttrDataType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_DATA_TYPE");
            entity.Property(e => e.PackAttrGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_GROUP");
            entity.Property(e => e.PackAttrName)
                .HasMaxLength(255)
                .HasColumnName("PACK_ATTR_NAME");
            entity.Property(e => e.PackAttrSize)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_SIZE");
            entity.Property(e => e.PackAttrType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_TYPE");
            entity.Property(e => e.PackAttrUnit)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_ATTR_UNIT");
            entity.Property(e => e.PackAttrValue)
                .HasMaxLength(255)
                .HasColumnName("PACK_ATTR_VALUE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Zone)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZONE");
        });

        modelBuilder.Entity<WarehouseRecordsPackFile>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_RE__3214EC27140E5EBB");

            entity.ToTable("WAREHOUSE_RECORDS_PACK_FILES");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FileCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("FILE_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WarehouseZoneAttr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_ZO__3214EC27A57D8657");

            entity.ToTable("WAREHOUSE_ZONE_ATTR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.SvgIcon)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneAttrCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZONE_ATTR_CODE");
            entity.Property(e => e.ZoneAttrName)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_NAME");
            entity.Property(e => e.ZoneAttrSize)
                .HasMaxLength(50)
                .HasColumnName("ZONE_ATTR_SIZE");
            entity.Property(e => e.ZoneAttrType)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_TYPE");
            entity.Property(e => e.ZoneAttrUnit)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_UNIT");
            entity.Property(e => e.ZoneAttrValue)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_VALUE");
            entity.Property(e => e.ZoneGroup)
                .HasMaxLength(255)
                .HasColumnName("ZONE_GROUP");
            entity.Property(e => e.ZoneType)
                .HasMaxLength(255)
                .HasColumnName("ZONE_TYPE");
        });

        modelBuilder.Entity<WarehouseZoneMapping>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ASSET_ZO__3214EC27E4F049C9");

            entity.ToTable("WAREHOUSE_ZONE_MAPPING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AssetCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ASSET_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.PackCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PACK_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZONE_CODE");
        });

        modelBuilder.Entity<WarehouseZoneStruct>(entity =>
        {
            entity.HasKey(e => e.ZoneCode).HasName("PK__ASSET_ZO__DA72D96078370D31");

            entity.ToTable("WAREHOUSE_ZONE_STRUCT");

            entity.Property(e => e.ZoneCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZONE_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.SvgIconData)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneGroup)
                .HasMaxLength(255)
                .HasColumnName("ZONE_GROUP");
            entity.Property(e => e.ZoneHierachy)
                .HasMaxLength(255)
                .HasColumnName("ZONE_HIERACHY");
            entity.Property(e => e.ZoneLabel)
                .HasMaxLength(255)
                .HasColumnName("ZONE_LABEL");
            entity.Property(e => e.ZoneLevel).HasColumnName("ZONE_LEVEL");
            entity.Property(e => e.ZoneName)
                .HasMaxLength(255)
                .HasColumnName("ZONE_NAME");
            entity.Property(e => e.ZoneParent)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZONE_PARENT");
            entity.Property(e => e.ZoneQuantity).HasColumnName("ZONE_QUANTITY");
            entity.Property(e => e.ZoneType)
                .HasMaxLength(255)
                .HasColumnName("ZONE_TYPE");
        });

        modelBuilder.Entity<WarningDisciplined>(entity =>
        {
            entity.ToTable("WARNING_DISCIPLINED");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.GrantOfDecision)
                .HasMaxLength(200)
                .HasComment("Cấp quyết định")
                .HasColumnName("GRANT_OF_DECISION");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MonthYear)
                .HasMaxLength(50)
                .HasColumnName("MONTH_YEAR");
            entity.Property(e => e.ProfileCode)
                .HasMaxLength(50)
                .HasColumnName("PROFILE_CODE");
            entity.Property(e => e.Reason)
                .HasMaxLength(255)
                .HasColumnName("REASON");
        });

        modelBuilder.Entity<WeekWorkingScheduler>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WEEK_WOR__3214EC274771026F");

            entity.ToTable("WEEK_WORKING_SCHEDULER");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Chair)
                .HasMaxLength(50)
                .HasColumnName("CHAIR");
            entity.Property(e => e.Composition)
                .HasMaxLength(255)
                .HasColumnName("COMPOSITION");
            entity.Property(e => e.Content).HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Room)
                .HasMaxLength(255)
                .HasColumnName("ROOM");
            entity.Property(e => e.TimeEnd)
                .HasMaxLength(225)
                .HasColumnName("TIME_END");
            entity.Property(e => e.TimeStart)
                .HasMaxLength(225)
                .HasColumnName("TIME_START");
        });

        modelBuilder.Entity<WfActivityObjectProcessing>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WF_ACTIV__3214EC279F34FEBA");

            entity.ToTable("WF_ACTIVITY_OBJECT_PROCESSING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActInstCode)
                .HasMaxLength(255)
                .HasColumnName("ACT_INST_CODE");
            entity.Property(e => e.Beshare).HasColumnName("BESHARE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsLeader).HasColumnName("IS_LEADER");
            entity.Property(e => e.ObjEntry).HasColumnName("OBJ_ENTRY");
            entity.Property(e => e.ObjectInst)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_INST");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_INST_CODE");
        });

        modelBuilder.Entity<WfObject>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WF_OBJEC__3214EC27A6BDEE6F");

            entity.ToTable("WF_OBJECT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WfObjCode)
                .HasMaxLength(255)
                .HasColumnName("WF_OBJ_CODE");
            entity.Property(e => e.WfObjName)
                .HasMaxLength(255)
                .HasColumnName("WF_OBJ_NAME");
            entity.Property(e => e.WfObjNoted)
                .HasMaxLength(1000)
                .HasColumnName("WF_OBJ_NOTED");
            entity.Property(e => e.WfObjType)
                .HasMaxLength(255)
                .HasColumnName("WF_OBJ_TYPE");
        });

        modelBuilder.Entity<WfSharpLibrary>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WF_SHARP__3214EC27E2C1A319");

            entity.ToTable("WF_SHARP_LIBRARY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.SharpCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SHARP_CODE");
            entity.Property(e => e.SharpData).HasColumnName("SHARP_DATA");
            entity.Property(e => e.SharpDesc)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SHARP_DESC");
            entity.Property(e => e.SharpName)
                .HasMaxLength(255)
                .HasColumnName("SHARP_NAME");
            entity.Property(e => e.SharpPath)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SHARP_PATH");
            entity.Property(e => e.SharpType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("SHARP_TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WhsZoneAttr>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WHS_ZONE__DA72D960E4D0EC5B");

            entity.ToTable("WHS_ZONE_ATTR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.SvgIcon)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneAttrCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZONE_ATTR_CODE");
            entity.Property(e => e.ZoneAttrName)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_NAME");
            entity.Property(e => e.ZoneAttrSize)
                .HasMaxLength(50)
                .HasColumnName("ZONE_ATTR_SIZE");
            entity.Property(e => e.ZoneAttrType)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_TYPE");
            entity.Property(e => e.ZoneAttrUnit)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_UNIT");
            entity.Property(e => e.ZoneAttrValue)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ATTR_VALUE");
            entity.Property(e => e.ZoneGroup)
                .HasMaxLength(255)
                .HasColumnName("ZONE_GROUP");
            entity.Property(e => e.ZoneType)
                .HasMaxLength(255)
                .HasColumnName("ZONE_TYPE");
        });

        modelBuilder.Entity<WhsZoneStruct>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__APP_VEND__E99CB38506F3084D");

            entity.ToTable("WHS_ZONE_STRUCT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Image)
                .HasMaxLength(255)
                .HasColumnName("IMAGE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ShapeData).HasColumnName("SHAPE_DATA");
            entity.Property(e => e.SvgIconData)
                .HasMaxLength(255)
                .HasColumnName("SVG_ICON_DATA");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZONE_CODE");
            entity.Property(e => e.ZoneGroup)
                .HasMaxLength(255)
                .HasColumnName("ZONE_GROUP");
            entity.Property(e => e.ZoneHierachy)
                .HasMaxLength(255)
                .HasColumnName("ZONE_HIERACHY");
            entity.Property(e => e.ZoneLabel)
                .HasMaxLength(255)
                .HasColumnName("ZONE_LABEL");
            entity.Property(e => e.ZoneLevel).HasColumnName("ZONE_LEVEL");
            entity.Property(e => e.ZoneName)
                .HasMaxLength(255)
                .HasColumnName("ZONE_NAME");
            entity.Property(e => e.ZoneParent)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ZONE_PARENT");
            entity.Property(e => e.ZoneType)
                .HasMaxLength(255)
                .HasColumnName("ZONE_TYPE");
        });

        modelBuilder.Entity<WorkEventCat>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_EVE__3214EC2789FF83D2");

            entity.ToTable("WORK_EVENT_CAT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DatetimeEvent).HasColumnName("DATETIME_EVENT");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EventCatCode)
                .HasMaxLength(255)
                .HasColumnName("EVENT_CAT_CODE");
            entity.Property(e => e.EventTitle)
                .HasMaxLength(255)
                .HasColumnName("EVENT_TITLE");
            entity.Property(e => e.FlagDelete).HasColumnName("FLAG_DELETE");
            entity.Property(e => e.FormatSetting)
                .HasMaxLength(255)
                .HasColumnName("FORMAT_SETTING");
            entity.Property(e => e.FrameTime)
                .HasMaxLength(255)
                .HasColumnName("FRAME_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WorkExecutiveObjectrelative>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_EXE__3214EC2742D436F6");

            entity.ToTable("WORK_EXECUTIVE_OBJECTRELATIVE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.ListCode)
                .HasMaxLength(255)
                .HasColumnName("LIST_CODE");
            entity.Property(e => e.Note)
                .HasMaxLength(255)
                .HasColumnName("NOTE");
            entity.Property(e => e.ObjectCode)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_CODE");
            entity.Property(e => e.ObjectModule)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_MODULE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WorkFlow>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_FLO__3214EC2744FFFE06");

            entity.ToTable("WORK_FLOW");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsPublic).HasColumnName("IS_PUBLIC");
            entity.Property(e => e.ObjectCategory)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_CATEGORY");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.PublicBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("PUBLIC_BY");
            entity.Property(e => e.PublicTime).HasColumnName("PUBLIC_TIME");
            entity.Property(e => e.ShapeJson).HasColumnName("SHAPE_JSON");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserList).HasColumnName("USER_LIST");
            entity.Property(e => e.WfCode)
                .HasMaxLength(255)
                .HasColumnName("WF_CODE");
            entity.Property(e => e.WfGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_GROUP");
            entity.Property(e => e.WfName)
                .HasMaxLength(255)
                .HasColumnName("WF_NAME");
            entity.Property(e => e.WfNote)
                .HasMaxLength(1000)
                .HasColumnName("WF_NOTE");
            entity.Property(e => e.WfType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_TYPE");
        });

        modelBuilder.Entity<WorkFlowRule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_FLO__3214EC27CDBB3677");

            entity.ToTable("WORK_FLOW_RULE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(255)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.FromTime).HasColumnName("FROM_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Noted)
                .HasMaxLength(1000)
                .HasColumnName("NOTED");
            entity.Property(e => e.Priority).HasColumnName("PRIORITY");
            entity.Property(e => e.Rule)
                .HasMaxLength(255)
                .HasColumnName("RULE");
            entity.Property(e => e.StepBack)
                .HasMaxLength(255)
                .HasColumnName("STEP_BACK");
            entity.Property(e => e.StepForward)
                .HasMaxLength(255)
                .HasColumnName("STEP_FORWARD");
            entity.Property(e => e.ToTime).HasColumnName("TO_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WorkItemAssignStaff>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__JOB_CARD__3214EC2786CFD741");

            entity.ToTable("WORK_ITEM_ASSIGN_STAFF");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CheckItem)
                .HasMaxLength(255)
                .HasColumnName("CHECK_ITEM");
            entity.Property(e => e.CheckListCode)
                .HasMaxLength(255)
                .HasColumnName("CHECK_LIST_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EstimateTime)
                .HasMaxLength(255)
                .HasColumnName("ESTIMATE_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ObjectGD)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_G_D");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
        });

        modelBuilder.Entity<WorkItemSession>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__STAFF_IT__3214EC27D332D876");

            entity.ToTable("WORK_ITEM_SESSION");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(255)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ItemWorkList)
                .HasMaxLength(255)
                .HasColumnName("ITEM_WORK_LIST");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Progress)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PROGRESS");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkSession)
                .HasMaxLength(255)
                .HasColumnName("WORK_SESSION");
        });

        modelBuilder.Entity<WorkItemSessionResult>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_ITE__3214EC27346D7613");

            entity.ToTable("WORK_ITEM_SESSION_RESULT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ApproveTime).HasColumnName("APPROVE_TIME");
            entity.Property(e => e.ChkListCode)
                .HasMaxLength(255)
                .HasColumnName("CHK_LIST_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.NoteFromLeader).HasColumnName("NOTE_FROM_LEADER");
            entity.Property(e => e.ProgressFromLeader)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PROGRESS_FROM_LEADER");
            entity.Property(e => e.ProgressFromStaff)
                .HasColumnType("decimal(18, 0)")
                .HasColumnName("PROGRESS_FROM_STAFF");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserAssessor)
                .HasMaxLength(255)
                .HasColumnName("USER_ASSESSOR");
            entity.Property(e => e.WorkSession)
                .HasMaxLength(255)
                .HasColumnName("WORK_SESSION");
        });

        modelBuilder.Entity<WorkOsAddressCard>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_OS___3214EC27309095CC");

            entity.ToTable("WORK_OS_ADDRESS_CARD");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(100)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText).HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(1)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WorkOsBoard>(entity =>
        {
            entity.HasKey(e => e.BoardId).HasName("PK__WORK_OS___10DF125680FAE8D2");

            entity.ToTable("WORK_OS_BOARD");

            entity.Property(e => e.BoardId).HasColumnName("BOARD_ID");
            entity.Property(e => e.Avatar)
                .HasMaxLength(255)
                .HasColumnName("AVATAR");
            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_COLOR");
            entity.Property(e => e.BackgroundImage)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_IMAGE");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.BoardCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BOARD_CODE");
            entity.Property(e => e.BoardName)
                .HasMaxLength(255)
                .HasColumnName("BOARD_NAME");
            entity.Property(e => e.BoardType)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BOARD_TYPE");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .HasColumnName("BRANCH");
            entity.Property(e => e.Completed)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
            entity.Property(e => e.Cost)
                .HasColumnType("money")
                .HasColumnName("COST");
            entity.Property(e => e.CountAll).HasColumnName("COUNT_ALL");
            entity.Property(e => e.CountCanceled).HasColumnName("COUNT_CANCELED");
            entity.Property(e => e.CountCompleted).HasColumnName("COUNT_COMPLETED");
            entity.Property(e => e.CountExpired).HasColumnName("COUNT_EXPIRED");
            entity.Property(e => e.CountProgress).HasColumnName("COUNT_PROGRESS");
            entity.Property(e => e.Deadline).HasColumnName("DEADLINE");
            entity.Property(e => e.Department)
                .HasMaxLength(255)
                .HasColumnName("DEPARTMENT");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.TeamCode)
                .HasMaxLength(255)
                .HasColumnName("TEAM_CODE");
            entity.Property(e => e.UpdateBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATE_BY");
            entity.Property(e => e.Visibility)
                .HasMaxLength(255)
                .HasColumnName("VISIBILITY");
        });

        modelBuilder.Entity<WorkOsBoardTrackingProgress>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_OS___3214EC271F61E7C2");

            entity.ToTable("WORK_OS_BOARD_TRACKING_PROGRESS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BoardCode)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("BOARD_CODE");
            entity.Property(e => e.Completed).HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
        });

        modelBuilder.Entity<WorkOsCard>(entity =>
        {
            entity.HasKey(e => e.CardCode).HasName("PK__WORK_OS___CF0FBF267755B57F");

            entity.ToTable("WORK_OS_CARD");

            entity.Property(e => e.CardCode)
                .HasMaxLength(100)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.AttachmentList)
                .HasMaxLength(255)
                .HasColumnName("ATTACHMENT_LIST");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.CardId)
                .ValueGeneratedOnAdd()
                .HasColumnName("CARD_ID");
            entity.Property(e => e.CardLevel)
                .HasMaxLength(255)
                .HasColumnName("CARD_LEVEL");
            entity.Property(e => e.CardName)
                .HasMaxLength(255)
                .HasColumnName("CARD_NAME");
            entity.Property(e => e.CheckList)
                .HasMaxLength(255)
                .HasColumnName("CHECK_LIST");
            entity.Property(e => e.CommentList)
                .HasMaxLength(255)
                .HasColumnName("COMMENT_LIST");
            entity.Property(e => e.Completed)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
            entity.Property(e => e.Cost)
                .HasColumnType("money")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Currency)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CURRENCY");
            entity.Property(e => e.Cycle)
                .HasMaxLength(255)
                .HasColumnName("CYCLE");
            entity.Property(e => e.Deadline).HasColumnName("DEADLINE");
            entity.Property(e => e.Description).HasColumnName("DESCRIPTION");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.Inherit)
                .HasMaxLength(255)
                .HasColumnName("INHERIT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsLock).HasColumnName("IS_LOCK");
            entity.Property(e => e.IsRecurrent).HasColumnName("IS_RECURRENT");
            entity.Property(e => e.JsonAssign).HasColumnName("JSON_ASSIGN");
            entity.Property(e => e.JsonStatusLog).HasColumnName("JSON_STATUS_LOG");
            entity.Property(e => e.Labels)
                .HasMaxLength(255)
                .HasColumnName("LABELS");
            entity.Property(e => e.ListCode)
                .HasMaxLength(100)
                .HasColumnName("LIST_CODE");
            entity.Property(e => e.ListUserView).HasColumnName("LIST_USER_VIEW");
            entity.Property(e => e.LockShare).HasColumnName("LOCK_SHARE");
            entity.Property(e => e.LstUser).HasColumnName("LST_USER");
            entity.Property(e => e.Member)
                .HasMaxLength(255)
                .HasColumnName("MEMBER");
            entity.Property(e => e.Progress)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("PROGRESS");
            entity.Property(e => e.Quantitative)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("QUANTITATIVE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WeightNum)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT_NUM");
            entity.Property(e => e.WorkType)
                .HasMaxLength(255)
                .HasColumnName("WORK_TYPE");
            entity.Property(e => e.WorkflowCode)
                .HasMaxLength(255)
                .HasColumnName("WORKFLOW_CODE");
        });

        modelBuilder.Entity<WorkOsCardTrackingProgress>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_OS___3214EC2744C0F8B2");

            entity.ToTable("WORK_OS_CARD_TRACKING_PROGRESS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CardCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CARD_CODE");
            entity.Property(e => e.Completed).HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
        });

        modelBuilder.Entity<WorkOsList>(entity =>
        {
            entity.HasKey(e => e.ListCode).HasName("PK__WORK_OS___1FC670EADDB7EEE1");

            entity.ToTable("WORK_OS_LIST");

            entity.Property(e => e.ListCode)
                .HasMaxLength(100)
                .HasColumnName("LIST_CODE");
            entity.Property(e => e.Avatar)
                .HasMaxLength(255)
                .HasColumnName("AVATAR");
            entity.Property(e => e.Background)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.BoardCode)
                .HasMaxLength(100)
                .HasColumnName("BOARD_CODE");
            entity.Property(e => e.Completed)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
            entity.Property(e => e.Cost)
                .HasColumnType("money")
                .HasColumnName("COST");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedDate).HasColumnName("CREATED_DATE");
            entity.Property(e => e.Deadline).HasColumnName("DEADLINE");
            entity.Property(e => e.Device)
                .HasMaxLength(255)
                .HasColumnName("DEVICE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ListId)
                .ValueGeneratedOnAdd()
                .HasColumnName("LIST_ID");
            entity.Property(e => e.ListName)
                .HasMaxLength(255)
                .HasColumnName("LIST_NAME");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.Order).HasColumnName("ORDER");
            entity.Property(e => e.Status)
                .HasComment("0: Khởi tạo - 1: Hoạt động - 2: Chậm trế")
                .HasColumnName("STATUS");
            entity.Property(e => e.WeightNum)
                .HasColumnType("decimal(14, 2)")
                .HasColumnName("WEIGHT_NUM");
        });

        modelBuilder.Entity<WorkOsListTrackingProgress>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_OS___3214EC27FB57D744");

            entity.ToTable("WORK_OS_LIST_TRACKING_PROGRESS");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Completed).HasColumnName("COMPLETED");
            entity.Property(e => e.CompletedTime).HasColumnName("COMPLETED_TIME");
            entity.Property(e => e.ListCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("LIST_CODE");
        });

        modelBuilder.Entity<WorkScheduleComment>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("WORK_SCHEDULE_COMMENT");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Dislike).HasColumnName("DISLIKE");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonCanvas).HasColumnName("JSON_CANVAS");
            entity.Property(e => e.Like).HasColumnName("LIKE");
            entity.Property(e => e.LikeLog).HasColumnName("LIKE_LOG");
            entity.Property(e => e.RefContent).HasColumnName("REF_CONTENT");
            entity.Property(e => e.RefParent).HasColumnName("REF_PARENT");
            entity.Property(e => e.ScheduleId)
                .HasMaxLength(100)
                .HasColumnName("SCHEDULE_ID");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserCreateRef)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("USER_CREATE_REF");
        });

        modelBuilder.Entity<WorkShiftCheckinOut>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__STAFF_TI__3214EC27B8977AE7");

            entity.ToTable("WORK_SHIFT_CHECKIN_OUT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.Action)
                .HasMaxLength(50)
                .IsUnicode(false)
                .HasColumnName("ACTION");
            entity.Property(e => e.ActionTime).HasColumnName("ACTION_TIME");
            entity.Property(e => e.ActionTo).HasColumnName("ACTION_TO");
            entity.Property(e => e.Approve).HasColumnName("APPROVE");
            entity.Property(e => e.ApproveTime).HasColumnName("APPROVE_TIME");
            entity.Property(e => e.Approver)
                .HasMaxLength(255)
                .HasColumnName("APPROVER");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Device)
                .HasMaxLength(50)
                .HasColumnName("DEVICE");
            entity.Property(e => e.Ip)
                .HasMaxLength(50)
                .HasColumnName("IP");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsException).HasColumnName("IS_EXCEPTION");
            entity.Property(e => e.LocationGps)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("LOCATION_GPS");
            entity.Property(e => e.LocationText)
                .HasMaxLength(255)
                .HasColumnName("LOCATION_TEXT");
            entity.Property(e => e.NotWorkType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("NOT_WORK_TYPE");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.Picture)
                .HasMaxLength(255)
                .HasColumnName("PICTURE");
            entity.Property(e => e.Session).HasColumnName("SESSION");
            entity.Property(e => e.ShiftCode)
                .HasMaxLength(255)
                .HasColumnName("SHIFT_CODE");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.StatusLog).HasColumnName("STATUS_LOG");
            entity.Property(e => e.Title)
                .HasMaxLength(255)
                .HasColumnName("TITLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserId)
                .HasMaxLength(50)
                .HasColumnName("USER_ID");
            entity.Property(e => e.WorkHoliday).HasColumnName("WORK_HOLIDAY");
            entity.Property(e => e.WorkflowCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CODE");
        });

        modelBuilder.Entity<WorkUserEvent>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORK_USE__3214EC274BD0FE8E");

            entity.ToTable("WORK_USER_EVENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EventCatCode)
                .HasMaxLength(255)
                .HasColumnName("EVENT_CAT_CODE");
            entity.Property(e => e.Flag).HasColumnName("FLAG");
            entity.Property(e => e.MemberId)
                .HasMaxLength(255)
                .HasColumnName("MEMBER_ID");
            entity.Property(e => e.Present)
                .HasMaxLength(50)
                .HasColumnName("PRESENT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
        });

        modelBuilder.Entity<WorkflowActivity>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORKFLOW__3214EC27425D96D3");

            entity.ToTable("WORKFLOW_ACTIVITY");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.Branch)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("BRANCH");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Department)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEPARTMENT");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LimitTime)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("LIMIT_TIME");
            entity.Property(e => e.Note)
                .HasMaxLength(1000)
                .HasColumnName("NOTE");
            entity.Property(e => e.Priority)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("PRIORITY");
            entity.Property(e => e.UnitTime)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UNIT_TIME");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkFlowCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WORK_FLOW_CODE");
        });

        modelBuilder.Entity<WorkflowActivityRole>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORKFLOW__3214EC277BC78783");

            entity.ToTable("WORKFLOW_ACTIVITY_ROLE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ACT_CODE");
            entity.Property(e => e.BranchCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("BRANCH_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(255)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DepartCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DEPART_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.Role)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ROLE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(255)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkFlowCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("WORK_FLOW_CODE");
            entity.Property(e => e.WorkFlowProperty)
                .HasMaxLength(255)
                .HasColumnName("WORK_FLOW_PROPERTY");
        });

        modelBuilder.Entity<WorkflowInstance>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORKFLOW__3214EC275CFD6443");

            entity.ToTable("WORKFLOW_INSTANCE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActInstInitial)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACT_INST_INITIAL");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DataAttr).HasColumnName("DATA_ATTR");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Desc).HasColumnName("DESC");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.IsLock).HasColumnName("IS_LOCK");
            entity.Property(e => e.MarkActCurrent)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MARK_ACT_CURRENT");
            entity.Property(e => e.ObjectInst)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_INST");
            entity.Property(e => e.ObjectType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("OBJECT_TYPE");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.Status).HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.UserList).HasColumnName("USER_LIST");
            entity.Property(e => e.UserManager).HasColumnName("USER_MANAGER");
            entity.Property(e => e.WfDesc)
                .HasMaxLength(1000)
                .HasColumnName("WF_DESC");
            entity.Property(e => e.WfGroup)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_GROUP");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_INST_CODE");
            entity.Property(e => e.WfInstName)
                .HasMaxLength(255)
                .HasColumnName("WF_INST_NAME");
            entity.Property(e => e.WfType)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_TYPE");
            entity.Property(e => e.WorkflowCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CODE");
        });

        modelBuilder.Entity<WorkflowInstanceRunning>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORKFLOW__3214EC2731AAEC6C");

            entity.ToTable("WORKFLOW_INSTANCE_RUNNING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityDestination)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_DESTINATION");
            entity.Property(e => e.ActivityInitial)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_INITIAL");
            entity.Property(e => e.Command).HasColumnName("COMMAND");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.StartTime).HasColumnName("START_TIME");
            entity.Property(e => e.TransitionCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TRANSITION_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WfInstCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WF_INST_CODE");
            entity.Property(e => e.WorkflowCode)
                .HasMaxLength(255)
                .HasColumnName("WORKFLOW_CODE");
        });

        modelBuilder.Entity<WorkflowMilestone>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORKFLOW__3214EC27576A6075");

            entity.ToTable("WORKFLOW_MILESTONE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_CODE");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.MilestoneCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("MILESTONE_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("WORKFLOW_CODE");
        });

        modelBuilder.Entity<WorkflowSetting>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORKFLOW__3214EC271C5223CE");

            entity.ToTable("WORKFLOW_SETTING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.ActivityDestination)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACTIVITY_DESTINATION");
            entity.Property(e => e.ActivityInitial)
                .HasMaxLength(255)
                .HasColumnName("ACTIVITY_INITIAL");
            entity.Property(e => e.Command).HasColumnName("COMMAND");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.TransitionCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("TRANSITION_CODE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkflowCode)
                .HasMaxLength(255)
                .HasColumnName("WORKFLOW_CODE");
        });

        modelBuilder.Entity<WorkingSchedule>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__WORKING___3214EC279164EB5C");

            entity.ToTable("WORKING_SCHEDULE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BackgroundColor)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_COLOR");
            entity.Property(e => e.BackgroundImage)
                .HasMaxLength(255)
                .HasColumnName("BACKGROUND_IMAGE");
            entity.Property(e => e.Content)
                .HasMaxLength(255)
                .HasColumnName("CONTENT");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(50)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.EndDate).HasColumnName("END_DATE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JsonRef).HasColumnName("JSON_REF");
            entity.Property(e => e.JsonStatus).HasColumnName("JSON_STATUS");
            entity.Property(e => e.ListUserApproved).HasColumnName("LIST_USER_APPROVED");
            entity.Property(e => e.Location)
                .HasMaxLength(255)
                .HasColumnName("LOCATION");
            entity.Property(e => e.StartDate).HasColumnName("START_DATE");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .HasColumnName("STATUS");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WorkContent).HasColumnName("WORK_CONTENT");
        });

        modelBuilder.Entity<WorkingScheduleAttr>(entity =>
        {
            entity.ToTable("WORKING_SCHEDULE_ATTR");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AttrCode)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ATTR_CODE");
            entity.Property(e => e.AttrGroup)
                .HasMaxLength(255)
                .HasColumnName("ATTR_GROUP");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.SessionCode)
                .HasMaxLength(255)
                .HasColumnName("SESSION_CODE");
            entity.Property(e => e.Type)
                .HasMaxLength(255)
                .HasColumnName("TYPE");
            entity.Property(e => e.Unit)
                .HasMaxLength(255)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.Value)
                .HasMaxLength(1000)
                .HasColumnName("VALUE");
            entity.Property(e => e.WorkingScheduleId).HasColumnName("WORKING_SCHEDULE_ID");

            entity.HasOne(d => d.WorkingSchedule).WithMany(p => p.WorkingScheduleAttrs)
                .HasForeignKey(d => d.WorkingScheduleId)
                .HasConstraintName("FK_WORKING_SCHEDULE_ATTR_WORKING_SCHEDULE");
        });

        modelBuilder.Entity<WorkingTracking>(entity =>
        {
            entity.ToTable("WORKING_TRACKING");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.From)
                .HasMaxLength(50)
                .HasColumnName("FROM");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ProfileCode)
                .HasMaxLength(50)
                .HasColumnName("PROFILE_CODE");
            entity.Property(e => e.Role)
                .HasMaxLength(200)
                .HasComment("Vai trò, vị trí")
                .HasColumnName("ROLE");
            entity.Property(e => e.To)
                .HasMaxLength(50)
                .HasColumnName("TO");
            entity.Property(e => e.Work)
                .HasMaxLength(255)
                .HasColumnName("WORK");
        });

        modelBuilder.Entity<ZoneDevicePlacement>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ZONE_DEV__3214EC2715834CC8");

            entity.ToTable("ZONE_DEVICE_PLACEMENT");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.BeginTime).HasColumnName("BEGIN_TIME");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.DeviceCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("DEVICE_CODE");
            entity.Property(e => e.EndTime).HasColumnName("END_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.ManagerId)
                .HasMaxLength(255)
                .HasColumnName("MANAGER_ID");
            entity.Property(e => e.Position)
                .HasMaxLength(255)
                .HasColumnName("POSITION");
            entity.Property(e => e.Status)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("STATUS");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZONE_CODE");
        });

        modelBuilder.Entity<ZoneSetup>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ZONE_SET__3214EC273BAA8F04");

            entity.ToTable("ZONE_SETUP");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoneAddressGps)
                .HasMaxLength(255)
                .HasColumnName("ZONE_ADDRESS_GPS");
            entity.Property(e => e.ZoneAddressTxt)
                .HasMaxLength(1000)
                .HasColumnName("ZONE_ADDRESS_TXT");
            entity.Property(e => e.ZoneCode)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ZONE_CODE");
            entity.Property(e => e.ZoneDesc)
                .HasMaxLength(1000)
                .HasColumnName("ZONE_DESC");
            entity.Property(e => e.ZoneImage)
                .HasMaxLength(255)
                .HasColumnName("ZONE_IMAGE");
            entity.Property(e => e.ZoneName)
                .HasMaxLength(255)
                .HasColumnName("ZONE_NAME");
            entity.Property(e => e.ZoneStatus)
                .HasMaxLength(255)
                .HasColumnName("ZONE_STATUS");
        });

        modelBuilder.Entity<ZoomManage>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__ZOOM_MAN__3214EC27EB135CDF");

            entity.ToTable("ZOOM_MANAGE");

            entity.Property(e => e.Id).HasColumnName("ID");
            entity.Property(e => e.AccountZoom)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("ACCOUNT_ZOOM");
            entity.Property(e => e.Chanel)
                .HasMaxLength(255)
                .HasColumnName("CHANEL");
            entity.Property(e => e.CreatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.DeletedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("DELETED_BY");
            entity.Property(e => e.DeletedTime).HasColumnName("DELETED_TIME");
            entity.Property(e => e.Group)
                .HasMaxLength(255)
                .IsUnicode(false)
                .HasColumnName("GROUP");
            entity.Property(e => e.HostClaimCode)
                .HasMaxLength(255)
                .HasColumnName("HOST_CLAIM_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.JoinUrl)
                .HasMaxLength(1000)
                .HasColumnName("JOIN_URL");
            entity.Property(e => e.ListUserAccess).HasColumnName("LIST_USER_ACCESS");
            entity.Property(e => e.ListUserJoin).HasColumnName("LIST_USER_JOIN");
            entity.Property(e => e.MeetingScheduleId).HasColumnName("MEETING_SCHEDULE_ID");
            entity.Property(e => e.Note).HasColumnName("NOTE");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.ZoomId)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ZOOM_ID");
            entity.Property(e => e.ZoomName)
                .HasMaxLength(255)
                .HasColumnName("ZOOM_NAME");
            entity.Property(e => e.ZoomPassword)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasColumnName("ZOOM_PASSWORD");
        });

        modelBuilder.Entity<ZoomReportError>(entity =>
        {
            entity
                .HasNoKey()
                .ToTable("ZOOM_REPORT_ERROR");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(255)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.ErrorContent)
                .HasMaxLength(2000)
                .HasColumnName("ERROR_CONTENT");
            entity.Property(e => e.Id)
                .ValueGeneratedOnAdd()
                .HasColumnName("ID");
        });

        modelBuilder.Entity<_1ProductEntityMappingLog>(entity =>
        {
            entity.HasKey(e => e.Id).HasName("PK__1.PRODUC__3214EC0721BB5F0B");

            entity.ToTable("1.PRODUCT_ENTITY_MAPPING_LOG");

            entity.Property(e => e.CreatedBy)
                .HasMaxLength(50)
                .HasColumnName("CREATED_BY");
            entity.Property(e => e.CreatedTime).HasColumnName("CREATED_TIME");
            entity.Property(e => e.FloorCode)
                .HasMaxLength(255)
                .HasColumnName("FLOOR_CODE");
            entity.Property(e => e.IsDeleted).HasColumnName("IS_DELETED");
            entity.Property(e => e.LineCode)
                .HasMaxLength(255)
                .HasColumnName("LINE_CODE");
            entity.Property(e => e.Ordering)
                .HasMaxLength(255)
                .HasColumnName("ORDERING");
            entity.Property(e => e.ProductQrCode)
                .HasMaxLength(255)
                .HasColumnName("PRODUCT_QR_CODE");
            entity.Property(e => e.Quantity)
                .HasColumnType("decimal(18, 2)")
                .HasColumnName("QUANTITY");
            entity.Property(e => e.RackCode)
                .HasMaxLength(255)
                .HasColumnName("RACK_CODE");
            entity.Property(e => e.RackPosition)
                .HasMaxLength(255)
                .HasColumnName("RACK_POSITION");
            entity.Property(e => e.Unit)
                .HasMaxLength(50)
                .HasColumnName("UNIT");
            entity.Property(e => e.UpdatedBy)
                .HasMaxLength(50)
                .HasColumnName("UPDATED_BY");
            entity.Property(e => e.UpdatedTime).HasColumnName("UPDATED_TIME");
            entity.Property(e => e.WhsCode)
                .HasMaxLength(255)
                .HasColumnName("WHS_CODE");
        });

        OnModelCreatingPartial(modelBuilder);
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}
